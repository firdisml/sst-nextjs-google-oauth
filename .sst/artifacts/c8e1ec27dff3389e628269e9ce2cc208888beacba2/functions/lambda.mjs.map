{
  "version": 3,
  "sources": ["../../../../node_modules/fast-xml-parser/src/util.js", "../../../../node_modules/fast-xml-parser/src/validator.js", "../../../../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js", "../../../../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js", "../../../../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js", "../../../../node_modules/strnum/strnum.js", "../../../../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js", "../../../../node_modules/fast-xml-parser/src/xmlparser/node2json.js", "../../../../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js", "../../../../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js", "../../../../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js", "../../../../node_modules/fast-xml-parser/src/fxp.js", "../../../../node_modules/aws-crt/lib/common/promise.ts", "../../../../node_modules/aws-crt/lib/common/cancel.ts", "../../../../node_modules/aws-crt/package.json", "../../../../node_modules/aws-crt/lib/common/platform.ts", "../../../../node_modules/aws-crt/lib/common/resource_safety.ts", "../../../../node_modules/aws-crt/lib/native/binding.js", "../../../../node_modules/aws-crt/lib/native/error.ts", "../../../../node_modules/aws-crt/lib/native/native_resource.ts", "../../../../node_modules/aws-crt/lib/common/io.ts", "../../../../node_modules/aws-crt/lib/native/io.ts", "../../../../node_modules/aws-crt/lib/native/auth.ts", "../../../../node_modules/aws-crt/lib/native/checksums.ts", "../../../../node_modules/aws-crt/lib/native/crt.ts", "../../../../node_modules/aws-crt/lib/native/crypto.ts", "../../../../node_modules/aws-crt/lib/common/event.ts", "../../../../node_modules/aws-crt/lib/native/eventstream_utils.ts", "../../../../node_modules/aws-crt/lib/native/eventstream.ts", "../../../../node_modules/aws-crt/lib/common/http.ts", "../../../../node_modules/aws-crt/lib/native/http.ts", "../../../../node_modules/aws-crt/lib/common/mqtt.ts", "../../../../node_modules/aws-crt/lib/common/aws_iot_shared.ts", "../../../../node_modules/aws-crt/lib/native/aws_iot.ts", "../../../../node_modules/aws-crt/lib/common/mqtt_shared.ts", "../../../../node_modules/aws-crt/lib/common/mqtt5.ts", "../../../../node_modules/aws-crt/lib/common/mqtt5_packet.ts", "../../../../node_modules/aws-crt/lib/native/mqtt5.ts", "../../../../node_modules/aws-crt/lib/native/aws_iot_mqtt5.ts", "../../../../node_modules/aws-crt/lib/native/iot.ts", "../../../../node_modules/aws-crt/lib/native/mqtt.ts", "../../../../node_modules/aws-crt/lib/index.ts", "../../../../node_modules/fast-jwt/src/error.js", "../../../../node_modules/fast-jwt/src/decoder.js", "../../../../node_modules/obliterator/iterator.js", "../../../../node_modules/obliterator/support.js", "../../../../node_modules/obliterator/foreach.js", "../../../../node_modules/mnemonist/utils/typed-arrays.js", "../../../../node_modules/mnemonist/utils/iterables.js", "../../../../node_modules/mnemonist/lru-cache.js", "../../../../node_modules/bn.js/lib/bn.js", "../../../../node_modules/inherits/inherits_browser.js", "../../../../node_modules/inherits/inherits.js", "../../../../node_modules/safer-buffer/safer.js", "../../../../node_modules/asn1.js/lib/asn1/base/reporter.js", "../../../../node_modules/asn1.js/lib/asn1/base/buffer.js", "../../../../node_modules/minimalistic-assert/index.js", "../../../../node_modules/asn1.js/lib/asn1/base/node.js", "../../../../node_modules/asn1.js/lib/asn1/constants/der.js", "../../../../node_modules/asn1.js/lib/asn1/encoders/der.js", "../../../../node_modules/asn1.js/lib/asn1/encoders/pem.js", "../../../../node_modules/asn1.js/lib/asn1/encoders/index.js", "../../../../node_modules/asn1.js/lib/asn1/decoders/der.js", "../../../../node_modules/asn1.js/lib/asn1/decoders/pem.js", "../../../../node_modules/asn1.js/lib/asn1/decoders/index.js", "../../../../node_modules/asn1.js/lib/asn1/api.js", "../../../../node_modules/asn1.js/lib/asn1/base/index.js", "../../../../node_modules/asn1.js/lib/asn1/constants/index.js", "../../../../node_modules/asn1.js/lib/asn1.js", "../../../../node_modules/safe-buffer/index.js", "../../../../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js", "../../../../node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js", "../../../../node_modules/fast-jwt/src/crypto.js", "../../../../node_modules/fast-jwt/src/utils.js", "../../../../node_modules/fast-jwt/src/verifier.js", "../../../../node_modules/fast-jwt/src/signer.js", "../../../../node_modules/fast-jwt/src/index.js", "../../../../node_modules/openid-client/lib/errors.js", "../../../../node_modules/jose/dist/node/cjs/runtime/digest.js", "../../../../node_modules/jose/dist/node/cjs/lib/buffer_utils.js", "../../../../node_modules/jose/dist/node/cjs/runtime/base64url.js", "../../../../node_modules/jose/dist/node/cjs/util/errors.js", "../../../../node_modules/jose/dist/node/cjs/runtime/random.js", "../../../../node_modules/jose/dist/node/cjs/lib/iv.js", "../../../../node_modules/jose/dist/node/cjs/lib/check_iv_length.js", "../../../../node_modules/jose/dist/node/cjs/runtime/is_key_object.js", "../../../../node_modules/jose/dist/node/cjs/runtime/check_cek_length.js", "../../../../node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js", "../../../../node_modules/jose/dist/node/cjs/runtime/cbc_tag.js", "../../../../node_modules/jose/dist/node/cjs/runtime/webcrypto.js", "../../../../node_modules/jose/dist/node/cjs/lib/crypto_key.js", "../../../../node_modules/jose/dist/node/cjs/lib/invalid_key_input.js", "../../../../node_modules/jose/dist/node/cjs/runtime/ciphers.js", "../../../../node_modules/jose/dist/node/cjs/runtime/is_key_like.js", "../../../../node_modules/jose/dist/node/cjs/runtime/decrypt.js", "../../../../node_modules/jose/dist/node/cjs/runtime/zlib.js", "../../../../node_modules/jose/dist/node/cjs/lib/is_disjoint.js", "../../../../node_modules/jose/dist/node/cjs/lib/is_object.js", "../../../../node_modules/jose/dist/node/cjs/runtime/aeskw.js", "../../../../node_modules/jose/dist/node/cjs/runtime/get_named_curve.js", "../../../../node_modules/jose/dist/node/cjs/runtime/ecdhes.js", "../../../../node_modules/jose/dist/node/cjs/lib/check_p2s.js", "../../../../node_modules/jose/dist/node/cjs/runtime/pbes2kw.js", "../../../../node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js", "../../../../node_modules/jose/dist/node/cjs/runtime/rsaes.js", "../../../../node_modules/jose/dist/node/cjs/lib/cek.js", "../../../../node_modules/jose/dist/node/cjs/runtime/asn1.js", "../../../../node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js", "../../../../node_modules/jose/dist/node/cjs/runtime/flags.js", "../../../../node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js", "../../../../node_modules/jose/dist/node/cjs/key/import.js", "../../../../node_modules/jose/dist/node/cjs/lib/check_key_type.js", "../../../../node_modules/jose/dist/node/cjs/runtime/encrypt.js", "../../../../node_modules/jose/dist/node/cjs/lib/aesgcmkw.js", "../../../../node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js", "../../../../node_modules/jose/dist/node/cjs/lib/validate_crit.js", "../../../../node_modules/jose/dist/node/cjs/lib/validate_algorithms.js", "../../../../node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js", "../../../../node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js", "../../../../node_modules/jose/dist/node/cjs/jwe/general/decrypt.js", "../../../../node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js", "../../../../node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js", "../../../../node_modules/jose/dist/node/cjs/key/export.js", "../../../../node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js", "../../../../node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js", "../../../../node_modules/jose/dist/node/cjs/jwe/general/encrypt.js", "../../../../node_modules/jose/dist/node/cjs/runtime/dsa_digest.js", "../../../../node_modules/jose/dist/node/cjs/runtime/node_key.js", "../../../../node_modules/jose/dist/node/cjs/runtime/hmac_digest.js", "../../../../node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js", "../../../../node_modules/jose/dist/node/cjs/runtime/sign.js", "../../../../node_modules/jose/dist/node/cjs/runtime/verify.js", "../../../../node_modules/jose/dist/node/cjs/jws/flattened/verify.js", "../../../../node_modules/jose/dist/node/cjs/jws/compact/verify.js", "../../../../node_modules/jose/dist/node/cjs/jws/general/verify.js", "../../../../node_modules/jose/dist/node/cjs/lib/epoch.js", "../../../../node_modules/jose/dist/node/cjs/lib/secs.js", "../../../../node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js", "../../../../node_modules/jose/dist/node/cjs/jwt/verify.js", "../../../../node_modules/jose/dist/node/cjs/jwt/decrypt.js", "../../../../node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js", "../../../../node_modules/jose/dist/node/cjs/jws/flattened/sign.js", "../../../../node_modules/jose/dist/node/cjs/jws/compact/sign.js", "../../../../node_modules/jose/dist/node/cjs/jws/general/sign.js", "../../../../node_modules/jose/dist/node/cjs/jwt/produce.js", "../../../../node_modules/jose/dist/node/cjs/jwt/sign.js", "../../../../node_modules/jose/dist/node/cjs/jwt/encrypt.js", "../../../../node_modules/jose/dist/node/cjs/jwk/thumbprint.js", "../../../../node_modules/jose/dist/node/cjs/jwk/embedded.js", "../../../../node_modules/jose/dist/node/cjs/jwks/local.js", "../../../../node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js", "../../../../node_modules/jose/dist/node/cjs/jwks/remote.js", "../../../../node_modules/jose/dist/node/cjs/jwt/unsecured.js", "../../../../node_modules/jose/dist/node/cjs/util/base64url.js", "../../../../node_modules/jose/dist/node/cjs/util/decode_protected_header.js", "../../../../node_modules/jose/dist/node/cjs/util/decode_jwt.js", "../../../../node_modules/jose/dist/node/cjs/runtime/generate.js", "../../../../node_modules/jose/dist/node/cjs/key/generate_key_pair.js", "../../../../node_modules/jose/dist/node/cjs/key/generate_secret.js", "../../../../node_modules/jose/dist/node/cjs/index.js", "../../../../node_modules/oidc-token-hash/lib/shake256.js", "../../../../node_modules/oidc-token-hash/lib/index.js", "../../../../node_modules/openid-client/lib/helpers/is_key_object.js", "../../../../node_modules/openid-client/lib/helpers/base64url.js", "../../../../node_modules/openid-client/lib/helpers/decode_jwt.js", "../../../../node_modules/openid-client/lib/helpers/is_plain_object.js", "../../../../node_modules/openid-client/lib/helpers/defaults.js", "../../../../node_modules/openid-client/lib/helpers/www_authenticate_parser.js", "../../../../node_modules/openid-client/lib/helpers/assert.js", "../../../../node_modules/openid-client/lib/helpers/pick.js", "../../../../node_modules/openid-client/lib/helpers/process_response.js", "../../../../node_modules/openid-client/lib/helpers/unix_timestamp.js", "../../../../node_modules/openid-client/lib/token_set.js", "../../../../node_modules/openid-client/lib/helpers/generators.js", "../../../../node_modules/yallist/iterator.js", "../../../../node_modules/yallist/yallist.js", "../../../../node_modules/lru-cache/index.js", "../../../../node_modules/openid-client/package.json", "../../../../node_modules/openid-client/lib/helpers/consts.js", "../../../../node_modules/openid-client/lib/helpers/request.js", "../../../../node_modules/openid-client/lib/helpers/weak_cache.js", "../../../../node_modules/openid-client/lib/helpers/deep_clone.js", "../../../../node_modules/openid-client/lib/helpers/keystore.js", "../../../../node_modules/openid-client/lib/helpers/merge.js", "../../../../node_modules/openid-client/lib/helpers/client.js", "../../../../node_modules/openid-client/node_modules/object-hash/index.js", "../../../../node_modules/openid-client/lib/helpers/issuer.js", "../../../../node_modules/openid-client/lib/device_flow_handle.js", "../../../../node_modules/openid-client/lib/client.js", "../../../../node_modules/openid-client/lib/issuer_registry.js", "../../../../node_modules/openid-client/lib/helpers/webfinger_normalize.js", "../../../../node_modules/openid-client/lib/issuer.js", "../../../../node_modules/openid-client/lib/passport_strategy.js", "../../../../node_modules/openid-client/lib/index.js", "../../../../node_modules/@aws-sdk/endpoint-cache/node_modules/obliterator/iterator.js", "../../../../node_modules/@aws-sdk/endpoint-cache/node_modules/obliterator/foreach.js", "../../../../node_modules/@aws-sdk/endpoint-cache/node_modules/mnemonist/utils/typed-arrays.js", "../../../../node_modules/@aws-sdk/endpoint-cache/node_modules/mnemonist/utils/iterables.js", "../../../../node_modules/@aws-sdk/endpoint-cache/node_modules/mnemonist/lru-cache.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/NoOpLogger.js", "../../../../node_modules/@aws-sdk/middleware-stack/dist-es/MiddlewareStack.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/client.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/command.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/constants.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/parse-utils.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/date-utils.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/exceptions.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/default-error-handler.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/defaults-mode.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/emitWarningIfUnsupportedVersion.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/extended-encode-uri-component.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/get-value-from-text-node.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/lazy-json.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/object-mapping.js", "../../../../node_modules/@aws-sdk/smithy-client/dist-es/serde-json.js", "../../../../node_modules/@aws-sdk/middleware-endpoint/dist-es/service-customizations/s3.js", "../../../../node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js", "../../../../node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js", "../../../../node_modules/@aws-sdk/querystring-parser/dist-es/index.js", "../../../../node_modules/@aws-sdk/url-parser/dist-es/index.js", "../../../../node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/toEndpointV1.js", "../../../../node_modules/@aws-sdk/middleware-endpoint/dist-es/endpointMiddleware.js", "../../../../node_modules/@aws-sdk/middleware-serde/dist-es/deserializerMiddleware.js", "../../../../node_modules/@aws-sdk/middleware-serde/dist-es/serializerMiddleware.js", "../../../../node_modules/@aws-sdk/middleware-serde/dist-es/serdePlugin.js", "../../../../node_modules/@aws-sdk/middleware-endpoint/dist-es/getEndpointPlugin.js", "../../../../node_modules/@aws-sdk/util-middleware/dist-es/normalizeProvider.js", "../../../../node_modules/@aws-sdk/middleware-endpoint/dist-es/resolveEndpointConfig.js", "../../../../node_modules/@aws-sdk/protocol-http/dist-es/FieldPosition.js", "../../../../node_modules/@aws-sdk/protocol-http/dist-es/httpRequest.js", "../../../../node_modules/@aws-sdk/protocol-http/dist-es/httpResponse.js", "../../../../node_modules/uuid/dist/esm-node/rng.js", "../../../../node_modules/uuid/dist/esm-node/regex.js", "../../../../node_modules/uuid/dist/esm-node/validate.js", "../../../../node_modules/uuid/dist/esm-node/stringify.js", "../../../../node_modules/uuid/dist/esm-node/v4.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/models/SSMServiceException.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/models/models_0.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/models/models_1.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/protocols/Aws_json1_1.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/commands/GetParametersCommand.js", "../../../../node_modules/@aws-sdk/util-config-provider/dist-es/booleanSelector.js", "../../../../node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js", "../../../../node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js", "../../../../node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/config.js", "../../../../node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/isFipsRegion.js", "../../../../node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/getRealRegion.js", "../../../../node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/resolveRegionConfig.js", "../../../../node_modules/@aws-sdk/middleware-content-length/dist-es/index.js", "../../../../node_modules/@aws-sdk/middleware-host-header/dist-es/index.js", "../../../../node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js", "../../../../node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js", "../../../../node_modules/@aws-sdk/util-retry/dist-es/config.js", "../../../../node_modules/@aws-sdk/service-error-classification/dist-es/constants.js", "../../../../node_modules/@aws-sdk/service-error-classification/dist-es/index.js", "../../../../node_modules/@aws-sdk/util-retry/dist-es/DefaultRateLimiter.js", "../../../../node_modules/@aws-sdk/util-retry/dist-es/constants.js", "../../../../node_modules/@aws-sdk/util-retry/dist-es/defaultRetryBackoffStrategy.js", "../../../../node_modules/@aws-sdk/util-retry/dist-es/defaultRetryToken.js", "../../../../node_modules/@aws-sdk/util-retry/dist-es/StandardRetryStrategy.js", "../../../../node_modules/@aws-sdk/util-retry/dist-es/AdaptiveRetryStrategy.js", "../../../../node_modules/@aws-sdk/middleware-retry/dist-es/util.js", "../../../../node_modules/@aws-sdk/middleware-retry/dist-es/configurations.js", "../../../../node_modules/@aws-sdk/middleware-retry/dist-es/retryMiddleware.js", "../../../../node_modules/@aws-sdk/property-provider/dist-es/ProviderError.js", "../../../../node_modules/@aws-sdk/property-provider/dist-es/CredentialsProviderError.js", "../../../../node_modules/@aws-sdk/property-provider/dist-es/TokenProviderError.js", "../../../../node_modules/@aws-sdk/property-provider/dist-es/chain.js", "../../../../node_modules/@aws-sdk/property-provider/dist-es/fromStatic.js", "../../../../node_modules/@aws-sdk/property-provider/dist-es/memoize.js", "../../../../node_modules/@aws-sdk/util-hex-encoding/dist-es/index.js", "../../../../node_modules/@aws-sdk/is-array-buffer/dist-es/index.js", "../../../../node_modules/@aws-sdk/util-buffer-from/dist-es/index.js", "../../../../node_modules/@aws-sdk/util-utf8/dist-es/fromUtf8.js", "../../../../node_modules/@aws-sdk/util-utf8/dist-es/toUint8Array.js", "../../../../node_modules/@aws-sdk/util-utf8/dist-es/toUtf8.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/constants.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/credentialDerivation.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalHeaders.js", "../../../../node_modules/@aws-sdk/util-uri-escape/dist-es/escape-uri.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalQuery.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/getPayloadHash.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/headerUtil.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/cloneRequest.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/moveHeadersToQuery.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/prepareRequest.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/utilDate.js", "../../../../node_modules/@aws-sdk/signature-v4/dist-es/SignatureV4.js", "../../../../node_modules/@aws-sdk/middleware-signing/dist-es/configurations.js", "../../../../node_modules/@aws-sdk/middleware-signing/dist-es/utils/getSkewCorrectedDate.js", "../../../../node_modules/@aws-sdk/middleware-signing/dist-es/utils/isClockSkewed.js", "../../../../node_modules/@aws-sdk/middleware-signing/dist-es/utils/getUpdatedSystemClockOffset.js", "../../../../node_modules/@aws-sdk/middleware-signing/dist-es/middleware.js", "../../../../node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partitions.json", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/debug/debugId.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/debug/toDebugString.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointError.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/index.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/index.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/isValidHostLabel.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/booleanEquals.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttrPathList.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttr.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/isSet.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/not.js", "../../../../node_modules/@aws-sdk/types/dist-es/auth.js", "../../../../node_modules/@aws-sdk/types/dist-es/dns.js", "../../../../node_modules/@aws-sdk/types/dist-es/endpoint.js", "../../../../node_modules/@aws-sdk/types/dist-es/transfer.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/parseURL.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/stringEquals.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/substring.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/lib/uriEncode.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTemplate.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getReferenceValue.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateExpression.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/callFunction.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateCondition.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateConditions.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointHeaders.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperty.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperties.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointUrl.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateEndpointRule.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateErrorRule.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTreeRule.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateRules.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js", "../../../../node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js", "../../../../node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/endpoint/EndpointParameters.js", "../../../../node_modules/@aws-sdk/client-ssm/package.json", "../../../../node_modules/@aws-sdk/client-sts/dist-es/protocols/Aws_query.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/models/STSServiceException.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/models/models_0.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleCommand.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleWithWebIdentityCommand.js", "../../../../node_modules/@aws-sdk/middleware-sdk-sts/dist-es/index.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/endpoint/EndpointParameters.js", "../../../../node_modules/@aws-sdk/client-sts/package.json", "../../../../node_modules/@aws-sdk/client-sts/dist-es/defaultStsRoleAssumers.js", "../../../../node_modules/@aws-sdk/credential-provider-env/dist-es/fromEnv.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getHomeDir.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getProfileName.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getSSOTokenFilepath.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getSSOTokenFromFile.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getConfigFilepath.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getCredentialsFilepath.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getProfileData.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/parseIni.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/slurpFile.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/loadSharedConfigFiles.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getSsoSessionData.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/loadSsoSessionData.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/mergeConfigFiles.js", "../../../../node_modules/@aws-sdk/shared-ini-file-loader/dist-es/parseKnownFiles.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/fromContainerMetadata.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/httpRequest.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/ImdsCredentials.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/RemoteProviderInit.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/retry.js", "../../../../node_modules/@aws-sdk/node-config-provider/dist-es/fromEnv.js", "../../../../node_modules/@aws-sdk/node-config-provider/dist-es/fromSharedConfigFiles.js", "../../../../node_modules/@aws-sdk/node-config-provider/dist-es/fromStatic.js", "../../../../node_modules/@aws-sdk/node-config-provider/dist-es/configLoader.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/config/Endpoint.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/config/EndpointConfigOptions.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/config/EndpointMode.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/config/EndpointModeConfigOptions.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/utils/getInstanceMetadataEndpoint.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/utils/getExtendedInstanceMetadataCredentials.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/utils/staticStabilityProvider.js", "../../../../node_modules/@aws-sdk/credential-provider-imds/dist-es/fromInstanceMetadata.js", "../../../../node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveCredentialSource.js", "../../../../node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveAssumeRoleCredentials.js", "../../../../node_modules/@aws-sdk/credential-provider-process/dist-es/resolveProcessCredentials.js", "../../../../node_modules/@aws-sdk/credential-provider-process/dist-es/getValidatedProcessCredentials.js", "../../../../node_modules/@aws-sdk/credential-provider-process/dist-es/fromProcess.js", "../../../../node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveProcessCredentials.js", "../../../../node_modules/@aws-sdk/credential-provider-sso/dist-es/isSsoProfile.js", "../../../../node_modules/@aws-sdk/client-sso/dist-es/models/SSOServiceException.js", "../../../../node_modules/@aws-sdk/client-sso/dist-es/models/models_0.js", "../../../../node_modules/@aws-sdk/client-sso/dist-es/protocols/Aws_restJson1.js", "../../../../node_modules/@aws-sdk/client-sso/dist-es/commands/GetRoleCredentialsCommand.js", "../../../../node_modules/@aws-sdk/client-sso/dist-es/endpoint/EndpointParameters.js", "../../../../node_modules/@aws-sdk/client-sso/package.json", "../../../../node_modules/@aws-sdk/hash-node/dist-es/index.js", "../../../../node_modules/@aws-sdk/querystring-builder/dist-es/index.js", "../../../../node_modules/@aws-sdk/node-http-handler/dist-es/node-http-handler.js", "../../../../node_modules/@aws-sdk/node-http-handler/dist-es/constants.js", "../../../../node_modules/@aws-sdk/node-http-handler/dist-es/get-transformed-headers.js", "../../../../node_modules/@aws-sdk/node-http-handler/dist-es/set-connection-timeout.js", "../../../../node_modules/@aws-sdk/node-http-handler/dist-es/set-socket-timeout.js", "../../../../node_modules/@aws-sdk/node-http-handler/dist-es/write-request-body.js", "../../../../node_modules/@aws-sdk/node-http-handler/dist-es/set-socket-keep-alive.js", "../../../../node_modules/@aws-sdk/node-http-handler/dist-es/node-http2-connection-pool.js", "../../../../node_modules/@aws-sdk/node-http-handler/dist-es/stream-collector/collector.js", "../../../../node_modules/@aws-sdk/node-http-handler/dist-es/stream-collector/index.js", "../../../../node_modules/@aws-sdk/util-body-length-node/dist-es/calculateBodyLength.js", "../../../../node_modules/@aws-sdk/util-user-agent-node/dist-es/index.js", "../../../../node_modules/@aws-sdk/util-user-agent-node/dist-es/is-crt-available.js", "../../../../node_modules/@aws-sdk/util-base64/dist-es/fromBase64.js", "../../../../node_modules/@aws-sdk/util-base64/dist-es/toBase64.js", "../../../../node_modules/@aws-sdk/client-sso/dist-es/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/client-sso/dist-es/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.shared.js", "../../../../node_modules/@aws-sdk/util-defaults-mode-node/dist-es/constants.js", "../../../../node_modules/@aws-sdk/util-defaults-mode-node/dist-es/defaultsModeConfig.js", "../../../../node_modules/@aws-sdk/util-defaults-mode-node/dist-es/resolveDefaultsModeConfig.js", "../../../../node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.js", "../../../../node_modules/@aws-sdk/client-sso/dist-es/SSOClient.js", "../../../../node_modules/@aws-sdk/token-providers/dist-es/constants.js", "../../../../node_modules/@aws-sdk/client-sso-oidc/dist-es/models/SSOOIDCServiceException.js", "../../../../node_modules/@aws-sdk/client-sso-oidc/dist-es/models/models_0.js", "../../../../node_modules/@aws-sdk/client-sso-oidc/dist-es/protocols/Aws_restJson1.js", "../../../../node_modules/@aws-sdk/client-sso-oidc/dist-es/commands/CreateTokenCommand.js", "../../../../node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/EndpointParameters.js", "../../../../node_modules/@aws-sdk/client-sso-oidc/package.json", "../../../../node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/client-sso-oidc/dist-es/runtimeConfig.shared.js", "../../../../node_modules/@aws-sdk/client-sso-oidc/dist-es/runtimeConfig.js", "../../../../node_modules/@aws-sdk/client-sso-oidc/dist-es/SSOOIDCClient.js", "../../../../node_modules/@aws-sdk/token-providers/dist-es/getSsoOidcClient.js", "../../../../node_modules/@aws-sdk/token-providers/dist-es/getNewSsoOidcToken.js", "../../../../node_modules/@aws-sdk/token-providers/dist-es/validateTokenExpiry.js", "../../../../node_modules/@aws-sdk/token-providers/dist-es/validateTokenKey.js", "../../../../node_modules/@aws-sdk/token-providers/dist-es/writeSSOTokenToFile.js", "../../../../node_modules/@aws-sdk/token-providers/dist-es/fromSso.js", "../../../../node_modules/@aws-sdk/credential-provider-sso/dist-es/resolveSSOCredentials.js", "../../../../node_modules/@aws-sdk/credential-provider-sso/dist-es/validateSsoProfile.js", "../../../../node_modules/@aws-sdk/credential-provider-sso/dist-es/fromSSO.js", "../../../../node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveSsoCredentials.js", "../../../../node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveStaticCredentials.js", "../../../../node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromTokenFile.js", "../../../../node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js", "../../../../node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveWebIdentityCredentials.js", "../../../../node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveProfileData.js", "../../../../node_modules/@aws-sdk/credential-provider-ini/dist-es/fromIni.js", "../../../../node_modules/@aws-sdk/credential-provider-node/dist-es/remoteProvider.js", "../../../../node_modules/@aws-sdk/credential-provider-node/dist-es/defaultProvider.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.shared.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/STSClient.js", "../../../../node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.shared.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/runtimeConfig.js", "../../../../node_modules/@aws-sdk/client-ssm/dist-es/SSMClient.js", "../../../../node_modules/sst/node/util/index.js", "../../../../node_modules/sst/context/context.js", "../../../../node_modules/sst/context/handler.js", "../../../../node_modules/sst/node/api/index.js", "../../../../node_modules/sst/node/auth/auth.js", "../../../../node_modules/sst/node/auth/session.js", "../../../../node_modules/sst/node/auth/adapter/adapter.js", "../../../../node_modules/openid-client/lib/index.mjs", "../../../../node_modules/sst/node/auth/adapter/oauth.js", "../../../../node_modules/sst/node/auth/adapter/oidc.js", "../../../../node_modules/sst/node/auth/adapter/google.js", "../../../../node_modules/sst/node/table/index.js", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/models/DynamoDBServiceException.js", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/models/models_0.js", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/protocols/Aws_json1_0.js", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/commands/DescribeEndpointsCommand.js", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/commands/PutItemCommand.js", "../../../../node_modules/@aws-sdk/middleware-endpoint-discovery/dist-es/configurations.js", "../../../../node_modules/@aws-sdk/endpoint-cache/dist-es/EndpointCache.js", "../../../../node_modules/@aws-sdk/middleware-endpoint-discovery/dist-es/resolveEndpointDiscoveryConfig.js", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/endpoint/EndpointParameters.js", "../../../../node_modules/@aws-sdk/client-dynamodb/package.json", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/runtimeConfig.shared.js", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/runtimeConfig.js", "../../../../node_modules/@aws-sdk/client-dynamodb/dist-es/DynamoDBClient.js", "../../../../node_modules/@aws-sdk/util-dynamodb/dist-es/convertToAttr.js", "../../../../node_modules/@aws-sdk/util-dynamodb/dist-es/marshall.js", "../../../../functions/lambda.ts"],
  "sourcesContent": ["'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n", "'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n", "\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;", "'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;", "//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, entity = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) {\n                if( hasBody && \n                     xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'N' &&\n                     xmlData[i+4] === 'T' &&\n                     xmlData[i+5] === 'I' &&\n                     xmlData[i+6] === 'T' &&\n                     xmlData[i+7] === 'Y'\n                ){\n                    i += 7;\n                    entity = true;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'L' &&\n                     xmlData[i+4] === 'E' &&\n                     xmlData[i+5] === 'M' &&\n                     xmlData[i+6] === 'E' &&\n                     xmlData[i+7] === 'N' &&\n                     xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'A' &&\n                    xmlData[i+3] === 'T' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'L' &&\n                    xmlData[i+6] === 'I' &&\n                    xmlData[i+7] === 'S' &&\n                    xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'N' &&\n                    xmlData[i+3] === 'O' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'A' &&\n                    xmlData[i+6] === 'T' &&\n                    xmlData[i+7] === 'I' &&\n                    xmlData[i+8] === 'O' &&\n                    xmlData[i+9] === 'N'\n                ){\n                    //Not supported\n                    i += 9;\n                }else if( //comment\n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === '-' &&\n                    xmlData[i+3] === '-'\n                ){\n                    comment = true;\n                }else{\n                    throw new Error(\"Invalid DOCTYPE\");\n                }\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') {\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    if(entity) {\n                        parseEntityExp(exp, entities);\n                        entity = false;\n                    }\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst entityRegex = RegExp(\"^\\\\s([a-zA-z0-0]+)[ \\t](['\\\"])([^&]+)\\\\2\");\nfunction parseEntityExp(exp, entities){\n    const match = entityRegex.exec(exp);\n    if(match){\n        entities[ match[1] ] = {\n            regx : RegExp( `&${match[1]};`,\"g\"),\n            val: match[3]\n        };\n    }\n}\nmodule.exports = readDocType;", "const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n", "'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"\u00A2\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"\u00A3\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"\u00A5\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"\u20AC\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"\u00A9\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"\u00AE\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"\u20B9\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n        \n        currentNode = this.tagsNodeStack.pop();//avoid recurssion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath);\n          }\n          currentNode.addChild(childNode);\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n        }\n\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //boolean tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          currentNode.addChild(childNode);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            currentNode.addChild(childNode);\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            currentNode.addChild(childNode);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-dobule quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n", "'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const propCount = Object.keys(obj).length;\n  if( propCount === 0 || (propCount === 1 && obj[options.textNodeName]) ) return true;\n  return false;\n}\nexports.prettify = prettify;\n", "const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;", "const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n", "'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          val += this.processTextOrObjNode(item, key, level)\n        } else {\n          val += this.buildTextValNode(item, key, '', level);\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    if (attrStr && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n", "'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing promise-related utility types and functions\n *\n * @packageDocumentation\n * @module promise\n */\n\n/**\n * Signature for a function that will perform some arbitrary promise-related cleanup task, like removing one or\n * more event listeners from an EventEmitter.\n */\nexport type PromiseCleanupFunctor = () => void;\n\n/**\n * A helper function that takes a promise and creates a wrapper promise that invokes a cleanup function when the inner\n * promise is completed for any reason.  The primary use is to remove event listeners related to promise completion\n * when the promise actually completes.  This allows us to keep the number of listeners on a CancelController bounded by\n * the number of incomplete promises associated with it.  If we didn't clean up, the listener set would grow\n * without limit.\n *\n * For cancellation, this leads to an internal usage pattern that is strongly recommended:\n *\n * ```\n * async doSomethingCancellable(...) : Promise<...> {\n *    removeListenerFunctor = undefined;\n *\n *    innerPromise = new Promise(async (resolve, reject) => {\n *       ...\n *\n *       cancelListenerFunction = () => { clean up and reject innerPromise };\n *       removeListenerFunctor = cancelController.addListener(cancelListenerFunction);\n *\n *       ...\n *    }\n *\n *    return makeSelfCleaningPromise(innerPromise, removeListenerFunctor);\n * }\n * ```\n *\n * @param promise promise to wrap with automatic cleanup\n * @param cleaner cleaner function to invoke when the promise is completed\n *\n * @return a promise with matching result/err, that invokes the cleaner function on inner promise completion\n */\nexport function makeSelfCleaningPromise<ResultType>(promise: Promise<ResultType>, cleaner? : PromiseCleanupFunctor) : Promise<ResultType> {\n    if (!cleaner) {\n        return promise;\n    }\n\n    return promise.finally(() => { cleaner(); });\n}\n\n/**\n * Generic type signature for a promise resolution function\n */\nexport type LiftedResolver<ResultType> = (value : ResultType) => void;\n\n/**\n * Generic type signature for a promise rejection function\n */\nexport type LiftedRejecter = (error? : any) => void;\n\n/**\n * A promise variant that makes the resolve and reject functions available for external invocations.\n *\n * Useful for situations where you want to await for something that might never complete while still allowing\n * the promise to be cancellable.\n *\n * You get around the potentially infinite await by not awaiting at all and instead letting external events trigger\n * resolve and reject (in particular, CancelController).\n */\nexport interface LiftedPromise<ResultType> {\n\n    /**\n     * The actual promise whose resolve and reject methods have been exposed.\n     */\n    promise: Promise<ResultType>;\n\n    /**\n     * Resolve function for the associated promise\n     */\n    resolve: LiftedResolver<ResultType>;\n\n    /**\n     * Reject function for the associated promise\n     */\n    reject: LiftedRejecter;\n}\n\n/**\n * Factory function to create a new LiftedPromise\n *\n * @param promiseBody optional body function to invoke as part of promise creation\n *\n * @return a promise whose resolve and reject methods have been lifted out of the internal body function and made\n * available to external actors\n */\nexport function newLiftedPromise<ResultType>(promiseBody?: (resolve : LiftedResolver<ResultType>, reject : LiftedRejecter) => void) : LiftedPromise<ResultType> {\n    let localResolve : LiftedResolver<ResultType> | undefined = undefined;\n    let localReject : LiftedRejecter | undefined = undefined;\n\n    let promise = new Promise<ResultType>((resolve, reject) => {\n        localResolve = resolve;\n        localReject = reject;\n    });\n\n    if (!localResolve || !localReject) {\n        // should never happen\n        throw new Error(\"Failed to bind resolve and reject when making lifted promise\");\n    }\n\n    if (promiseBody) {\n        promiseBody(localResolve, localReject);\n    }\n\n    return {\n        promise : promise,\n        resolve: localResolve,\n        reject : localReject\n    };\n}\n\n\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing support for cancelling asynchronous operations\n *\n * @packageDocumentation\n * @module cancel\n */\n\n\nimport {EventEmitter} from \"events\";\nimport * as promise from \"./promise\";\n\n/**\n * Callback signature for when cancel() has been invoked on a CancelController\n */\nexport type CancelListener = () => void;\n\n/**\n * Abstract interface for an object capable of cancelling asynchronous operations.\n *\n * Modern browsers and Node 15+ include an AbortController which essentially does the same thing.  But our baseline\n * is still node 10, so we provide our own implementation.  Also, Abort is, unfortunately, a problematic term, so we\n * stick to Cancel.\n */\nexport interface ICancelController {\n\n    /**\n     * API to invoke to cancel all asynchronous operations connected to this controller\n     */\n    cancel() : void;\n\n    /**\n     * Checks whether or not the controller is in the cancelled state\n     */\n    hasBeenCancelled() : boolean;\n\n    /**\n     * Registers a callback to be notified when cancel() is invoked externally.  In general, the callback\n     * will cancel an asynchronous operation by rejecting the associated promise.\n     *\n     * IMPORTANT: The listener is invoked synchronously if the controller has already been cancelled.\n     *\n     * @param listener - function to invoke on cancel; invoked synchronously if the controller has already been\n     * cancelled\n     *\n     * @return undefined if the controller has already been cancelled, otherwise a function object whose invocation\n     * will remove the listener from the controller's event emitter.\n     *\n     */\n    addListener(listener: CancelListener) : promise.PromiseCleanupFunctor | undefined;\n\n}\n\nexport const EVENT_NAME = 'cancelled';\n\n/**\n * Signature for a factory function that can create EventEmitter objects\n */\nexport type EventEmitterFactory = () => EventEmitter;\n\n/**\n * Configuration options for the CRT implementation of ICancelController\n */\nexport interface CancelControllerOptions {\n\n    /**\n     * Event emitters have, by default, a small maximum number of listeners.  When that default is insufficient for\n     * a use case, this factory option allows for customization of how the internal event emitter is created.\n     */\n    emitterFactory? : EventEmitterFactory;\n}\n\n/**\n * CRT implementation of the ICancelController interface\n */\nexport class CancelController implements ICancelController {\n\n    private cancelled : boolean;\n    private emitter : EventEmitter;\n\n    public constructor(options?: CancelControllerOptions) {\n        this.cancelled = false;\n\n        if (options && options.emitterFactory) {\n            this.emitter = options.emitterFactory();\n        } else {\n            this.emitter = new EventEmitter();\n        }\n    }\n\n    /**\n     * Cancels all asynchronous operations associated with this controller\n     */\n    public cancel() {\n        if (!this.cancelled) {\n            this.cancelled = true;\n            this.emitter.emit(EVENT_NAME);\n            this.emitter.removeAllListeners(EVENT_NAME);\n        }\n    }\n\n    /**\n     * Checks whether or not the controller is in the cancelled state\n     */\n    public hasBeenCancelled() {\n        return this.cancelled;\n    }\n\n    /**\n     * Registers a callback to be notified when cancel() is invoked externally.  In general, the callback\n     * will cancel an asynchronous operation by rejecting the associated promise.\n     *\n     * IMPORTANT: The listener is invoked synchronously if the controller has already been cancelled.\n     *\n     * @param listener - function to invoke on cancel; invoked synchronously if the controller has been cancelled\n     *\n     * @return undefined if the controller has already been cancelled, otherwise a function object whose invocation\n     * will remove the listener from the controller's event emitter.\n     *\n     */\n    public addListener(listener: CancelListener) : promise.PromiseCleanupFunctor | undefined {\n        if (this.cancelled) {\n            listener();\n            return undefined;\n        }\n\n        this.emitter.on(EVENT_NAME, listener);\n\n        return () => { this.emitter.removeListener(EVENT_NAME, listener); };\n    }\n\n}\n\n/**\n * Configuration options for creating a promise that can be rejected by cancellation and resolved by the receipt\n * of an event from an EventEmitter.\n */\nexport interface CancellableNextEventPromiseOptions<ResultType> {\n\n    /**\n     * Optional cancel controller that can cancel the created promise\n     */\n    cancelController? : ICancelController;\n\n    /**\n     * Event emitter to listen to for potential promise completion\n     */\n    emitter : EventEmitter;\n\n    /**\n     * Name of the event to listen on for potential promise completion\n     */\n    eventName : string;\n\n    /**\n     * Optional transformation function for the event payload\n     */\n    eventDataTransformer? : (eventData : any) => ResultType;\n\n    /**\n     * Message to reject the promise with if cancellation is invoked\n     */\n    cancelMessage? : string;\n}\n\n/**\n * Creates a promise that can be rejected by a CancelController and resolved by the receipt of an event from an\n * EventEmitter.\n *\n * @param config promise creation options\n */\nexport function newCancellablePromiseFromNextEvent<ResultType>(config: CancellableNextEventPromiseOptions<ResultType>) : Promise<ResultType> {\n    let onEvent : ((eventData : any) => void) | undefined = undefined;\n    let cancelRemoveListener : promise.PromiseCleanupFunctor | undefined = undefined;\n\n    let liftedPromise : promise.LiftedPromise<ResultType> = promise.newLiftedPromise<ResultType>();\n\n    onEvent = (eventData : any) => {\n        try {\n            if (config.eventDataTransformer) {\n                liftedPromise.resolve(config.eventDataTransformer(eventData));\n            } else {\n                liftedPromise.resolve(eventData as ResultType);\n            }\n        } catch (err) {\n            liftedPromise.reject(err);\n        }\n    }\n\n    config.emitter.addListener(config.eventName, onEvent);\n\n    if (config.cancelController) {\n        cancelRemoveListener = config.cancelController.addListener(() => {\n            liftedPromise.reject(config.cancelMessage);\n        });\n    }\n\n    return promise.makeSelfCleaningPromise(liftedPromise.promise, () => {\n        if (onEvent) {\n            config.emitter.removeListener(config.eventName, onEvent);\n        }\n\n        if (cancelRemoveListener) {\n            cancelRemoveListener();\n        }\n    });\n}\n", "{\n  \"name\": \"aws-crt\",\n  \"version\": \"1.15.16\",\n  \"description\": \"NodeJS/browser bindings to the aws-c-* libraries\",\n  \"homepage\": \"https://github.com/awslabs/aws-crt-nodejs\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/awslabs/aws-crt-nodejs.git\"\n  },\n  \"contributors\": [\n    \"AWS Common Runtime Team <aws-sdk-common-runtime@amazon.com>\"\n  ],\n  \"license\": \"Apache-2.0\",\n  \"main\": \"./dist/index.js\",\n  \"browser\": \"./dist.browser/browser.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"scripts\": {\n    \"tsc\": \"node ./scripts/tsc.js\",\n    \"test\": \"npm run test:native\",\n    \"test:node\": \"npm run test:native\",\n    \"test:native\": \"npx jest --runInBand --verbose --config test/native/jest.config.js --forceExit\",\n    \"test:browser\": \"npx jest --runInBand --verbose --config test/browser/jest.config.js --forceExit\",\n    \"test:browser:ci\": \"npm run install:puppeteer && npm run test:browser\",\n    \"install:puppeteer\": \"npm install --save-dev jest-puppeteer puppeteer @types/puppeteer\",\n    \"prepare\": \"node ./scripts/tsc.js && node ./scripts/install.js\",\n    \"install\": \"node ./scripts/install.js\"\n  },\n  \"devDependencies\": {\n    \"@types/crypto-js\": \"^3.1.43\",\n    \"@types/jest\": \"^27.0.1\",\n    \"@types/node\": \"^10.17.54\",\n    \"@types/prettier\": \"2.6.0\",\n    \"@types/puppeteer\": \"^5.4.7\",\n    \"@types/uuid\": \"^3.4.8\",\n    \"@types/ws\": \"^7.4.7\",\n    \"aws-sdk\": \"^2.848.0\",\n    \"cmake-js\": \"^6.3.2\",\n    \"https-proxy-agent\": \"^5.0.1\",\n    \"jest\": \"^27.2.1\",\n    \"jest-puppeteer\": \"^5.0.4\",\n    \"jest-runtime\": \"^27.2.1\",\n    \"puppeteer\": \"^3.3.0\",\n    \"tar\": \"^6.1.11\",\n    \"ts-jest\": \"^27.0.5\",\n    \"typedoc\": \"^0.22.18\",\n    \"typedoc-plugin-merge-modules\": \"^3.1.0\",\n    \"typescript\": \"^4.7.4\",\n    \"uuid\": \"^8.3.2\",\n    \"yargs\": \"^17.2.1\"\n  },\n  \"dependencies\": {\n    \"@aws-sdk/util-utf8-browser\": \"^3.109.0\",\n    \"@httptoolkit/websocket-stream\": \"^6.0.0\",\n    \"axios\": \"^0.24.0\",\n    \"buffer\": \"^6.0.3\",\n    \"cmake-js\": \"^6.3.2\",\n    \"crypto-js\": \"^4.0.0\",\n    \"mqtt\": \"^4.3.7\",\n    \"process\": \"^0.11.10\",\n    \"tar\": \"^6.1.11\"\n  }\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing miscellaneous platform-related queries\n *\n * @packageDocumentation\n * @module platform\n * @mergeTarget\n */\n\n/**\n * Returns true if this script is running under nodejs\n *\n * @category System\n */\nexport function is_nodejs() {\n    return (typeof process === 'object' &&\n        typeof process.versions === 'object' &&\n        typeof process.versions.node !== 'undefined');\n}\n\n/**\n * Returns true if this script is running in a browser\n *\n * @category System\n */\nexport function is_browser() {\n    return !is_nodejs();\n}\n\n/**\n * Returns the package information for aws-crt-nodejs\n *\n * @category System\n */\nexport function package_info() {\n    try {\n        const pkg = require('../../package.json');\n        return pkg;\n    }\n    catch (err) {\n        return {\n            name: 'aws-crt-nodejs',\n            version: 'UNKNOWN'\n        };\n    }\n}\n\n/**\n * Returns the AWS CRT version\n *\n * @category System\n */\nexport function crt_version() {\n    const pkg = package_info();\n    return pkg.version;\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing miscellaneous types for resource management\n *\n * @packageDocumentation\n * @module resource_safety\n * @mergeTarget\n */\n\n/**\n * If you have a resource that you want typescript to enforce close is implemented\n * and/or you want to use the below 'using' function, then implement this interface.\n *\n * @category System\n */\nexport interface ResourceSafe {\n    close(): void;\n}\n\n/**\n * Use this function to create a resource in an async context. This will make sure the\n * resources are cleaned up before returning.\n *\n * Example:\n * ```\n * await using(res = new SomeResource(), async (res) =>  {\n *     res.do_the_thing();\n * });\n * ```\n *\n * @category System\n */\nexport async function using<T extends ResourceSafe>(resource: T, func: (resource: T) => void) {\n    try {\n        await func(resource);\n    } finally {\n        resource.close();\n    }\n}", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport * as path from 'path';\nimport { platform, arch } from 'os';\nimport { existsSync } from 'fs';\nimport { versions } from 'process';\n\nconst upgrade_string = \"Please upgrade to node >=10.16.0, or use the provided browser implementation.\";\nif ('napi' in versions) {\n    // @ts-ignore\n    const napi_version = parseInt(versions['napi']);\n    if (napi_version < 4) {\n        throw new Error(\"The AWS CRT native implementation requires that NAPI version 4 be present. \" + upgrade_string);\n    }\n} else {\n    throw new Error(\"The current runtime is not reporting an NAPI version. \" + upgrade_string);\n}\n\nconst binary_name = 'aws-crt-nodejs';\nconst platformDir = `${platform}-${arch}`;\n\nlet source_root = path.resolve(__dirname, '..', '..');\nconst dist = path.join(source_root, 'dist');\nif (existsSync(dist)) {\n    source_root = dist;\n}\n\nconst bin_path = path.resolve(source_root, 'bin');\n\nconst search_paths = [\n    path.join(bin_path, platformDir, binary_name),\n];\n\nlet binding;\nfor (const path of search_paths) {\n    if (existsSync(path + '.node')) {\n        binding = require(path);\n        break;\n    }\n}\n\nif (binding == undefined) {\n    throw new Error(\"AWS CRT binary not present in any of the following locations:\\n\\t\" + search_paths.join('\\n\\t'));\n}\n\nexport default binding;\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * Library-specific error extension type\n *\n * @packageDocumentation\n * @module error\n * @mergeTarget\n */\n\nimport crt_native from './binding';\nimport {ICrtError} from \"../common/error\";\n\nexport {ICrtError} from \"../common/error\";\n\n/**\n * Represents an error encountered in native code. Can also be used to convert a numeric error code into\n * a human-readable string.\n *\n * @category System\n */\nexport class CrtError extends Error implements ICrtError {\n    /** The original integer error code from the CRT */\n    readonly error_code?: number;\n    /** The translated error name (e.g. AWS_ERROR_UNKNOWN) */\n    readonly error_name?: string;\n\n    /** @var error - The original error. Most often an error_code, but possibly some other context */\n    constructor(readonly error: any) {\n        super(extract_message(error));\n        this.error_code = extract_code(error);\n        this.error_name = extract_name(error);\n    }\n}\n\nfunction extract_message(error: any): string {\n    if (typeof error === 'number') {\n        return crt_native.error_code_to_string(error);\n    } else if (error instanceof CrtError) {\n        return error.message;\n    }\n    return error.toString();\n}\n\nfunction extract_code(error: any) {\n    if (typeof error === 'number') {\n        return error;\n    } else if (error instanceof CrtError) {\n        return error.error_code;\n    }\n    return undefined;\n}\n\nfunction extract_name(error: any) {\n    if (typeof error === 'number') {\n        return crt_native.error_code_to_name(error);\n    } else if (error instanceof CrtError) {\n        return error.error_name;\n    }\n    return undefined;\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/** \n * Represents an object allocated natively inside the AWS CRT. \n * @internal\n */\nexport class NativeResource {\n    constructor(private handle: any) { }\n\n    /** @internal */\n    native_handle() {\n        return this.handle;\n    }\n}\n\n/** @internal */\ntype Ctor<T> = new (...args: any[]) => T;\n\n/** \n * Represents an object allocated natively inside the AWS CRT which also\n * needs a node/TS base class\n * @internal\n */\nexport function NativeResourceMixin<T extends Ctor<{}>>(Base: T) {\n    /** @internal */\n    return class extends Base {\n        /** @internal */\n        _handle: any;\n        /** @internal */\n        constructor(...args: any[]) {\n            const handle = args.shift();\n            super(...args);\n            this._handle = handle;\n        }\n\n        /** @internal */\n        _super(handle: any) {\n            this._handle = handle;\n        }\n\n        /** @internal */\n        native_handle() {\n            return this._handle;\n        }\n    }\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing a grab bag of support for core network I/O functionality, including sockets, TLS, DNS, logging,\n * error handling, streams, and connection -> thread mapping.\n *\n * Categories include:\n * - Network: socket configuration\n * - TLS: tls configuration\n * - Logging: logging controls and configuration\n * - IO: everything else\n *\n * @packageDocumentation\n * @module io\n */\n\n/**\n * TLS Version\n *\n * @category TLS\n */\nexport enum TlsVersion {\n    SSLv3 = 0,\n    TLSv1 = 1,\n    TLSv1_1 = 2,\n    TLSv1_2 = 3,\n    TLSv1_3 = 4,\n    Default = 128,\n}\n\n/**\n * @category Network\n */\nexport enum SocketType {\n    /**\n     * A streaming socket sends reliable messages over a two-way connection.\n     * This means TCP when used with {@link SocketDomain.IPV4}/{@link SocketDomain.IPV6},\n     * and Unix domain sockets when used with {@link SocketDomain.LOCAL }\n      */\n    STREAM = 0,\n    /**\n     * A datagram socket is connectionless and sends unreliable messages.\n     * This means UDP when used with {@link SocketDomain.IPV4}/{@link SocketDomain.IPV6}.\n     * {@link SocketDomain.LOCAL} is not compatible with {@link DGRAM}\n     */\n    DGRAM = 1,\n}\n\n/**\n * @category Network\n */\nexport enum SocketDomain {\n    /** IPv4 sockets */\n    IPV4 = 0,\n\n    /** IPv6 sockets */\n    IPV6 = 1,\n\n    /** UNIX domain socket/Windows named pipes */\n    LOCAL = 2,\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing a grab bag of support for core network I/O functionality, including sockets, TLS, DNS, logging,\n * error handling, streams, and connection -> thread mapping.\n *\n * Categories include:\n * - Network: socket configuration\n * - TLS: tls configuration\n * - Logging: logging controls and configuration\n * - IO: everything else\n *\n * @packageDocumentation\n * @module io\n * @mergeTarget\n */\n\nimport crt_native from './binding';\nimport { NativeResource } from \"./native_resource\";\nimport { TlsVersion, SocketType, SocketDomain } from '../common/io';\nimport { Readable } from 'stream';\nexport { TlsVersion, SocketType, SocketDomain } from '../common/io';\nimport { CrtError } from './error';\n\n/**\n * Convert a native error code into a human-readable string\n * @param error_code - An error code returned from a native API call, or delivered\n * via callback.\n * @returns Long-form description of the error\n * @see CrtError\n *\n * nodejs only.\n *\n * @category System\n */\nexport function error_code_to_string(error_code: number): string {\n    return crt_native.error_code_to_string(error_code);\n}\n\n/**\n * Convert a native error code into a human-readable identifier\n * @param error_code - An error code returned from a native API call, or delivered\n * via callback.\n * @return error name as a string\n * @see CrtError\n *\n * nodejs only.\n *\n * @category System\n */\nexport function error_code_to_name(error_code: number): string {\n    return crt_native.error_code_to_name(error_code);\n}\n\n/**\n * The amount of detail that will be logged\n * @category Logging\n */\nexport enum LogLevel {\n    /** No logging whatsoever. Equivalent to never calling {@link enable_logging}. */\n    NONE = 0,\n    /** Only fatals. In practice, this will not do much, as the process will log and then crash (intentionally) if a fatal condition occurs */\n    FATAL = 1,\n    /** Only errors */\n    ERROR = 2,\n    /** Only warnings and errors */\n    WARN = 3,\n    /** Information about connection/stream creation/destruction events */\n    INFO = 4,\n    /** Enough information to debug the chain of events a given network connection encounters */\n    DEBUG = 5,\n    /** Everything. Only use this if you really need to know EVERY single call */\n    TRACE = 6\n}\n\n/**\n * Enables logging of the native AWS CRT libraries.\n * @param level - The logging level to filter to. It is not possible to log less than WARN.\n *\n * nodejs only.\n * @category Logging\n */\nexport function enable_logging(level: LogLevel) {\n    crt_native.io_logging_enable(level);\n}\n\n/**\n * Returns true if ALPN is available on this platform natively\n * @return true if ALPN is supported natively, false otherwise\n *\n * nodejs only.\n * @category TLS\n*/\nexport function is_alpn_available(): boolean {\n    return crt_native.is_alpn_available();\n}\n\n/**\n * Wraps a ```Readable``` for reading by native code, used to stream\n *  data into the AWS CRT libraries.\n *\n * nodejs only.\n * @category IO\n */\nexport class InputStream extends NativeResource {\n    constructor(private source: Readable) {\n        super(crt_native.io_input_stream_new(16 * 1024));\n        this.source.on('data', (data) => {\n            data = Buffer.isBuffer(data) ? data : Buffer.from(data.toString());\n            crt_native.io_input_stream_append(this.native_handle(), data);\n        });\n        this.source.on('end', () => {\n            crt_native.io_input_stream_append(this.native_handle(), undefined);\n        })\n    }\n}\n\n/**\n * Represents native resources required to bootstrap a client connection\n * Things like a host resolver, event loop group, etc. There should only need\n * to be 1 of these per application, in most cases.\n *\n * nodejs only.\n * @category IO\n */\nexport class ClientBootstrap extends NativeResource {\n    constructor() {\n        super(crt_native.io_client_bootstrap_new());\n    }\n}\n\n/**\n * Standard Berkeley socket style options.\n *\n * nodejs only.\n * @category Network\n*/\nexport class SocketOptions extends NativeResource {\n    constructor(\n        type = SocketType.STREAM,\n        domain = SocketDomain.IPV6,\n        connect_timeout_ms = 5000,\n        keepalive = false,\n        keep_alive_interval_sec = 0,\n        keep_alive_timeout_sec = 0,\n        keep_alive_max_failed_probes = 0) {\n        super(crt_native.io_socket_options_new(\n            type,\n            domain,\n            connect_timeout_ms,\n            keep_alive_interval_sec,\n            keep_alive_timeout_sec,\n            keep_alive_max_failed_probes,\n            keepalive\n        ));\n    }\n}\n\n/**\n * Interface used to hold the options for creating a PKCS#12 connection in the builder.\n *\n * Note: Only supported on MacOS devices.\n *\n * NodeJS only\n * @category TLS\n */\nexport interface Pkcs12Options {\n    /** Path to the PKCS#12 file */\n    pkcs12_file: string;\n\n    /** The password for the PKCS#12 file */\n    pkcs12_password : string;\n}\n\n/**\n * Options for creating a {@link ClientTlsContext} or {@link ServerTlsContext}.\n *\n * nodejs only.\n * @category TLS\n */\nexport class TlsContextOptions {\n    /** Minimum version of TLS to support. Uses OS/system default if unspecified. */\n    public min_tls_version: TlsVersion = TlsVersion.Default;\n    /** Path to a single file with all trust anchors in it, in PEM format */\n    public ca_filepath?: string;\n    /** Path to directory containing trust anchors. Only used on Unix-style systems. */\n    public ca_dirpath?: string;\n    /** String with all trust anchors in it, in PEM format */\n    public certificate_authority?: string;\n    /** List of ALPN protocols to be used on platforms which support ALPN */\n    public alpn_list: string[] = [];\n    /** Path to certificate, in PEM format */\n    public certificate_filepath?: string;\n    /** Certificate, in PEM format */\n    public certificate?: string;\n    /** Path to private key, in PEM format */\n    public private_key_filepath?: string;\n    /** Private key, in PEM format */\n    public private_key?: string;\n    /** Path to certificate, in PKCS#12 format. Currently, only supported on OSX */\n    public pkcs12_filepath?: string;\n    /** Password for PKCS#12. Currently, only supported on OSX. */\n    public pkcs12_password?: string;\n    /** PKCS#11 options. Currently, only supported on Unix */\n    public pkcs11_options?: TlsContextOptions.Pkcs11Options;\n    /** Path to certificate in a Windows cert store. Windows only. */\n    public windows_cert_store_path?: string;\n\n    /**\n     * In client mode, this turns off x.509 validation. Don't do this unless you are testing.\n     * It is much better to just override the default trust store and pass the self-signed\n     * certificate as the ca_file argument.\n     *\n     * In server mode (ServerTlsContext), this defaults to false. If you want to enforce mutual TLS on the server,\n     * set this to true.\n     */\n    public verify_peer: boolean = true;\n\n    /**\n     * Overrides the default system trust store.\n     * @param ca_dirpath - Only used on Unix-style systems where all trust anchors are\n     * stored in a directory (e.g. /etc/ssl/certs).\n     * @param ca_filepath - Single file containing all trust CAs, in PEM format\n     */\n    override_default_trust_store_from_path(ca_dirpath?: string, ca_filepath?: string) {\n        this.ca_dirpath = ca_dirpath;\n        this.ca_filepath = ca_filepath;\n    }\n\n    /**\n     * Overrides the default system trust store.\n     * @param certificate_authority - String containing all trust CAs, in PEM format\n     */\n    override_default_trust_store(certificate_authority: string) {\n        this.certificate_authority = certificate_authority;\n    }\n\n    /**\n     * Create options configured for mutual TLS in client mode,\n     * with client certificate and private key provided as in-memory strings.\n     * @param certificate - Client certificate file contents, in PEM format\n     * @param private_key - Client private key file contents, in PEM format\n     *\n     * @returns newly configured TlsContextOptions object\n     */\n    static create_client_with_mtls(certificate: string, private_key: string): TlsContextOptions {\n        let opt = new TlsContextOptions();\n        opt.certificate = certificate;\n        opt.private_key = private_key;\n        opt.verify_peer = true;\n        return opt;\n    }\n\n    /**\n     * Create options configured for mutual TLS in client mode,\n     * with client certificate and private key provided via filepath.\n     * @param certificate_filepath - Path to client certificate, in PEM format\n     * @param private_key_filepath - Path to private key, in PEM format\n     *\n     * @returns newly configured TlsContextOptions object\n     */\n    static create_client_with_mtls_from_path(certificate_filepath: string, private_key_filepath: string): TlsContextOptions {\n        let opt = new TlsContextOptions();\n        opt.certificate_filepath = certificate_filepath;\n        opt.private_key_filepath = private_key_filepath;\n        opt.verify_peer = true;\n        return opt;\n    }\n\n    /**\n     * Create options for mutual TLS in client mode,\n     * with client certificate and private key bundled in a single PKCS#12 file.\n     * @param pkcs12_filepath - Path to PKCS#12 file containing client certificate and private key.\n     * @param pkcs12_password - PKCS#12 password\n     *\n     * @returns newly configured TlsContextOptions object\n    */\n    static create_client_with_mtls_pkcs12_from_path(pkcs12_filepath: string, pkcs12_password: string): TlsContextOptions {\n        let opt = new TlsContextOptions();\n        opt.pkcs12_filepath = pkcs12_filepath;\n        opt.pkcs12_password = pkcs12_password;\n        opt.verify_peer = true;\n        return opt;\n    }\n\n    /**\n     * @deprecated Renamed [[create_client_with_mtls_pkcs12_from_path]]\n     */\n    static create_client_with_mtls_pkcs_from_path(pkcs12_filepath: string, pkcs12_password: string): TlsContextOptions {\n        return this.create_client_with_mtls_pkcs12_from_path(pkcs12_filepath, pkcs12_password);\n    }\n\n    /**\n     * Create options configured for mutual TLS in client mode,\n     * using a PKCS#11 library for private key operations.\n     *\n     * NOTE: This configuration only works on Unix devices.\n     *\n     * @param options - PKCS#11 options\n     *\n     * @returns newly configured TlsContextOptions object\n     */\n    static create_client_with_mtls_pkcs11(options: TlsContextOptions.Pkcs11Options): TlsContextOptions {\n        let opt = new TlsContextOptions();\n        opt.pkcs11_options = options;\n        opt.verify_peer = true;\n        return opt;\n    }\n\n    /**\n     * Create options configured for mutual TLS in client mode,\n     * using a certificate in a Windows certificate store.\n     *\n     * NOTE: Windows only.\n     *\n     * @param certificate_path - Path to certificate in a Windows certificate store.\n     *      The path must use backslashes and end with the certificate's thumbprint.\n     *      Example: `CurrentUser\\MY\\A11F8A9B5DF5B98BA3508FBCA575D09570E0D2C6`\n     */\n    static create_client_with_mtls_windows_cert_store_path(certificate_path: string): TlsContextOptions {\n        let opt = new TlsContextOptions();\n        opt.windows_cert_store_path = certificate_path;\n        opt.verify_peer = true;\n        return opt;\n    }\n\n    /**\n     * Creates TLS context with peer verification disabled, along with a certificate and private key\n     * @param certificate_filepath - Path to certificate, in PEM format\n     * @param private_key_filepath - Path to private key, in PEM format\n     *\n     * @returns newly configured TlsContextOptions object\n     */\n    static create_server_with_mtls_from_path(certificate_filepath: string, private_key_filepath: string): TlsContextOptions {\n        let opt = new TlsContextOptions();\n        opt.certificate_filepath = certificate_filepath;\n        opt.private_key_filepath = private_key_filepath;\n        opt.verify_peer = false;\n        return opt;\n    }\n\n    /**\n     * Creates TLS context with peer verification disabled, along with a certificate and private key\n     * in PKCS#12 format\n     * @param pkcs12_filepath - Path to certificate, in PKCS#12 format\n     * @param pkcs12_password - PKCS#12 Password\n     *\n     * @returns newly configured TlsContextOptions object\n     */\n    static create_server_with_mtls_pkcs_from_path(pkcs12_filepath: string, pkcs12_password: string): TlsContextOptions {\n        let opt = new TlsContextOptions();\n        opt.pkcs12_filepath = pkcs12_filepath;\n        opt.pkcs12_password = pkcs12_password;\n        opt.verify_peer = false;\n        return opt;\n    }\n}\n\nexport namespace TlsContextOptions {\n\n    /**\n     * Options for TLS using a PKCS#11 library for private key operations.\n     *\n     * Unix only. nodejs only.\n     *\n     * @see [[TlsContextOptions.create_client_with_mtls_pkcs11]]\n     */\n    export type Pkcs11Options = {\n        /**\n         * Use this PKCS#11 library.\n         */\n        pkcs11_lib: Pkcs11Lib,\n\n        /**\n         * Use this PIN to log the user into the PKCS#11 token. Pass `null`\n         * to log into a token with a \"protected authentication path\".\n         */\n        user_pin: null | string,\n\n        /**\n         * Specify the slot ID containing a PKCS#11 token. If not specified, the token\n         * will be chosen based on other criteria (such as [[token_label]]).\n         */\n        slot_id?: number,\n\n        /**\n         * Specify the label of the PKCS#11 token to use. If not specified, the token\n         * will be chosen based on other criteria (such as [[slot_id]]).\n         */\n        token_label?: string,\n\n        /**\n         * Specify the label of the private key object on the PKCS#11 token. If not\n         * specified, the key will be chosen based on other criteria (such as being the\n         * only available private key on the token).\n         */\n        private_key_object_label?: string,\n\n        /**\n         * Use this X.509 certificate (file on disk).\n         * The certificate must be PEM-formatted.\n         * The certificate may be specified by other means instead\n         * (ex: [[cert_file_contents]])\n         */\n        cert_file_path?: string,\n\n        /**\n         * Use this X.509 certificate (contents in memory).\n         * The certificate must be PEM-formatted.\n         * The certificate may be specified by other means instead\n         * (ex: [[cert_file_path]])\n         */\n        cert_file_contents?: string,\n    }\n}\n\n/**\n * Abstract base TLS context used for client/server TLS communications over sockets.\n *\n * @see ClientTlsContext\n * @see ServerTlsContext\n *\n * nodejs only.\n * @category TLS\n */\nexport abstract class TlsContext extends NativeResource {\n    constructor(ctx_opt: TlsContextOptions) {\n        if (ctx_opt == null || ctx_opt == undefined) {\n            throw new CrtError(\"TlsContext constructor: ctx_opt not defined\");\n        }\n        super(crt_native.io_tls_ctx_new(\n            ctx_opt.min_tls_version,\n            ctx_opt.ca_filepath,\n            ctx_opt.ca_dirpath,\n            ctx_opt.certificate_authority,\n            (ctx_opt.alpn_list && ctx_opt.alpn_list.length > 0) ? ctx_opt.alpn_list.join(';') : undefined,\n            ctx_opt.certificate_filepath,\n            ctx_opt.certificate,\n            ctx_opt.private_key_filepath,\n            ctx_opt.private_key,\n            ctx_opt.pkcs12_filepath,\n            ctx_opt.pkcs12_password,\n            ctx_opt.pkcs11_options,\n            ctx_opt.windows_cert_store_path,\n            ctx_opt.verify_peer));\n    }\n}\n\n/**\n * TLS context used for client TLS communications over sockets. If no\n * options are supplied, the context will default to enabling peer verification\n * only.\n *\n * nodejs only.\n * @category TLS\n */\nexport class ClientTlsContext extends TlsContext {\n    constructor(ctx_opt?: TlsContextOptions) {\n        if (!ctx_opt) {\n            ctx_opt = new TlsContextOptions()\n            ctx_opt.verify_peer = true;\n        }\n        super(ctx_opt);\n    }\n}\n\n/**\n * TLS context used for server TLS communications over sockets. If no\n * options are supplied, the context will default to disabling peer verification\n * only.\n *\n * nodejs only.\n * @category TLS\n */\nexport class ServerTlsContext extends TlsContext {\n    constructor(ctx_opt?: TlsContextOptions) {\n        if (!ctx_opt) {\n            ctx_opt = new TlsContextOptions();\n            ctx_opt.verify_peer = false;\n        }\n        super(ctx_opt);\n    }\n}\n\n/**\n * TLS options that are unique to a given connection using a shared TlsContext.\n *\n * nodejs only.\n * @category TLS\n */\nexport class TlsConnectionOptions extends NativeResource {\n    constructor(readonly tls_ctx: TlsContext, readonly server_name?: string, readonly alpn_list: string[] = []) {\n        if (tls_ctx == null || tls_ctx == undefined) {\n            throw new CrtError(\"TlsConnectionOptions constructor: tls_ctx not defined\");\n        }\n        super(crt_native.io_tls_connection_options_new(\n            tls_ctx.native_handle(),\n            server_name,\n            (alpn_list && alpn_list.length > 0) ? alpn_list.join(';') : undefined\n        ));\n    }\n}\n\n/**\n * Handle to a loaded PKCS#11 library.\n *\n * For most use cases, a single instance of Pkcs11Lib should be used\n * for the lifetime of your application.\n *\n * nodejs only.\n * @category TLS\n */\nexport class Pkcs11Lib extends NativeResource {\n\n    /**\n     * @param path - Path to PKCS#11 library.\n     * @param behavior - Specifies how `C_Initialize()` and `C_Finalize()`\n     *                   will be called on the PKCS#11 library.\n     */\n    constructor(path: string, behavior: Pkcs11Lib.InitializeFinalizeBehavior = Pkcs11Lib.InitializeFinalizeBehavior.DEFAULT) {\n        super(crt_native.io_pkcs11_lib_new(path, behavior));\n    }\n\n    /**\n     * Release the PKCS#11 library immediately, without waiting for the GC.\n     */\n    close() {\n        crt_native.io_pkcs11_lib_close(this.native_handle());\n    }\n}\n\nexport namespace Pkcs11Lib {\n\n    /**\n     * Controls `C_Initialize()` and `C_Finalize()` are called on the PKCS#11 library.\n     */\n    export enum InitializeFinalizeBehavior {\n        /**\n         * Default behavior that accommodates most use cases.\n         *\n         * `C_Initialize()` is called on creation, and \"already-initialized\"\n         * errors are ignored. `C_Finalize()` is never called, just in case\n         * another part of your application is still using the PKCS#11 library.\n         */\n        DEFAULT = 0,\n\n        /**\n         * Skip calling `C_Initialize()` and `C_Finalize()`.\n         *\n         * Use this if your application has already initialized the PKCS#11 library,\n         * and you do not want `C_Initialize()` called again.\n         */\n        OMIT = 1,\n\n        /**\n         * `C_Initialize()` is called on creation and `C_Finalize()` is called on cleanup.\n         *\n         * If `C_Initialize()` reports that's it's already initialized, this is\n         * treated as an error. Use this if you need perfect cleanup (ex: running\n         * valgrind with --leak-check).\n         */\n        STRICT = 2,\n    }\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * Module for AWS Authentication logic - signing http requests, events, chunks, etc...\n *\n * @packageDocumentation\n * @module auth\n * @mergeTarget\n */\n\nimport * as auth from '../common/auth';\nimport crt_native from './binding';\nimport { CrtError } from './error';\nimport { HttpRequest, HttpProxyOptions } from './http';\nimport {ClientBootstrap, ClientTlsContext} from './io';\n\nexport {AwsSigningConfigBase} from \"../common/auth\";\n\n/**\n * A pair defining an identity provider and a valid login token sourced from it.\n *\n * @category Auth\n */\nexport interface CognitoLoginTokenPair {\n    /**\n     * Name of an identity provider\n     */\n    identityProviderName: string;\n\n    /**\n     * Valid login token source from the identity provider\n     */\n    identityProviderToken: string;\n}\n\n/**\n * Definition for the configuration needed to create a Cognito-based Credentials Provider\n *\n * @category Auth\n */\nexport interface CognitoCredentialsProviderConfig {\n\n    /**\n     * Cognito service regional endpoint to source credentials from.\n     */\n    endpoint: string;\n\n    /**\n     * Cognito identity to fetch credentials relative to.\n     */\n    identity: string;\n\n    /**\n     * Optional set of identity provider token pairs to allow for authenticated identity access.\n     */\n    logins?: Array<CognitoLoginTokenPair>;\n\n    /**\n     * Optional ARN of the role to be assumed when multiple roles were received in the token from the identity provider.\n     */\n    customRoleArn?: string;\n\n    /**\n     * TLS context for secure socket connections.\n     * If undefined, then a default tls context will be created and used.\n     */\n    tlsContext?: ClientTlsContext;\n\n    /**\n     * Client bootstrap to use.  In almost all cases, this can be left undefined.\n     */\n    bootstrap?: ClientBootstrap;\n\n    /**\n     * Proxy configuration if connecting through an HTTP proxy is desired\n     */\n    httpProxyOptions?: HttpProxyOptions;\n}\n\n/**\n * Definition for the configuration needed to create a X509-based Credentials Provider\n *\n * @category Auth\n */\nexport interface X509CredentialsConfig {\n\n    /**\n     * X509 service regional endpoint to source credentials from.\n     * This is a per-account value that can be determined via the CLI:\n     * `aws iot describe-endpoint --endpoint-type iot:CredentialProvider`\n     */\n    endpoint: string;\n\n    /**\n     * The name of the IoT thing to use to fetch credentials.\n     */\n    thingName: string;\n\n    /**\n     * The name of the role alias to fetch credentials through.\n     */\n    roleAlias: string;\n\n    /**\n     * TLS context for secure socket connections.\n     */\n    tlsContext: ClientTlsContext;\n\n    /**\n     * Proxy configuration if connecting through an HTTP proxy is desired\n     */\n    httpProxyOptions?: HttpProxyOptions;\n}\n\n/**\n * Credentials providers source the AwsCredentials needed to sign an authenticated AWS request.\n *\n * We don't currently expose an interface for fetching credentials from Javascript.\n *\n * @category Auth\n */\n/* Subclass for the purpose of exposing a non-NativeHandle based API */\nexport class AwsCredentialsProvider extends crt_native.AwsCredentialsProvider {\n\n    /**\n     * Creates a new default credentials provider to be used internally for AWS credentials resolution:\n     *\n     *   The CRT's default provider chain currently sources in this order:\n     *\n     *     1. Environment\n     *     2. Profile\n     *     3. (conditional, off by default) ECS\n     *     4. (conditional, on by default) EC2 Instance Metadata\n     *\n     * @param bootstrap (optional) client bootstrap to be used to establish any required network connections\n     *\n     * @returns a new credentials provider using default credentials resolution rules\n     */\n    static newDefault(bootstrap: ClientBootstrap | undefined = undefined): AwsCredentialsProvider {\n        return super.newDefault(bootstrap != null ? bootstrap.native_handle() : null);\n    }\n\n    /**\n     * Creates a new credentials provider that returns a fixed set of credentials.\n     *\n     * @param access_key access key to use in the static credentials\n     * @param secret_key secret key to use in the static credentials\n     * @param session_token (optional) session token to use in the static credentials\n     *\n     * @returns a new credentials provider that will return a fixed set of AWS credentials\n     */\n    static newStatic(access_key: crt_native.StringLike, secret_key: crt_native.StringLike, session_token?: crt_native.StringLike): AwsCredentialsProvider {\n        return super.newStatic(access_key, secret_key, session_token);\n    }\n\n    /**\n     * Creates a new credentials provider that sources credentials from the AWS Cognito Identity service via the\n     * GetCredentialsForIdentity http API.\n     *\n     * @param config provider configuration necessary to make GetCredentialsForIdentity web requests\n     *\n     * @returns a new credentials provider that returns credentials sourced from the AWS Cognito Identity service\n     */\n    static newCognito(config: CognitoCredentialsProviderConfig): AwsCredentialsProvider {\n        if (config == null || config == undefined) {\n            throw new CrtError(\"AwsCredentialsProvider newCognito: Cognito config not defined\");\n        }\n\n        return super.newCognito(config,\n            config.tlsContext != null ? config.tlsContext.native_handle() : new ClientTlsContext().native_handle(),\n            config.bootstrap != null ? config.bootstrap.native_handle() : null,\n            config.httpProxyOptions ? config.httpProxyOptions.create_native_handle() : null);\n    }\n\n    /**\n     * Creates a new credentials provider that sources credentials from the the X509 service on AWS IoT Core.\n     *\n     * @param config provider configuration necessary to source credentials via X509\n     *\n     * @returns a new credentials provider that returns credentials sourced from the AWS X509 service\n     */\n    static newX509(config : X509CredentialsConfig): AwsCredentialsProvider {\n        if (config == null || config == undefined) {\n            throw new CrtError(\"AwsCredentialsProvider newX509: X509 config not defined\")\n        }\n        return super.newX509(\n            config,\n            config.tlsContext.native_handle(),\n            config.httpProxyOptions ? config.httpProxyOptions.create_native_handle() : null);\n    }\n}\n\n/**\n * AWS signing algorithm enumeration.\n *\n * @category Auth\n */\nexport enum AwsSigningAlgorithm {\n    /** Use the Aws signature version 4 signing process to sign the request */\n    SigV4,\n\n    /** Use the Aws signature version 4 Asymmetric signing process to sign the request */\n    SigV4Asymmetric\n}\n\n/**\n * AWS signature type enumeration.\n *\n * @category Auth\n */\nexport enum AwsSignatureType {\n    /** Sign an http request and apply the signing results as headers */\n    HttpRequestViaHeaders,\n\n    /** Sign an http request and apply the signing results as query params */\n    HttpRequestViaQueryParams,\n\n    /** Sign an http request payload chunk */\n    HttpRequestChunk,\n\n    /** Sign an event stream event */\n    HttpRequestEvent\n}\n\n/**\n * Values for use with {@link AwsSigningConfig.signed_body_value}.\n *\n * Some services use special values (e.g. 'UNSIGNED-PAYLOAD') when the body\n * is not being signed in the usual way.\n *\n * @category Auth\n */\nexport enum AwsSignedBodyValue {\n    /** Use the SHA-256 of the empty string as the canonical request payload value */\n    EmptySha256 = \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\n\n    /** Use the literal string 'UNSIGNED-PAYLOAD' as the canonical request payload value  */\n    UnsignedPayload = \"UNSIGNED-PAYLOAD\",\n\n    /** Use the literal string 'STREAMING-AWS4-HMAC-SHA256-PAYLOAD' as the canonical request payload value  */\n    StreamingAws4HmacSha256Payload = \"STREAMING-AWS4-HMAC-SHA256-PAYLOAD\",\n\n    /** Use the literal string 'STREAMING-AWS4-HMAC-SHA256-EVENTS' as the canonical request payload value  */\n    StreamingAws4HmacSha256Events = \"STREAMING-AWS4-HMAC-SHA256-EVENTS\",\n}\n\n/**\n * AWS signed body header enumeration.\n *\n * @category Auth\n */\nexport enum AwsSignedBodyHeaderType {\n    /** Do not add a header containing the canonical request payload value */\n    None,\n\n    /** Add the X-Amz-Content-Sha256 header with the canonical request payload value */\n    XAmzContentSha256\n}\n\n/**\n * Configuration for use in AWS-related signing.\n * AwsSigningConfig is immutable.\n * It is good practice to use a new config for each signature, or the date might get too old.\n *\n * @category Auth\n */\nexport interface AwsSigningConfig extends auth.AwsSigningConfigBase {\n    /** Which signing process to invoke */\n    algorithm: AwsSigningAlgorithm;\n\n    /** What kind of signature to compute */\n    signature_type: AwsSignatureType;\n\n    /** Credentials provider to fetch signing credentials with */\n    provider: AwsCredentialsProvider;\n\n    /**\n     * Headers to skip when signing.\n     *\n     * Skipping auth-required headers will result in an unusable signature.\n     * Headers injected by the signing process are not skippable.\n     * This function does not override the internal check function\n     * (x-amzn-trace-id, user-agent), but rather supplements it.\n     * In particular, a header will get signed if and only if it returns\n     * true to both the internal check (skips x-amzn-trace-id, user-agent)\n     * and is found in this list (if defined)\n     */\n    header_blacklist?: string[];\n\n    /**\n     * Set true to double-encode the resource path when constructing the\n     * canonical request. By default, all services except S3 use double encoding.\n     */\n    use_double_uri_encode?: boolean;\n\n    /**\n     * Whether the resource paths are normalized when building the canonical request.\n     */\n    should_normalize_uri_path?: boolean;\n\n    /**\n     * Should the session token be omitted from the signing process?  This should only be\n     * true when making a websocket handshake with IoT Core.\n     */\n    omit_session_token?: boolean;\n\n    /**\n     * Value to use as the canonical request's body value.\n     *\n     * Typically, this is the SHA-256 of the payload, written as lowercase hex.\n     * If this has been precalculated, it can be set here.\n     * Special values used by certain services can also be set (see {@link AwsSignedBodyValue}).\n     * If undefined (the default), the typical value will be calculated from the payload during signing.\n     */\n    signed_body_value?: string;\n\n    /** Controls what header, if any, should be added to the request, containing the body value */\n    signed_body_header?: AwsSignedBodyHeaderType;\n\n    /** Query param signing only: how long the pre-signed URL is valid for */\n    expiration_in_seconds?: number;\n}\n\n/**\n * Perform AWS HTTP request signing.\n *\n * The {@link HttpRequest} is transformed asynchronously,\n * according to the {@link AwsSigningConfig}.\n *\n * When signing:\n *  1.  It is good practice to use a new config for each signature,\n *      or the date might get too old.\n *\n *  2.  Do not add the following headers to requests before signing, they may be added by the signer:\n *      x-amz-content-sha256,\n *      X-Amz-Date,\n *      Authorization\n *\n *  3.  Do not add the following query params to requests before signing, they may be added by the signer:\n *      X-Amz-Signature,\n *      X-Amz-Date,\n *      X-Amz-Credential,\n *      X-Amz-Algorithm,\n *      X-Amz-SignedHeaders\n * @param request The HTTP request to sign.\n * @param config Configuration for signing.\n * @returns A promise whose result will be the signed\n *       {@link HttpRequest}. The future will contain an exception\n *       if the signing process fails.\n *\n * @category Auth\n */\nexport async function aws_sign_request(request: HttpRequest, config: AwsSigningConfig): Promise<HttpRequest> {\n    return new Promise((resolve, reject) => {\n        try {\n            /* Note: if the body of request has not fully loaded, it will lead to an endless loop.\n             * User should set the signed_body_value of config to prevent this endless loop in this case */\n            crt_native.aws_sign_request(request, config, (error_code) => {\n                if (error_code == 0) {\n                    resolve(request);\n                } else {\n                    reject(new CrtError(error_code));\n                }\n            });\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n\n/**\n *\n * @internal\n *\n * Test only.\n * Verifies:\n *  (1) The canonical request generated during sigv4a signing of the request matches what is passed in\n *  (2) The signature passed in is a valid ECDSA signature of the hashed string-to-sign derived from the\n *  canonical request\n *\n * @param request The HTTP request to sign.\n * @param config Configuration for signing.\n * @param expected_canonical_request String type of expected canonical request. Refer to XXX(link to doc?)\n * @param signature The generated signature string from {@link aws_sign_request}, which is verified here.\n * @param ecc_key_pub_x the x coordinate of the public part of the ecc key to verify the signature.\n * @param ecc_key_pub_y the y coordinate of the public part of the ecc key to verify the signature\n * @returns True, if the verification succeed. Otherwise, false.\n */\nexport function aws_verify_sigv4a_signing(request: HttpRequest, config: AwsSigningConfig, expected_canonical_request: crt_native.StringLike,\n    signature: crt_native.StringLike, ecc_key_pub_x: crt_native.StringLike, ecc_key_pub_y: crt_native.StringLike): boolean {\n    return crt_native.aws_verify_sigv4a_signing(request, config, expected_canonical_request, signature, ecc_key_pub_x, ecc_key_pub_y);\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing various checksum implementations intended for streaming payloads\n *\n * @packageDocumentation\n * @module checksums\n * @mergeTarget\n */\n\n import crt_native from './binding';\n import { Hashable } from \"../common/crypto\";\n\n\n/**\n * Computes an crc32 checksum.\n *\n * @param data The data to checksum\n * @param previous previous crc32 checksum result. Used if you are buffering large input.\n *\n * @category Crypto\n */\nexport function crc32(data: Hashable, previous?: number): number {\n    return crt_native.checksums_crc32(data, previous);\n}\n\n/**\n * Computes a crc32c checksum.\n *\n * @param data The data to checksum\n * @param previous previous crc32c checksum result. Used if you are buffering large input.\n *\n * @category Crypto\n */\n export function crc32c(data: Hashable, previous?: number): number {\n    return crt_native.checksums_crc32c(data, previous);\n}", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing some miscellaneous crt native memory queries\n *\n * @packageDocumentation\n * @module crt\n * @mergeTarget\n */\n\n/**\n * Memory reporting is controlled by the AWS_CRT_MEMORY_TRACING environment\n * variable. Possible values are:\n * * 0 - No tracing\n * * 1 - Track active memory usage. Incurs a small performance penalty.\n * * 2 - Track active memory usage, and also track callstacks for every allocation.\n *   This incurs a performance penalty, depending on the cost of the platform's\n *   stack unwinding/backtrace API.\n * @category System\n */\n\nimport crt_native from './binding';\n\n/**\n * If the ```AWS_CRT_MEMORY_TRACING``` is environment variable is set to 1 or 2,\n * will return the native memory usage in bytes. Otherwise, returns 0.\n * @returns The total allocated native memory, in bytes.\n *\n * @category System\n */\nexport function native_memory() {\n    return crt_native.native_memory();\n}\n\n/**\n * Dumps outstanding native memory allocations. If the ```AWS_CRT_MEMORY_TRACING```\n * environment variable is set to 1 or 2, will dump all active native memory to\n * the console log.\n *\n * @category System\n */\nexport function native_memory_dump() {\n    return crt_native.native_memory_dump();\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * A module containing support for a variety of cryptographic operations.\n *\n * @packageDocumentation\n * @module crypto\n * @mergeTarget\n */\n\nimport crt_native from './binding';\nimport { NativeResource } from \"./native_resource\";\nimport { Hashable } from \"../common/crypto\";\n\nexport { Hashable } from \"../common/crypto\";\n\n/**\n * Object that allows for continuous hashing of data.\n *\n * @internal\n */\nabstract class Hash extends NativeResource {\n    /**\n     * Hash additional data.\n     * @param data Additional data to hash\n     */\n    update(data: Hashable) {\n        crt_native.hash_update(this.native_handle(), data);\n    }\n\n    /**\n     * Completes the hash computation and returns the final hash digest.\n     *\n     * @param truncate_to The maximum number of bytes to receive. Leave as undefined or 0 to receive the entire digest.\n     */\n    finalize(truncate_to?: number): DataView {\n        return crt_native.hash_digest(this.native_handle(), truncate_to);\n    }\n\n    constructor(hash_handle: any) {\n        super(hash_handle);\n    }\n}\n\n/**\n * Object that allows for continuous MD5 hashing of data.\n *\n * @category Crypto\n */\nexport class Md5Hash extends Hash {\n    constructor() {\n        super(crt_native.hash_md5_new());\n    }\n}\n\n/**\n * Computes an MD5 hash. Use this if you don't need to stream the data you're hashing and can load the entire input\n * into memory.\n *\n * @param data The data to hash\n * @param truncate_to The maximum number of bytes to receive. Leave as undefined or 0 to receive the entire digest.\n *\n * @category Crypto\n */\nexport function hash_md5(data: Hashable, truncate_to?: number): DataView {\n    return crt_native.hash_md5_compute(data, truncate_to);\n}\n\n/**\n * Object that allows for continuous SHA256 hashing of data.\n *\n * @category Crypto\n */\nexport class Sha256Hash extends Hash {\n    constructor() {\n        super(crt_native.hash_sha256_new());\n    }\n}\n\n\n/**\n * Computes an SHA256 hash. Use this if you don't need to stream the data you're hashing and can load the entire input\n * into memory.\n *\n * @param data The data to hash\n * @param truncate_to The maximum number of bytes to receive. Leave as undefined or 0 to receive the entire digest.\n *\n * @category Crypto\n */\nexport function hash_sha256(data: Hashable, truncate_to?: number): DataView {\n    return crt_native.hash_sha256_compute(data, truncate_to);\n}\n\n/**\n * Object that allows for continuous SHA1 hashing of data.\n *\n * @category Crypto\n */\n export class Sha1Hash extends Hash {\n    constructor() {\n        super(crt_native.hash_sha1_new());\n    }\n}\n\n\n/**\n * Computes an SHA1 hash. Use this if you don't need to stream the data you're hashing and can load the entire input\n * into memory.\n *\n * @param data The data to hash\n * @param truncate_to The maximum number of bytes to receive. Leave as undefined or 0 to receive the entire digest.\n *\n * @category Crypto\n */\nexport function hash_sha1(data: Hashable, truncate_to?: number): DataView {\n    return crt_native.hash_sha1_compute(data, truncate_to);\n}\n\n/**\n * Object that allows for continuous hashing of data with an hmac secret.\n *\n * @category Crypto\n */\nabstract class Hmac extends NativeResource {\n    /**\n     * Hash additional data.\n     *\n     * @param data additional data to hash\n     */\n    update(data: Hashable) {\n        crt_native.hmac_update(this.native_handle(), data);\n    }\n\n    /**\n     * Completes the hash computation and returns the final hmac digest.\n     *\n     * @param truncate_to The maximum number of bytes to receive. Leave as undefined or 0 to receive the entire digest.\n     */\n    finalize(truncate_to?: number): DataView {\n        return crt_native.hmac_digest(this.native_handle(), truncate_to);\n    }\n\n    constructor(hash_handle: any) {\n        super(hash_handle);\n    }\n}\n\n/**\n * Object that allows for continuous SHA256 HMAC hashing of data.\n *\n * @category Crypto\n */\nexport class Sha256Hmac extends Hmac {\n    constructor(secret: Hashable) {\n        super(crt_native.hmac_sha256_new(secret));\n    }\n}\n\n/**\n * Computes an SHA256 HMAC. Use this if you don't need to stream the data you're hashing and can load the entire input\n * into memory.\n *\n * @param secret The key to use for the HMAC process\n * @param data The data to hash\n * @param truncate_to The maximum number of bytes to receive. Leave as undefined or 0 to receive the entire digest.\n *\n * @category Crypto\n */\nexport function hmac_sha256(secret: Hashable, data: Hashable, truncate_to?: number): DataView {\n    return crt_native.hmac_sha256_compute(secret, data, truncate_to);\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * Module for base types related to event emission\n *\n * @packageDocumentation\n * @module event\n */\n\nimport { EventEmitter } from 'events';\n\n/**\n * Events are named via string or symbol\n *\n * @category Events\n */\nexport type EventKey = string | symbol;\n\n/**\n * @internal\n */\nclass BufferedEvent {\n    public next?: BufferedEvent;\n    public args: any[];\n    constructor(public event: EventKey, args: any[]) {\n        this.args = args;\n    }\n}\n\n/**\n * Provides buffered event emitting semantics, similar to many Node-style streams.\n * Subclasses will override EventEmitter.on() and trigger uncorking.\n * NOTE: It is HIGHLY recommended that uncorking should always be done via\n * ```process.nextTick()```, not during the EventEmitter.on() call.\n *\n * See also: [Node writable streams](https://nodejs.org/api/stream.html#stream_writable_cork)\n *\n * @category Events\n */\nexport class BufferedEventEmitter extends EventEmitter {\n    private corked = false;\n    private eventQueue?: BufferedEvent;\n    private lastQueuedEvent?: BufferedEvent;\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * Forces all written events to be buffered in memory. The buffered data will be\n     * flushed when {@link BufferedEventEmitter.uncork} is called.\n     */\n    cork() {\n        this.corked = true;\n    }\n\n    /**\n     * Flushes all data buffered since {@link BufferedEventEmitter.cork} was called.\n     *\n     * NOTE: It is HIGHLY recommended that uncorking should always be done via\n     * ``` process.nextTick```, not during the ```EventEmitter.on()``` call.\n     */\n    uncork() {\n        this.corked = false;\n        while (this.eventQueue) {\n            const event = this.eventQueue;\n            super.emit(event.event, ...event.args);\n            this.eventQueue = this.eventQueue.next;\n        }\n    }\n\n    /**\n     * Synchronously calls each of the listeners registered for the event key supplied\n     * in registration order. If the {@link BufferedEventEmitter} is currently corked,\n     * the event will be buffered until {@link BufferedEventEmitter.uncork} is called.\n     * @param event The name of the event\n     * @param args Event payload\n     */\n    emit(event: EventKey, ...args: any[]): boolean {\n        if (this.corked) {\n            // queue requests in order\n            let last = this.lastQueuedEvent;\n            this.lastQueuedEvent = new BufferedEvent(event, args);\n            if (last) {\n                last.next = this.lastQueuedEvent;\n            } else {\n                this.eventQueue = this.lastQueuedEvent;\n            }\n            return this.listeners(event).length > 0;\n        }\n\n        return super.emit(event, ...args);\n    }\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport {CrtError} from \"./error\";\n\n/*\n* Limits for header value validation\n*/\nexport const MAX_INT8 : number = 127;\nexport const MIN_INT8 : number = -128;\nexport const MAX_INT16 : number = 32767;\nexport const MIN_INT16 : number = -32768;\nexport const MAX_INT32 : number = 2147483647;\nexport const MIN_INT32 : number = -2147483648;\nexport const MAX_INT64 : bigint = BigInt(\"9223372036854775807\");\nexport const MIN_INT64 : bigint = BigInt(\"-9223372036854775808\");\n\nconst MAX_UINT8_AS_BIGINT : bigint = BigInt(\"256\");\n\n/** @internal */\nexport function marshalInt64BigintAsBuffer(value: bigint) : Uint8Array {\n    if (value < MIN_INT64 || value > MAX_INT64) {\n        throw new CrtError(\"marshalInt64BigintAsBuffer expects a value that can fit in 8 bytes\");\n    }\n\n    let buffer : Uint8Array = new Uint8Array(8);\n\n    /* encode the integer as a twos-complement byte sequence */\n    if (value < 0) {\n        value = -value - BigInt(1);\n        for (let i = 0; i < 8; ++i) {\n            buffer[i] = 255 - Number(value % MAX_UINT8_AS_BIGINT);\n            value /= MAX_UINT8_AS_BIGINT;\n        }\n    } else {\n        for (let i = 0; i < 8; ++i) {\n            buffer[i] = Number(value % MAX_UINT8_AS_BIGINT);\n            value /= MAX_UINT8_AS_BIGINT;\n        }\n    }\n\n    return buffer;\n}\n\n/** @internal */\nexport function unmarshalInt64BigintFromBuffer(buffer: ArrayBuffer) : bigint {\n    let value : bigint = BigInt(0);\n\n    let byteView = new Uint8Array(buffer);\n    if (byteView.length != 8) {\n        throw new CrtError(\"unmarshalInt64BigintFromBuffer expects a byte buffer of length 8\");\n    }\n\n    let shift: bigint = BigInt(1);\n    let isNegative = (byteView[7] & 0x80) != 0;\n\n    /* encoding is two's-complement, so treat negative and non-negative differently */\n    if (isNegative) {\n        for (let i = 0; i < byteView.length; ++i) {\n            let byteValue: bigint = BigInt(255 - byteView[i]);\n            value += (byteValue * shift);\n            shift *= MAX_UINT8_AS_BIGINT;\n        }\n\n        value += BigInt(1);\n        value = -value;\n    } else {\n        for (let i = 0; i < byteView.length; ++i) {\n            let byteValue: bigint = BigInt(byteView[i]);\n            value += (byteValue * shift);\n            shift *= MAX_UINT8_AS_BIGINT;\n        }\n    }\n\n    return value;\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\nimport {NativeResourceMixin} from \"./native_resource\";\nimport {BufferedEventEmitter} from \"../common/event\";\nimport {CrtError} from \"./error\";\nimport * as io from \"./io\";\nimport * as eventstream_utils from \"./eventstream_utils\";\nimport * as cancel from \"../common/cancel\";\nimport * as promise from \"../common/promise\";\nimport crt_native from \"./binding\";\n\n/**\n * Node.js specific eventstream rpc native bindings\n *\n * DEVELOPER PREVIEW DISCLAIMER\n *\n * Eventstream RPC support is currently in **developer preview**.  We encourage feedback at all times, but feedback\n * during the preview window is especially valuable in shaping the final product.  During the preview period we may make\n * backwards-incompatible changes to the public API, but in general, this is something we will try our best to avoid.\n *\n * @packageDocumentation\n * @module eventstream\n * @mergeTarget\n *\n */\n\n/**\n * Supported types for the value within an eventstream message header\n */\nexport enum HeaderType {\n\n    /** Value is True. No actual value is transmitted on the wire. */\n    BooleanTrue = 0,\n\n    /** Value is True. No actual value is transmitted on the wire. */\n    BooleanFalse = 1,\n\n    /** Value is signed 8-bit int. */\n    Byte = 2,\n\n    /** Value is signed 16-bit int. */\n    Int16 = 3,\n\n    /** Value is signed 32-bit int. */\n    Int32 = 4,\n\n    /** Value is signed 64-bit int. */\n    Int64 = 5,\n\n    /** Value is raw bytes. */\n    ByteBuffer = 6,\n\n    /** Value is a str.  Transmitted on the wire as utf-8. */\n    String = 7,\n\n    /** Value is a posix timestamp (seconds since Unix epoch).  Transmitted on the wire as a 64-bit int. */\n    Timestamp = 8,\n\n    /** Value is a UUID. Transmitted on the wire as 16 bytes. */\n    UUID = 9,\n}\n\n/**\n * Union type for message payloads.\n *\n * Payloads are allowed to be any of the these types in an outbound message.\n * Payloads will always be ArrayBuffers when emitting received messages.\n */\nexport type Payload = string | ArrayBuffer | ArrayBufferView;\n\nconst AWS_MAXIMUM_EVENT_STREAM_HEADER_NAME_LENGTH : number = 127;\n\ntype HeaderValue =\n    undefined |  /* BooleanTrue, BooleanFalse */\n    number |  /* byte, int16, int32, timestamp */\n    string |  /* string */\n    Payload;  /* ByteBuffer, UUID (via ArrayBuffer), int64 */\n\n/**\n * Wrapper class for event stream message headers.  Similar to HTTP, a header is a name-value pair.  Unlike HTTP, the\n * value's wire format varies depending on a type annotation.  We provide static builder functions to help\n * ensure correct type agreement (type annotation matches actual value) at construction time.  Getting the header\n * value requires the use of a safe conversion function.\n */\nexport class Header {\n\n    /** @internal */\n    constructor(public name: string, public type: HeaderType, public value?: HeaderValue) {}\n\n    private static validateHeaderName(name: string) {\n        if (name.length == 0 || name.length > AWS_MAXIMUM_EVENT_STREAM_HEADER_NAME_LENGTH) {\n            throw new CrtError(`Event stream header name (${name}) is not valid`);\n        }\n    }\n\n    /**\n     * Create a new boolean-valued message header\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newBoolean(name: string, value: boolean): Header {\n        Header.validateHeaderName(name);\n\n        if (value) {\n            return new Header(name, HeaderType.BooleanTrue);\n        } else {\n            return new Header(name, HeaderType.BooleanFalse);\n        }\n    }\n\n    /**\n     * Create a new byte-valued message header\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newByte(name: string, value: number): Header {\n        Header.validateHeaderName(name);\n\n        if (value >= eventstream_utils.MIN_INT8 && value <= eventstream_utils.MAX_INT8 && Number.isSafeInteger(value)) {\n            return new Header(name, HeaderType.Byte, value);\n        }\n\n        throw new CrtError(`Illegal value for eventstream byte-valued header: ${value}`);\n    }\n\n    /**\n     * Create a new 16-bit-integer-valued message header\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newInt16(name: string, value: number): Header {\n        Header.validateHeaderName(name);\n\n        if (value >= eventstream_utils.MIN_INT16 && value <= eventstream_utils.MAX_INT16 && Number.isSafeInteger(value)) {\n            return new Header(name, HeaderType.Int16, value);\n        }\n\n        throw new CrtError(`Illegal value for eventstream int16-valued header: ${value}`);\n    }\n\n    /**\n     * Create a new 32-bit-integer-valued message header\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newInt32(name: string, value: number): Header {\n        Header.validateHeaderName(name);\n\n        if (value >= eventstream_utils.MIN_INT32 && value <= eventstream_utils.MAX_INT32 && Number.isSafeInteger(value)) {\n            return new Header(name, HeaderType.Int32, value);\n        }\n\n        throw new CrtError(`Illegal value for eventstream int32-valued header: ${value}`);\n    }\n\n    /**\n     * Create a new 64-bit-integer-valued message header.  number cannot represent a full 64-bit integer range but\n     * its usage is so common that this exists for convenience.  Internally, we always track 64 bit integers as\n     * bigints.\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newInt64FromNumber(name: string, value: number): Header {\n        Header.validateHeaderName(name);\n\n        if (Number.isSafeInteger(value)) {\n            return new Header(name, HeaderType.Int64, eventstream_utils.marshalInt64BigintAsBuffer(BigInt(value)));\n        }\n\n        throw new CrtError(`Illegal value for eventstream int64-valued header: ${value}`);\n    }\n\n    /**\n     * Create a new 64-bit-integer-valued message header from a big integer.\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newInt64FromBigint(name: string, value: bigint): Header {\n        Header.validateHeaderName(name);\n\n        if (value >= eventstream_utils.MIN_INT64 && value <= eventstream_utils.MAX_INT64) {\n            return new Header(name, HeaderType.Int64, eventstream_utils.marshalInt64BigintAsBuffer(value));\n        }\n\n        throw new CrtError(`Illegal value for eventstream int64-valued header: ${value}`);\n    }\n\n    /**\n     * Create a new byte-buffer-valued message header\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newByteBuffer(name: string, value: Payload): Header {\n        Header.validateHeaderName(name);\n\n        return new Header(name, HeaderType.ByteBuffer, value);\n    }\n\n    /**\n     * Create a new string-valued message header\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newString(name: string, value: string): Header {\n        Header.validateHeaderName(name);\n\n        return new Header(name, HeaderType.String, value);\n    }\n\n    /**\n     * Create a new timestamp-valued message header from an integral value in seconds since epoch.\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newTimeStampFromSecondsSinceEpoch(name: string, secondsSinceEpoch: number): Header {\n        Header.validateHeaderName(name);\n\n        if (Number.isSafeInteger(secondsSinceEpoch) && secondsSinceEpoch >= 0) {\n            return new Header(name, HeaderType.Timestamp, secondsSinceEpoch);\n        }\n\n        throw new CrtError(`Illegal value for eventstream timestamp-valued header: ${secondsSinceEpoch}`);\n    }\n\n    /**\n     * Create a new timestamp-valued message header from a date.\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newTimeStampFromDate(name: string, date: Date): Header {\n        Header.validateHeaderName(name);\n\n        const secondsSinceEpoch: number = date.getTime();\n        if (Number.isSafeInteger(secondsSinceEpoch)) {\n            return new Header(name, HeaderType.Timestamp, secondsSinceEpoch);\n        }\n\n        throw new CrtError(`Illegal value for eventstream timestamp-valued header: ${date}`);\n    }\n\n    /**\n     * Create a new UUID-valued message header.\n     * WIP\n     *\n     * @param name name of the header\n     * @param value value of the header\n     */\n    static newUUID(name: string, value: ArrayBuffer): Header {\n        Header.validateHeaderName(name);\n\n        if (value.byteLength == 16) {\n            return new Header(name, HeaderType.UUID, value);\n        }\n\n        throw new CrtError(`Illegal value for eventstream uuid-valued header: ${value}`);\n    }\n\n    private toValue(type: HeaderType): any {\n        if (type != this.type) {\n            throw new CrtError(`Header of type (${this.type}) cannot be converted to type (${type})`);\n        }\n\n        return this.value;\n    }\n\n    /**\n     * All conversion functions require the header's type to be appropriately matching.  There are no error-prone\n     * flexible conversion helpers.\n     */\n\n    /**\n     * Returns a boolean header's value.\n     */\n    asBoolean(): boolean {\n        switch (this.type) {\n            case HeaderType.BooleanFalse:\n                return false;\n            case HeaderType.BooleanTrue:\n                return true;\n            default:\n                throw new CrtError(`Header of type (${this.type}) cannot be converted to type (boolean)`);\n\n        }\n    }\n\n    /**\n     * Returns a byte header's value.\n     */\n    asByte(): number {\n        return this.toValue(HeaderType.Byte) as number;\n    }\n\n    /**\n     * Returns a 16-bit integer header's value.\n     */\n    asInt16(): number {\n        return this.toValue(HeaderType.Int16) as number;\n    }\n\n    /**\n     * Returns a 32-bit integer header's value.\n     */\n    asInt32(): number {\n        return this.toValue(HeaderType.Int32) as number;\n    }\n\n    /**\n     * Returns a 64-bit integer header's value.\n     */\n    asInt64(): bigint {\n        return eventstream_utils.unmarshalInt64BigintFromBuffer(this.toValue(HeaderType.Int64) as ArrayBuffer);\n    }\n\n    /**\n     * Returns a byte buffer header's value.\n     */\n    asByteBuffer(): Payload {\n        return this.toValue(HeaderType.ByteBuffer) as Payload;\n    }\n\n    /**\n     * Returns a string header's value.\n     */\n    asString(): string {\n        return this.toValue(HeaderType.String) as string;\n    }\n\n    /**\n     * Returns a timestamp header's value (as seconds since epoch).\n     */\n    asTimestamp(): number {\n        return this.toValue(HeaderType.Timestamp) as number;\n    }\n\n    /**\n     * Returns a UUID header's value.\n     */\n    asUUID(): ArrayBuffer {\n        return this.toValue(HeaderType.UUID) as ArrayBuffer;\n    }\n}\n\n/**\n * Flags for messages in the event-stream RPC protocol.\n *\n * Flags may be XORed together.\n * Not all flags can be used with all message types, consult documentation.\n */\nexport enum MessageFlags {\n\n    /** Nothing */\n    None = 0,\n\n    /**\n     * Connection accepted\n     *\n     * If this flag is absent from a {@link MessageType.ConnectAck ConnectAck} message, the connection has been\n     * rejected.\n     */\n    ConnectionAccepted = 0x1,\n\n    /**\n     * Terminate stream\n     *\n     * This message may be used with any message type.\n     * The sender will close their connection after the message is written to the wire.\n     * The receiver will close their connection after delivering the message to the user.\n     */\n    TerminateStream = 0x2,\n}\n\n/**\n *\n * Types of messages in the event-stream RPC protocol.\n * The {@link MessageType.ApplicationMessage Application} and {@link MessageType.ApplicationError Error} message types\n * may only be sent on streams, and will never arrive as a protocol message (stream-id 0).\n *\n * For all other message types, they may only be sent as protocol messages\n * (stream-id 0), and will never arrive as a stream message.\n *\n * Different message types expect specific headers and flags, consult documentation.\n */\nexport enum MessageType {\n\n    /** Application message */\n    ApplicationMessage = 0,\n\n    /** Application error */\n    ApplicationError = 1,\n\n    /** Ping */\n    Ping = 2,\n\n    /** Ping response */\n    PingResponse = 3,\n\n    /** Connect */\n    Connect = 4,\n\n    /**\n     * Connect acknowledgement\n     *\n     * If the {@link MessageFlags.ConnectionAccepted ConnectionAccepted} flag is not present, the connection has been rejected.\n     */\n    ConnectAck = 5,\n\n    /**\n     * Protocol error\n     */\n    ProtocolError = 6,\n\n    /**\n     * Internal error\n     */\n    InternalError = 7,\n}\n\n/**\n * Wrapper type for all event stream messages, whether they are protocol or application-level.\n */\nexport interface Message {\n\n    /**\n     * Type of message this is\n     */\n    type: MessageType,\n\n    /**\n     * Flags indicating additional boolean message properties\n     */\n    flags?: MessageFlags,\n\n    /**\n     * Message headers associated with this message\n     */\n    headers?: Array<Header>,\n\n    /**\n     * Actual message payload\n     */\n    payload?: Payload,\n}\n\n/** @internal */\nfunction mapPodHeadersToJSHeaders(headers: Array<Header>) : Array<Header> {\n    return Array.from(headers, (header) => {\n        return new Header(header.name, header.type, header.value);\n    });\n}\n\n/** @internal */\nfunction mapPodMessageToJSMessage(message: Message) : Message {\n    let jsMessage : Message = {\n        type: message.type,\n        flags: message.flags,\n        payload: message.payload\n    }\n\n    if (message.headers) {\n        jsMessage.headers = mapPodHeadersToJSHeaders(message.headers);\n    }\n\n    return jsMessage;\n}\n\n/**\n * Eventstream client connection configuration options.\n */\nexport interface ClientConnectionOptions {\n\n    /**\n     * Name of the host to connect to\n     */\n    hostName: string;\n\n    /**\n     * Port of the host to connect to\n     */\n    port: number;\n\n    /**\n     * Optional, additional socket options for the desired connection\n     */\n    socketOptions?: io.SocketOptions;\n\n    /**\n     * TLS context for the desired connection\n     */\n    tlsCtx?: io.ClientTlsContext;\n}\n\n/**\n * Options for opening a connection to an eventstream server\n */\nexport interface ConnectOptions {\n    /**\n     * Optional controller that allows the cancellation of asynchronous eventstream operations\n     */\n    cancelController?: cancel.ICancelController;\n}\n\n/**\n * Options for sending a protocol message over the client connection.\n */\nexport interface ProtocolMessageOptions {\n\n    /**\n     * Protocol message to send\n     */\n    message: Message;\n\n    /**\n     * Optional controller that allows the cancellation of asynchronous eventstream operations\n     */\n    cancelController?: cancel.ICancelController;\n}\n\n/**\n * Options for activating an event stream within the client connection.\n */\nexport interface ActivateStreamOptions {\n\n    /**\n     * Name of the operation that should be associated with this stream.\n     */\n    operation: string;\n\n    /**\n     * Application message to send as part of activating the stream.\n     */\n    message: Message;\n\n    /**\n     * Optional controller that allows the cancellation of asynchronous eventstream operations\n     */\n    cancelController?: cancel.ICancelController;\n}\n\n/**\n * Options for sending an application message within an event stream\n */\nexport interface StreamMessageOptions {\n\n    /**\n     * Application message to send.\n     */\n    message: Message;\n\n    /**\n     * Optional controller that allows the cancellation of asynchronous eventstream operations\n     */\n    cancelController?: cancel.ICancelController;\n}\n\n/**\n * Event emitted when an event stream connection has been fully shut down.  The connection is unusable afterwards, but\n * close() must still be called in order to release the native resources.\n */\nexport interface DisconnectionEvent {\n\n    /**\n     * Native error code.  Convert to a descriptive string with error_code_to_string()\n     */\n    errorCode: number;\n}\n\n/**\n * Event emitted when a message is received on an event stream connection.  When emitted by the connection, this\n * is a protocol message.  When emitted by a stream, it is an application message.\n */\nexport interface MessageEvent {\n\n    /**\n     * Event stream message received by the connection/stream.\n     */\n    message: Message;\n}\n\n/**\n * Signature for a handler that listens to event stream message events.\n */\nexport type MessageListener = (eventData: MessageEvent) => void;\n\n/**\n * Signature for a handler that listens to event stream disconnection events.\n */\nexport type DisconnectionListener = (eventData: DisconnectionEvent) => void;\n\n\n/**\n * @internal\n *\n * While not strictly necessary, the single-threaded nature of JS execution allows us to easily apply some\n * rigid constraints to the public API calls of our event stream objects.  This in turn reduces the complexity of the\n * binding cases we need to consider.\n *\n * This state value is the primary means by which we add and enforce these constraints to connection objects.\n *\n * Constraints enforced in the managed binding:\n *\n *  (1) close() may only be called once.  Once it has been called, nothing else may be called.\n *  (2) newStream() and sendMessage() may only be called after successful connection establishment and before the\n *      connection has been closed.\n *  (3) connect() may only be called once.  Combined with (1) and (2), this means that if connect() is called, it must\n *      be the first thing called.\n */\nenum ClientConnectionState {\n    None,\n    Connecting,\n    Connected,\n    Disconnected,\n    Closed,\n}\n\n/**\n * Wrapper for a network connection that fulfills the client-side event stream RPC protocol contract.\n *\n * The user **must** call close() on a connection once finished with it.  Once close() has been called, no more events\n * will be emitted and all public API invocations will trigger an exception.\n */\nexport class ClientConnection extends NativeResourceMixin(BufferedEventEmitter) {\n\n    /**\n     * Configures and creates a new ClientConnection instance\n     *\n     * @param config configuration options for the event stream connection\n     */\n    constructor(config: ClientConnectionOptions) {\n        if (config === undefined) {\n            throw new CrtError(\"Invalid configuration passed to eventstream ClientConnection constructor\");\n        }\n\n        super();\n\n        this.state = ClientConnectionState.None;\n\n        this._super(crt_native.event_stream_client_connection_new(\n            this,\n            config,\n            (connection: ClientConnection, errorCode: number) => { ClientConnection._s_on_disconnect(connection, errorCode); },\n            (connection: ClientConnection, message: Message) => { ClientConnection._s_on_protocol_message(connection, message); },\n            config.socketOptions ? config.socketOptions.native_handle() : null,\n            config.tlsCtx ? config.tlsCtx.native_handle() : null\n        ));\n    }\n\n    /**\n     * Shuts down the connection (if active) and begins the process to release native resources associated with it by\n     * having the native binding release the only reference to the extern object representing the connection.  Once\n     * close() has been called, no more events will be emitted and all public API invocations will trigger an exception.\n     *\n     * Ultimately, the native resources will not be released until the connection has fully shut down and that\n     * shutdown event has reached the libuv event loop.\n     *\n     * This function **must** be called for every ClientConnection instance or native resources will leak.\n     */\n    close() : void {\n        if (this.state != ClientConnectionState.Closed) {\n            this.state = ClientConnectionState.Closed;\n\n            // invoke native binding close\n            crt_native.event_stream_client_connection_close(this.native_handle());\n        }\n    }\n\n    /**\n     * Attempts to open a network connection to the configured remote endpoint.  Returned promise will be fulfilled if\n     * the transport-level connection is successfully established, and rejected otherwise.\n     *\n     * connect() may only be called once.\n     */\n    async connect(options: ConnectOptions) : Promise<void> {\n        let cleanupCancelListener : promise.PromiseCleanupFunctor | undefined = undefined;\n\n        let connectPromise : Promise<void> = new Promise<void>((resolve, reject) => {\n            if (!options) {\n                reject(new CrtError(\"Invalid options passed to event stream ClientConnection.connect\"));\n                return;\n            }\n\n            if (this.state != ClientConnectionState.None) {\n                reject(new CrtError(`Event stream connection in a state (${this.state}) where connect() is not allowed.`));\n                return;\n            }\n\n            this.state = ClientConnectionState.Connecting;\n\n            if (options.cancelController) {\n                let cancel : () => void = () => {\n                    reject(new CrtError(`Event stream connection connect() cancelled by external request.`));\n                    setImmediate(() => { this.close(); });\n                };\n\n                cleanupCancelListener = options.cancelController.addListener(cancel);\n                if (!cleanupCancelListener) {\n                    return;\n                }\n            }\n\n            function curriedPromiseCallback(connection: ClientConnection, errorCode: number){\n                return ClientConnection._s_on_connection_setup(resolve, reject, connection, errorCode);\n            }\n\n            try {\n                crt_native.event_stream_client_connection_connect(this.native_handle(), curriedPromiseCallback);\n            } catch (e) {\n                this.state = ClientConnectionState.Disconnected;\n                reject(e);\n            }\n        });\n\n        return promise.makeSelfCleaningPromise(connectPromise, cleanupCancelListener);\n    }\n\n    /**\n     * Attempts to send an event stream protocol message over an open connection.\n     *\n     * @param options configuration -- including the message itself -- for sending a protocol message\n     *\n     * Returns a promise that will be fulfilled when the message is successfully flushed to the wire, and rejected if\n     * an error occurs prior to that point.\n     */\n    async sendProtocolMessage(options: ProtocolMessageOptions) : Promise<void> {\n        let cleanupCancelListener : promise.PromiseCleanupFunctor | undefined = undefined;\n\n        let sendProtocolMessagePromise : Promise<void> = new Promise<void>((resolve, reject) => {\n            try {\n                if (!options) {\n                    reject(new CrtError(\"Invalid options passed to event stream ClientConnection.sendProtocolMessage\"));\n                    return;\n                }\n\n                if (!this.isConnected()) {\n                    reject(new CrtError(`Event stream connection in a state (${this.state}) where sending protocol messages is not allowed.`));\n                    return;\n                }\n\n                if (options.cancelController) {\n                    let cancel : () => void = () => {\n                        reject(new CrtError(`Event stream connection sendProtocolMessage() cancelled by external request.`));\n                        setImmediate(() => { this.close(); });\n                    };\n\n                    cleanupCancelListener = options.cancelController.addListener(cancel);\n                    if (!cleanupCancelListener) {\n                        return;\n                    }\n                }\n\n                // invoke native binding send message;\n                function curriedPromiseCallback(errorCode: number) {\n                    return ClientConnection._s_on_connection_send_protocol_message_completion(resolve, reject, errorCode);\n                }\n\n                // invoke native binding send message;\n                crt_native.event_stream_client_connection_send_protocol_message(this.native_handle(), options, curriedPromiseCallback);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        return promise.makeSelfCleaningPromise(sendProtocolMessagePromise, cleanupCancelListener);\n    }\n\n    /**\n     * Returns true if the connection is currently open and ready-to-use, false otherwise.\n     *\n     * Internal note: Our notion of \"connected\" is intentionally not an invocation of\n     * aws_event_stream_rpc_client_connection_is_open() (whose status is an out-of-sync race condition vs. our\n     * well-defined client state)\n     */\n    isConnected() : boolean {\n        return this.state == ClientConnectionState.Connected;\n    }\n\n    /**\n     * Creates a new stream within the connection.\n     */\n    newStream() : ClientStream {\n        if (!this.isConnected()) {\n            throw new CrtError(`Event stream connection in a state (${this.state}) where creating new streams is forbidden.`);\n        }\n\n        return new ClientStream(this);\n    }\n\n    /**\n     * Event emitted when the connection is closed for any reason.\n     *\n     * Listener type: {@link DisconnectionListener}\n     *\n     * @event\n     */\n    static DISCONNECTION : string = 'disconnection';\n\n    /**\n     * Event emitted when a protocol message is received from the remote endpoint\n     *\n     * Listener type: {@link MessageListener}\n     *\n     * @event\n     */\n    static PROTOCOL_MESSAGE : string = 'protocolMessage';\n\n    on(event: 'disconnection', listener: DisconnectionListener): this;\n\n    on(event: 'protocolMessage', listener: MessageListener): this;\n\n    on(event: string | symbol, listener: (...args: any[]) => void): this {\n        super.on(event, listener);\n        return this;\n    }\n\n    private static _s_on_connection_setup(resolve : (value: (void | PromiseLike<void>)) => void, reject : (reason?: any) => void, connection: ClientConnection, errorCode: number) {\n        if (errorCode == 0 && connection.state == ClientConnectionState.Connecting) {\n            connection.state = ClientConnectionState.Connected;\n            resolve();\n        } else {\n            if (connection.state != ClientConnectionState.Closed) {\n                connection.state = ClientConnectionState.Disconnected;\n            }\n\n            reject(io.error_code_to_string(errorCode));\n        }\n    }\n\n    private static _s_on_disconnect(connection: ClientConnection, errorCode: number) {\n        if (connection.state != ClientConnectionState.Closed) {\n            connection.state = ClientConnectionState.Disconnected;\n        }\n\n        process.nextTick(() => {\n            connection.emit('disconnection', {errorCode: errorCode});\n        });\n    }\n\n    private static _s_on_protocol_message(connection: ClientConnection, message: Message) {\n        process.nextTick(() => {\n            connection.emit('protocolMessage', {message: mapPodMessageToJSMessage(message)});\n        });\n    }\n\n    private static _s_on_connection_send_protocol_message_completion(resolve : (value: (void | PromiseLike<void>)) => void, reject : (reason?: any) => void, errorCode: number) {\n        if (errorCode == 0) {\n            resolve();\n        } else {\n            reject(io.error_code_to_string(errorCode));\n        }\n    }\n\n    private state : ClientConnectionState;\n}\n\n/**\n * Event emitted when the stream has ended.  At most one stream ended event will ever be emitted by a single\n * stream.\n */\nexport interface StreamEndedEvent {\n}\n\n/**\n * Signature for a handler that listens to stream ended events.\n */\nexport type StreamEndedListener = (eventData: StreamEndedEvent) => void;\n\n/**\n * @internal\n *\n * While not strictly necessary, the single-threaded nature of JS execution allows us to easily apply some\n * rigid constraints to the public API calls of our event stream objects.  This in turn reduces the complexity of the\n * binding cases we need to consider.\n *\n * This state value is the primary means by which we add and enforce these constraints to stream objects.\n *\n * Constraints enforced in the managed binding:\n *\n *  (1) close() may only be called once.  Once it has been called, nothing else may be called.\n *  (2) sendMessage() may only be called after successful stream activation and before the\n *      stream has been closed.\n *  (3) activate() may only be called once.  Combined with (1) and (2), this means that if activate() is called, it must\n *      be the first thing called.\n */\nenum ClientStreamState {\n    None,\n    Activating,\n    Activated,\n    Ended,\n    Closed,\n}\n\n/**\n * Wrapper for an individual stream within an eventstream connection.\n *\n * The user **must** call close() on a stream once finished with it.  Once close() has been called, no more events\n * will be emitted and all public API invocations will trigger an exception.\n */\nexport class ClientStream extends NativeResourceMixin(BufferedEventEmitter) {\n\n    constructor(connection: ClientConnection) {\n        super();\n\n        this._super(crt_native.event_stream_client_stream_new(\n            this,\n            connection.native_handle(),\n            (stream: ClientStream) => { ClientStream._s_on_stream_ended(stream); },\n            (stream: ClientStream, message: Message) => { ClientStream._s_on_stream_message(stream, message); },\n        ));\n\n        this.state = ClientStreamState.None;\n    }\n\n    /**\n     * Shuts down the stream (if active) and begins the process to release native resources associated with it by\n     * having the native binding release the only reference to the extern object representing the stream.  Once\n     * close() has been called, no more events will be emitted and all public API invocations will trigger an exception.\n     *\n     * Ultimately, the native resources will not be released until the native stream has fully shut down and that\n     * shutdown event has reached the libuv event loop.\n     *\n     * This function **must** be called for every ClientStream instance or native resources will leak.\n     */\n    close() : void {\n        if (this.state != ClientStreamState.Closed) {\n            this.state = ClientStreamState.Closed;\n\n            crt_native.event_stream_client_stream_close(this.native_handle());\n        }\n    }\n\n    /**\n     * Activates the stream, allowing it to start sending and receiving messages.  The promise completes when\n     * the activation message has been written to the wire.\n     *\n     * activate() may only be called once.\n     *\n     * @param options -- configuration data for stream activation, including operation name and initial message\n     */\n    async activate(options: ActivateStreamOptions) : Promise<void> {\n        let cleanupCancelListener : promise.PromiseCleanupFunctor | undefined = undefined;\n\n        let activatePromise : Promise<void> = new Promise<void>((resolve, reject) => {\n            try {\n                if (this.state != ClientStreamState.None) {\n                    reject(new CrtError(`Event stream in a state (${this.state}) where activation is not allowed.`));\n                    return;\n                }\n\n                /*\n                 * Intentionally check this after the state check (so closed streams do not reach here).\n                 * Intentionally mutate state the same way a failed synchronous call to native activate does.\n                 */\n                if (options === undefined) {\n                    this.state = ClientStreamState.Ended;\n                    reject(new CrtError(\"Invalid options passed to ClientStream.activate\"));\n                    return;\n                }\n\n                this.state = ClientStreamState.Activating;\n\n                if (options.cancelController) {\n                    let cancel : () => void = () => {\n                        reject(new CrtError(`Event stream activate() cancelled by external request.`));\n                        setImmediate(() => { this.close(); });\n                    };\n\n                    cleanupCancelListener = options.cancelController.addListener(cancel);\n                    if (!cleanupCancelListener) {\n                        return;\n                    }\n                }\n\n                function curriedPromiseCallback(stream: ClientStream, errorCode: number){\n                    return ClientStream._s_on_stream_activated(resolve, reject, stream, errorCode);\n                }\n\n                crt_native.event_stream_client_stream_activate(this.native_handle(), options, curriedPromiseCallback);\n            } catch (e) {\n                this.state = ClientStreamState.Ended;\n                reject(e);\n            }\n        });\n\n        return promise.makeSelfCleaningPromise<void>(activatePromise, cleanupCancelListener);\n    }\n\n    /**\n     * Attempts to send an event stream message.\n     *\n     * @param options configuration -- including the message itself -- for sending a message\n     *\n     * Returns a promise that will be fulfilled when the message is successfully flushed to the wire, and rejected if\n     * an error occurs prior to that point.\n     */\n    async sendMessage(options: StreamMessageOptions) : Promise<void> {\n        let cleanupCancelListener : promise.PromiseCleanupFunctor | undefined = undefined;\n\n        let sendMessagePromise : Promise<void> = new Promise<void>((resolve, reject) => {\n            try {\n                if (!options) {\n                    reject(new CrtError(\"Invalid options passed to ClientStream.sendMessage\"));\n                    return;\n                }\n\n                if (this.state != ClientStreamState.Activated) {\n                    reject(new CrtError(`Event stream in a state (${this.state}) where sending messages is not allowed.`));\n                    return;\n                }\n\n                if (options.cancelController) {\n                    let cancel : cancel.CancelListener = () => {\n                        reject(new CrtError(`Event stream sendMessage() cancelled by external request.`));\n                        setImmediate(() => { this.close(); });\n                    };\n\n                    cleanupCancelListener = options.cancelController.addListener(cancel);\n                    if (!cleanupCancelListener) {\n                        return;\n                    }\n                }\n\n                function curriedPromiseCallback(errorCode: number) {\n                    return ClientStream._s_on_stream_send_message_completion(resolve, reject, errorCode);\n                }\n\n                // invoke native binding send message;\n                crt_native.event_stream_client_stream_send_message(this.native_handle(), options, curriedPromiseCallback);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        return promise.makeSelfCleaningPromise<void>(sendMessagePromise, cleanupCancelListener);\n    }\n\n    /**\n     * Returns true if the stream is currently active and ready-to-use, false otherwise.\n     */\n    isActive() : boolean {\n        return this.state == ClientStreamState.Activated;\n    }\n\n    /**\n     * Event emitted when the stream is shut down for any reason.\n     *\n     * Listener type: {@link StreamEndedListener}\n     *\n     * @event\n     */\n    static ENDED : string = 'ended';\n\n    /**\n     * Event emitted when a stream message is received from the remote endpoint\n     *\n     * Listener type: {@link MessageListener}\n     *\n     * @event\n     */\n    static MESSAGE : string = 'message';\n\n    on(event: 'ended', listener: StreamEndedListener): this;\n\n    on(event: 'message', listener: MessageListener): this;\n\n    on(event: string | symbol, listener: (...args: any[]) => void): this {\n        super.on(event, listener);\n        return this;\n    }\n\n    private static _s_on_stream_activated(resolve : (value: (void | PromiseLike<void>)) => void, reject : (reason?: any) => void, stream: ClientStream, errorCode: number) {\n        if (errorCode == 0 && stream.state == ClientStreamState.Activating) {\n            stream.state = ClientStreamState.Activated;\n            resolve();\n        } else {\n            if (stream.state != ClientStreamState.Closed) {\n                stream.state = ClientStreamState.Ended;\n            }\n\n            reject(io.error_code_to_string(errorCode));\n        }\n    }\n\n    private static _s_on_stream_send_message_completion(resolve : (value: (void | PromiseLike<void>)) => void, reject : (reason?: any) => void, errorCode: number) {\n        if (errorCode == 0) {\n            resolve();\n        } else {\n            reject(io.error_code_to_string(errorCode));\n        }\n    }\n\n    private static _s_on_stream_ended(stream: ClientStream) {\n        process.nextTick(() => {\n            stream.emit(ClientStream.ENDED, {});\n        });\n    }\n\n    private static _s_on_stream_message(stream: ClientStream, message: Message) {\n        process.nextTick(() => {\n            stream.emit(ClientStream.MESSAGE, {message: mapPodMessageToJSMessage(message)});\n        });\n    }\n\n    private state : ClientStreamState;\n}", "/*\n *\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing support for creating http connections and making requests on them.\n *\n * @packageDocumentation\n * @module http\n */\n\n/**\n * HTTP protocol version\n *\n * @category HTTP\n */\nexport enum HttpVersion {\n    Unknown = 0,\n    /** HTTP/1.0 */\n    Http1_0 = 1,\n    /** HTTP/1.1 */\n    Http1_1 = 2,\n    /** HTTP/2 */\n    Http2 = 3,\n}\n\n/**\n * Headers are exposed as 2 element arrays: [name, value]\n *\n * @category HTTP\n */\nexport type HttpHeader = [string, string];\n\n/**\n * Common interface for a set of HTTP headers.\n *\n * @category HTTP\n */\nexport interface HttpHeaders {\n    readonly length: number;\n\n    /**\n     * Add a name/value pair\n     * @param name - The header name\n     * @param value - The header value\n    */\n    add(name: string, value: string): void;\n\n    /**\n     * Set a name/value pair, replacing any existing values for the name\n     * @param name - The header name\n     * @param value - The header value\n    */\n    set(name: string, value: string): void;\n\n    /**\n     * Get the list of values for the given name\n     * @param name - The header name to look for\n     * @return List of values, or empty list if none exist\n     */\n    get_values(name: string): string[];\n\n    /**\n     * Gets the first value for the given name, ignoring any additional values\n     * @param name - The header name to look for\n     * @param default_value - Value returned if no values are found for the given name\n     * @return The first header value, or default if no values exist\n     */\n    get(name: string, default_value?: string): string;\n\n    /**\n     * Removes all values for the given name\n     * @param name - The header to remove all values for\n     */\n    remove(name: string): void;\n\n    /**\n     * Removes a specific name/value pair\n     * @param name - The header name to remove\n     * @param value - The header value to remove\n     */\n    remove_value(name: string, value: string): void;\n\n    /** Clears the entire header set */\n    clear(): void;\n\n    /**\n     * Iterator. Allows for:\n     * let headers = new HttpHeaders();\n     * ...\n     * for (const header of headers) { }\n    */\n    [Symbol.iterator](): Iterator<HttpHeader>;\n\n    /** @hidden */\n    _flatten(): HttpHeader[];\n}\n\n/**\n * Proxy authentication types\n *\n * @category HTTP\n */\nexport enum HttpProxyAuthenticationType {\n\n    /**\n     * No to-proxy authentication logic\n     */\n    None = 0,\n\n    /**\n     * Use basic authentication (user/pass).  Supply these values in {@link HttpProxyOptions}\n     */\n    Basic = 1,\n};\n\n/**\n * Options used when connecting to an HTTP endpoint via a proxy\n *\n * @category HTTP\n */\nexport class CommonHttpProxyOptions {\n\n    /**\n     *\n     * @param host_name endpoint of the proxy to use\n     * @param port port of proxy to use\n     * @param auth_method type of authentication to use with the proxy\n     * @param auth_username (basic authentication only) proxy username\n     * @param auth_password (basic authentication only) password associated with the username\n     */\n    constructor(\n        public host_name: string,\n        public port: number,\n        public auth_method = HttpProxyAuthenticationType.None,\n        public auth_username?: string,\n        public auth_password?: string\n    ) {\n    }\n}\n\n/**\n * Listener signature for event emitted from an {@link HttpClientConnection} when the connection reaches the\n * connected state\n *\n * @category HTTP\n */\nexport type HttpClientConnectionConnected = () => void;\n\n/**\n * Listener signature for event emitted from an {@link HttpClientConnection} when an error occurs\n *\n * @param error - A CrtError containing the error that occurred\n *\n * @category HTTP\n */\nexport type HttpClientConnectionError = (error: Error) => void;\n\n/**\n * Listener signature for event emitted from an {@link HttpClientConnection} when the connection has been closed\n *\n * @category HTTP\n */\nexport type HttpClientConnectionClosed = () => void;\n\n/**\n * Listener signature for event emitted from an {@link HttpClientStream} when http response data is available\n *\n * @param body_data - The chunk of body data\n *\n * @category HTTP\n */\nexport type HttpStreamData = (body_data: ArrayBuffer) => void;\n\n\n/**\n * Listener signature for event emitted from an {@link HttpClientStream} when an http stream error occurs\n *\n * @param error - A CrtError containing the error that occurred\n *\n * @category HTTP\n */\nexport type HttpStreamError = (error: Error) => void;\n\n/**\n * Listener signature for event emitted from an {@link HttpClientStream} when the http stream has completed.\n *\n * @category HTTP\n */\nexport type HttpStreamComplete = () => void;\n\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing support for creating http connections and making requests on them.\n *\n * @packageDocumentation\n * @module http\n * @mergeTarget\n */\n\nimport crt_native from './binding';\nimport { NativeResource, NativeResourceMixin } from \"./native_resource\";\nimport { ResourceSafe } from '../common/resource_safety';\nimport { ClientBootstrap, SocketOptions, TlsConnectionOptions, InputStream } from './io';\nimport { CrtError } from './error';\nimport {\n    CommonHttpProxyOptions,\n    HttpProxyAuthenticationType,\n    HttpClientConnectionConnected,\n    HttpClientConnectionError,\n    HttpClientConnectionClosed,\n    HttpStreamComplete,\n    HttpStreamData,\n    HttpStreamError\n} from '../common/http';\n\n/** @internal */\nexport {HttpHeader} from '../common/http';\n\n/** @internal */\nexport { HttpProxyAuthenticationType } from '../common/http';\n\nimport { BufferedEventEmitter } from '../common/event';\n\n/**\n * @category HTTP\n */\nexport type HttpHeaders = crt_native.HttpHeaders;\n\n/**\n * @category HTTP\n */\nexport const HttpHeaders = crt_native.HttpHeaders;\n\n/** @internal */\ntype nativeHttpRequest = crt_native.HttpRequest;\n/** @internal */\nconst nativeHttpRequest = crt_native.HttpRequest;\n\n/**\n * @category HTTP\n */\nexport class HttpRequest extends nativeHttpRequest {\n    constructor(method: string, path: string, headers?: HttpHeaders, body?: InputStream) {\n        super(method, path, headers, body?.native_handle());\n    }\n}\n\n/**\n * Base class for HTTP connections\n *\n * @category HTTP\n */\nexport class HttpConnection extends NativeResourceMixin(BufferedEventEmitter) implements ResourceSafe {\n\n    protected constructor(native_handle: any) {\n        super();\n        this._super(native_handle);\n    }\n\n    /**\n     * Close the connection.\n     * Shutdown is asynchronous. This call has no effect if the connection is already\n     * closing.\n     */\n    close() {\n        crt_native.http_connection_close(this.native_handle());\n    }\n\n    /**\n     * Emitted when the connection is connected and ready to start streams\n     *\n     * @event\n     */\n    static CONNECT = 'connect';\n\n    /**\n     * Emitted when an error occurs on the connection\n     *\n     * @event\n     */\n    static ERROR = 'error';\n\n    /**\n     * Emitted when the connection has completed\n     *\n     * @event\n     */\n    static CLOSE = 'close';\n\n    on(event: 'connect', listener: HttpClientConnectionConnected): this;\n\n    on(event: 'error', listener: HttpClientConnectionError): this;\n\n    on(event: 'close', listener: HttpClientConnectionClosed): this;\n\n    // Overridden to allow uncorking on ready\n    on(event: string | symbol, listener: (...args: any[]) => void): this {\n        super.on(event, listener);\n        if (event == 'connect') {\n            process.nextTick(() => {\n                this.uncork();\n            })\n        }\n        return this;\n    }\n}\n\n/**\n * Proxy connection types.\n *\n * The original behavior was to make a tunneling connection if TLS was used, and a forwarding connection if it was not.\n * There are legitimate use cases for plaintext tunneling connections, and so the implicit behavior has now\n * been replaced by this setting, with a default that maps to the old behavior.\n *\n * @category HTTP\n */\nexport enum HttpProxyConnectionType {\n    /**\n     * (Default for backwards compatibility).  If Tls options are supplied then the connection will be a tunneling\n     * one, otherwise it will be a forwarding one.\n     */\n    Legacy = 0,\n\n    /**\n     * Establish a forwarding-based connection with the proxy.  Tls is not allowed in this case.\n     */\n    Forwarding = 1,\n\n    /**\n     * Establish a tunneling-based connection with the proxy.\n     */\n    Tunneling = 2,\n};\n\n/**\n * Proxy options for HTTP clients.\n *\n * @category HTTP\n */\nexport class HttpProxyOptions extends CommonHttpProxyOptions {\n    /**\n     *\n     * @param host_name Name of the proxy server to connect through\n     * @param port Port number of the proxy server to connect through\n     * @param auth_method Type of proxy authentication to use. Default is {@link HttpProxyAuthenticationType.None}\n     * @param auth_username Username to use when `auth_type` is {@link HttpProxyAuthenticationType.Basic}\n     * @param auth_password Password to use when `auth_type` is {@link HttpProxyAuthenticationType.Basic}\n     * @param tls_opts Optional TLS connection options for the connection to the proxy host.\n     *                 Must be distinct from the {@link TlsConnectionOptions} provided to\n     *                 the HTTP connection\n     * @param connection_type Optional Type of connection to make.  If not specified,\n     *                 {@link HttpProxyConnectionType.Legacy} will be used.\n     */\n    constructor(\n        host_name: string,\n        port: number,\n        auth_method = HttpProxyAuthenticationType.None,\n        auth_username?: string,\n        auth_password?: string,\n        public tls_opts?: TlsConnectionOptions,\n        public connection_type? : HttpProxyConnectionType\n    ) {\n        super(host_name, port, auth_method, auth_username, auth_password);\n    }\n\n    /** @internal */\n    create_native_handle() {\n        return crt_native.http_proxy_options_new(\n            this.host_name,\n            this.port,\n            this.auth_method,\n            this.auth_username,\n            this.auth_password,\n            this.tls_opts ? this.tls_opts.native_handle() : undefined,\n            this.connection_type ? this.connection_type : HttpProxyConnectionType.Legacy\n        );\n    }\n}\n\n/**\n * Represents an HTTP connection from a client to a server\n *\n * @category HTTP\n */\nexport class HttpClientConnection extends HttpConnection {\n    private _on_setup(native_handle: any, error_code: number) {\n        if (error_code) {\n            this.emit('error', new CrtError(error_code));\n            return;\n        }\n\n        this.emit('connect');\n    }\n\n    private _on_shutdown(native_handle: any, error_code: number) {\n        if (error_code) {\n            this.emit('error', new CrtError(error_code));\n            return;\n        }\n        this.emit('close');\n    }\n\n    /** Asynchronously establish a new HttpClientConnection.\n     * @param bootstrap Client bootstrap to use when initiating socket connection.  Leave undefined to use the\n     *          default system-wide bootstrap (recommended).\n     * @param host_name Host to connect to\n     * @param port Port to connect to on host\n     * @param socket_options Socket options\n     * @param tls_opts Optional TLS connection options\n     * @param proxy_options Optional proxy options\n    */\n    constructor(\n        protected bootstrap: ClientBootstrap | undefined,\n        host_name: string,\n        port: number,\n        protected socket_options: SocketOptions,\n        protected tls_opts?: TlsConnectionOptions,\n        proxy_options?: HttpProxyOptions,\n        handle?: any) {\n\n        if (socket_options == null || socket_options == undefined) {\n            throw new CrtError(\"HttpClientConnection constructor: socket_options not defined\");\n        }\n\n        super(handle\n            ? handle\n            : crt_native.http_connection_new(\n                bootstrap != null ? bootstrap.native_handle() : null,\n                (handle: any, error_code: number) => {\n                    this._on_setup(handle, error_code);\n                },\n                (handle: any, error_code: number) => {\n                    this._on_shutdown(handle, error_code);\n                },\n                host_name,\n                port,\n                socket_options.native_handle(),\n                tls_opts ? tls_opts.native_handle() : undefined,\n                proxy_options ? proxy_options.create_native_handle() : undefined,\n            ));\n    }\n\n    /**\n     * Create {@link HttpClientStream} to carry out the request/response exchange.\n     *\n     * NOTE: The stream sends no data until :meth:`HttpClientStream.activate()`\n     * is called. Call {@link HttpStream.activate} when you're ready for\n     * callbacks and events to fire.\n     * @param request - The HttpRequest to attempt on this connection\n     * @returns A new stream that will deliver events for the request\n     */\n    request(request: HttpRequest) {\n        let stream: HttpClientStream;\n        const on_response_impl = (status_code: Number, headers: [string, string][]) => {\n            stream._on_response(status_code, headers);\n        }\n\n        const on_body_impl = (data: ArrayBuffer) => {\n            stream._on_body(data);\n        }\n\n        const on_complete_impl = (error_code: Number) => {\n            stream._on_complete(error_code);\n        }\n        const native_handle = crt_native.http_stream_new(\n            this.native_handle(),\n            request,\n            on_complete_impl,\n            on_response_impl,\n            on_body_impl\n        );\n        return stream = new HttpClientStream(\n            native_handle,\n            this,\n            request);\n    }\n}\n\n/**\n * Represents a single http message exchange (request/response) in HTTP/1.1. In H2, it may\n * also represent a PUSH_PROMISE followed by the accompanying response.\n *\n * NOTE: Binding either the ready or response event will uncork any buffered events and start\n * event delivery\n *\n * @category HTTP\n */\nexport class HttpStream extends NativeResourceMixin(BufferedEventEmitter) implements ResourceSafe {\n    protected constructor(\n        native_handle: any,\n        readonly connection: HttpConnection) {\n        super();\n        this._super(native_handle);\n        this.cork();\n    }\n\n    /**\n     * Begin sending the request.\n     *\n     * The stream does nothing until this is called. Call activate() when you\n     * are ready for its callbacks and events to fire.\n     */\n    activate() {\n        crt_native.http_stream_activate(this.native_handle());\n    }\n\n    /**\n     * Closes and ends all communication on this stream. Called automatically after the 'end'\n     * event is delivered. Calling this manually is only necessary if you wish to terminate\n     * communication mid-request/response.\n     */\n    close() {\n        crt_native.http_stream_close(this.native_handle());\n    }\n\n    /** @internal */\n    _on_body(data: ArrayBuffer) {\n        this.emit('data', data);\n    }\n\n    /** @internal */\n    _on_complete(error_code: Number) {\n        if (error_code) {\n            this.emit('error', new CrtError(error_code));\n            this.close();\n            return;\n        }\n        // schedule death after end is delivered\n        this.on('end', () => {\n            this.close();\n        })\n        this.emit('end');\n    }\n}\n\n/**\n * Listener signature for event emitted from an {@link HttpClientStream} when inline headers are delivered while communicating over H2\n *\n * @param headers the set of headers\n *\n * @category HTTP\n */\nexport type HttpStreamHeaders = (headers: HttpHeaders) => void;\n\n/**\n * Listener signature for event emitted from an {@link HttpClientStream} when the http response headers have arrived.\n *\n * @param status_code http response status code\n * @param headers the response's set of headers\n *\n * @category HTTP\n */\nexport type HttpStreamResponse = (status_code: number, headers: HttpHeaders) => void;\n\n/**\n * Stream that sends a request and receives a response.\n *\n * Create an HttpClientStream with {@link HttpClientConnection.request}.\n *\n * NOTE: The stream sends no data until {@link HttpStream.activate} is called.\n * Call {@link HttpStream.activate} when you're ready for callbacks and events to fire.\n *\n * @category HTTP\n */\nexport class HttpClientStream extends HttpStream {\n    private response_status_code?: Number;\n    constructor(\n        native_handle: any,\n        connection: HttpClientConnection,\n        readonly request: HttpRequest) {\n        super(native_handle, connection);\n    }\n\n    /**\n     * HTTP status code returned from the server.\n     * @return Either the status code, or undefined if the server response has not arrived yet.\n     */\n    status_code() {\n        return this.response_status_code;\n    }\n\n    /**\n     * Emitted when the http response headers have arrived.\n     *\n     * @event\n     */\n    static RESPONSE = 'response';\n\n    /**\n     * Emitted when http response data is available.\n     *\n     * @event\n     */\n    static DATA = 'data';\n\n    /**\n     * Emitted when an error occurs in stream processing\n     *\n     * @event\n     */\n    static ERROR = 'error';\n\n    /**\n     * Emitted when the stream has completed\n     *\n     * @event\n     */\n    static END = 'end';\n\n    /**\n     * Emitted when inline headers are delivered while communicating over H2\n     *\n     * @event\n     */\n    static HEADERS = 'headers';\n\n    on(event: 'response', listener: HttpStreamResponse): this;\n\n    on(event: 'data', listener: HttpStreamData): this;\n\n    on(event: 'error', listener: HttpStreamError): this;\n\n    on(event: 'end', listener: HttpStreamComplete): this;\n\n    on(event: 'headers', listener: HttpStreamHeaders): this;\n\n    // Overridden to allow uncorking on ready and response\n    on(event: string | symbol, listener: (...args: any[]) => void): this {\n        super.on(event, listener);\n        if (event == 'response') {\n            process.nextTick(() => {\n                this.uncork();\n            })\n        }\n        return this;\n    }\n\n    /** @internal */\n    _on_response(status_code: Number, header_array: [string, string][]) {\n        this.response_status_code = status_code;\n        let headers = new HttpHeaders(header_array);\n        this.emit('response', status_code, headers);\n    }\n}\n\n/**\n * Creates, manages, and vends connections to a given host/port endpoint\n *\n * @category HTTP\n */\nexport class HttpClientConnectionManager extends NativeResource {\n    private connections = new Map<any, HttpClientConnection>();\n\n    /**\n     * @param bootstrap Client bootstrap to use when initiating socket connections.  Leave undefined to use the\n     *          default system-wide bootstrap (recommended).\n     * @param host Host to connect to\n     * @param port Port to connect to on host\n     * @param max_connections Maximum number of connections to pool\n     * @param initial_window_size Optional initial window size\n     * @param socket_options Socket options to use when initiating socket connections\n     * @param tls_opts Optional TLS connection options\n     * @param proxy_options Optional proxy options\n     */\n    constructor(\n        readonly bootstrap: ClientBootstrap | undefined,\n        readonly host: string,\n        readonly port: number,\n        readonly max_connections: number,\n        readonly initial_window_size: number,\n        readonly socket_options: SocketOptions,\n        readonly tls_opts?: TlsConnectionOptions,\n        readonly proxy_options?: HttpProxyOptions,\n    ) {\n\n        if (socket_options == null || socket_options == undefined) {\n            throw new CrtError(\"HttpClientConnectionManager constructor: socket_options not defined\");\n        }\n\n        super(crt_native.http_connection_manager_new(\n            bootstrap != null ? bootstrap.native_handle() : null,\n            host,\n            port,\n            max_connections,\n            initial_window_size,\n            socket_options.native_handle(),\n            tls_opts ? tls_opts.native_handle() : undefined,\n            proxy_options ? proxy_options.create_native_handle() : undefined,\n            undefined /* on_shutdown */\n        ));\n    }\n\n    /**\n    * Vends a connection from the pool\n    * @returns A promise that results in an HttpClientConnection. When done with the connection, return\n    *          it via {@link release}\n    */\n    acquire(): Promise<HttpClientConnection> {\n        return new Promise((resolve, reject) => {\n            // Only create 1 connection in JS/TS from each native connection\n            const on_acquired = (handle: any, error_code: number) => {\n                if (error_code) {\n                    reject(new CrtError(error_code));\n                    return;\n                }\n                let connection = this.connections.get(handle);\n                if (!connection) {\n                    connection = new HttpClientConnection(\n                        this.bootstrap,\n                        this.host,\n                        this.port,\n                        this.socket_options,\n                        this.tls_opts,\n                        this.proxy_options,\n                        handle\n                    );\n                    this.connections.set(handle, connection as HttpClientConnection);\n                    connection.on('close', () => {\n                        this.connections.delete(handle);\n                    })\n                }\n                resolve(connection);\n            };\n            crt_native.http_connection_manager_acquire(this.native_handle(), on_acquired);\n        });\n    }\n\n    /**\n     * Returns an unused connection to the pool\n     * @param connection - The connection to return\n    */\n    release(connection: HttpClientConnection) {\n        if (connection == null || connection == undefined) {\n            throw new CrtError(\"HttpClientConnectionManager release: connection not defined\");\n        }\n        crt_native.http_connection_manager_release(this.native_handle(), connection.native_handle());\n    }\n\n    /** Closes all connections and rejects all pending requests */\n    close() {\n        crt_native.http_connection_manager_close(this.native_handle());\n    }\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing support for mqtt connection establishment and operations.\n *\n * @packageDocumentation\n * @module mqtt\n */\n\n/**\n * Quality of service control for mqtt publish operations\n *\n * @category MQTT\n */\nexport enum QoS {\n    /**\n     * QoS 0 - At most once delivery\n     * The message is delivered according to the capabilities of the underlying network.\n     * No response is sent by the receiver and no retry is performed by the sender.\n     * The message arrives at the receiver either once or not at all.\n     */\n    AtMostOnce = 0,\n\n    /**\n     * QoS 1 - At least once delivery\n     * This quality of service ensures that the message arrives at the receiver at least once.\n     */\n    AtLeastOnce = 1,\n\n    /**\n     * QoS 2 - Exactly once delivery\n\n     * This is the highest quality of service, for use when neither loss nor\n     * duplication of messages are acceptable. There is an increased overhead\n     * associated with this quality of service.\n\n     * Note that, while this client supports QoS 2, the AWS IoT Core service\n     * does not support QoS 2 at time of writing (May 2020).\n     */\n    ExactlyOnce = 2,\n}\n\n/**\n * Possible types of data to send via publish.\n *\n * An ArrayBuffer will send its bytes without transformation.\n * An ArrayBufferView (DataView, Uint8Array, etc) will send its bytes without transformation.\n * A String will be sent with utf-8 encoding.\n * An Object will be sent as a JSON string with utf-8 encoding.\n *\n * @category MQTT\n */\nexport type Payload = string | Record<string, unknown> | ArrayBuffer | ArrayBufferView;\n\n/**\n * Function called upon receipt of a Publish message on a subscribed topic.\n *\n * @param topic The topic to which the message was published.\n * @param payload The payload data.\n * @param dup DUP flag. If true, this might be re-delivery of an earlier\n *            attempt to send the message.\n * @param qos Quality of Service used to deliver the message.\n * @param retain Retain flag. If true, the message was sent as a result of\n *               a new subscription being made by the client. *\n *\n * @category MQTT\n */\nexport type OnMessageCallback = (topic: string, payload: ArrayBuffer, dup: boolean, qos: QoS, retain: boolean) => void;\n\n/**\n * Every request sent returns an MqttRequest\n *\n * @category MQTT\n */\nexport interface MqttRequest {\n    /** Packet ID being acknowledged when the request completes */\n    packet_id?: number;\n}\n\n/**\n * Subscription SUBACK result\n *\n * @category MQTT\n */\nexport interface MqttSubscribeRequest extends MqttRequest {\n    /** Topic filter of the SUBSCRIBE packet being acknowledged */\n    topic: string;\n    /** Maximum QoS granted by the server. This may be lower than the requested QoS. */\n    qos: QoS;\n    /** If an error occurred, the error code */\n    error_code?: number;\n}\n\n/**\n * A Will message is published by the server if a client is lost unexpectedly.\n *\n * The Will message is stored on the server when a client connects.\n * It is published if the client connection is lost without the server\n * receiving a DISCONNECT packet.\n *\n * [MQTT - 3.1.2 - 8]\n *\n * @category MQTT\n */\nexport class MqttWill {\n    constructor(\n        /** Topic to publish Will message on. */\n        readonly topic: string,\n        /** QoS used when publishing the Will message. */\n        readonly qos: QoS,\n        /** Content of Will message. */\n        readonly payload: Payload,\n        /** Whether the Will message is to be retained when it is published. */\n        readonly retain = false) {\n    }\n}\n\n/**\n * Listener signature for event emitted from an {@link MqttClientConnection} when the connection reaches an initial\n * connected state\n *\n * @param session_present true if the reconnection went to an existing session, false if this is a clean session\n *\n * @category MQTT\n */\nexport type MqttConnectionConnected = (session_present: boolean) => void;\n\n/**\n * Listener signature for event emitted from an {@link MqttClientConnection} when the connection has fully disconnected\n * by user request\n *\n * @category MQTT\n */\nexport type MqttConnectionDisconnected = () => void;\n\n/**\n * Listener signature for event emitted from an {@link MqttClientConnection} when the connection successfully\n * reestablishes itself after an interruption\n *\n * @param return_code MQTT connect return code (should be 0 for a successful reconnection)\n * @param session_present true if the reconnection went to an existing session, false if this is a clean session\n *\n * @category MQTT\n */\nexport type MqttConnectionResumed = (return_code: number, session_present: boolean) => void;\n\n/**\n * Const value for max reconnection back off time\n * \n * @category MQTT\n */\nexport const DEFAULT_RECONNECT_MAX_SEC = 128;\n\n/**\n * Const value for min reconnection back off time\n * \n * @category MQTT\n */\n export const DEFAULT_RECONNECT_MIN_SEC = 1;\n ", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing miscellaneous functionality that is shared across both native and browser for aws_iot\n *\n * @packageDocumentation\n * @module aws_iot\n */\n\n\nimport * as platform from \"./platform\";\nimport * as mqtt5_packet from \"./mqtt5_packet\";\n\n/**\n * A helper function to add parameters to the username in with_custom_authorizer function\n *\n * @internal\n */\n export function add_to_username_parameter(current_username : string, parameter_value : string, parameter_pre_text : string) {\n    let return_string = current_username;\n\n    if (return_string.indexOf(\"?\") != -1) {\n        return_string += \"&\"\n    } else {\n        return_string += \"?\"\n    }\n\n    if (parameter_value.indexOf(parameter_pre_text) != -1) {\n        return return_string + parameter_value;\n    } else {\n        return return_string + parameter_pre_text + parameter_value;\n    }\n}\n\n/**\n * A helper function to see if a string is not null, is defined, and is not an empty string\n *\n * @internal\n */\n export function is_string_and_not_empty(item : any) {\n    return item != undefined && typeof(item) == 'string' && item != \"\";\n}\n\n/**\n * A helper function to populate the username with the Custom Authorizer fields\n * @param current_username the current username\n * @param input_username the username to add - can be an empty string to skip\n * @param input_authorizer the name of the authorizer to add - can be an empty string to skip\n * @param input_signature the name of the signature to add - can be an empty string to skip\n * @param input_builder_username the username from the MQTT builder\n * @param input_token_key_name the token key name\n * @param input_token_value the token key value\n * @returns The finished username with the additions added to it\n *\n * @internal\n */\nexport function populate_username_string_with_custom_authorizer(\n    current_username? : string, input_username? : string, input_authorizer? : string,\n    input_signature? : string, input_builder_username? : string,\n    input_token_key_name? : string, input_token_value? : string) {\n\n    let username_string = \"\";\n\n    if (current_username) {\n        username_string += current_username;\n    }\n    if (is_string_and_not_empty(input_username) == false) {\n        if (is_string_and_not_empty(input_builder_username) && input_builder_username) {\n            username_string += input_builder_username;\n        }\n    }\n    else {\n        username_string += input_username;\n    }\n\n    if (is_string_and_not_empty(input_authorizer) && input_authorizer) {\n        username_string = add_to_username_parameter(username_string, input_authorizer, \"x-amz-customauthorizer-name=\");\n    }\n    if (is_string_and_not_empty(input_signature) && input_signature) {\n        username_string = add_to_username_parameter(username_string, input_signature, \"x-amz-customauthorizer-signature=\");\n        if ((is_string_and_not_empty(input_token_key_name) && input_token_key_name) || (is_string_and_not_empty(input_token_value) && input_token_value))\n        {\n            console.log(\"Warning: Signed custom authorizers with signature will not work without a token key name and \" +\n                        \"token value. Your connection may be rejected/stalled on the IoT Core side due to this. Please \" +\n                        \"set the token key name and token value to connect to a signed custom authorizer.\");\n        }\n    }\n\n    if (is_string_and_not_empty(input_signature) || is_string_and_not_empty(input_token_value) || is_string_and_not_empty(input_token_key_name)) {\n        if (!input_token_value || !input_token_key_name) {\n            throw new Error(\"Token-based custom authentication requires all token-related properties to be set\");\n        }\n        username_string = add_to_username_parameter(username_string, input_token_value, input_token_key_name + \"=\");\n    }\n\n    return username_string;\n}\n\n/**\n * Configuration options specific to\n * [AWS IoT Core custom authentication](https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html)\n * features.  For clients constructed by an {@link AwsIotMqtt5ClientConfigBuilder}, all parameters associated\n * with AWS IoT custom authentication are passed via the username and password properties in the CONNECT packet.\n */\nexport interface MqttConnectCustomAuthConfig {\n\n    /**\n     * Name of the custom authorizer to use.\n     *\n     * Required if the endpoint does not have a default custom authorizer associated with it.  It is strongly suggested\n     * to URL-encode this value; the SDK will not do so for you.\n     */\n    authorizerName?: string;\n\n    /**\n     * The username to use with the custom authorizer.  Query-string elements of this property value will be unioned\n     * with the query-string elements implied by other properties in this object.\n     *\n     * For example, if you set this to:\n     *\n     * 'MyUsername?someKey=someValue'\n     *\n     * and use {@link authorizerName} to specify the authorizer, the final username would look like:\n     *\n     * `MyUsername?someKey=someValue&x-amz-customauthorizer-name=<your authorizer's name>&...`\n     */\n    username?: string;\n\n    /**\n     * The password to use with the custom authorizer.  Becomes the MQTT5 CONNECT packet's password property.\n     * AWS IoT Core will base64 encode this binary data before passing it to the authorizer's lambda function.\n     */\n    password?: mqtt5_packet.BinaryData;\n\n    /**\n     * Key used to extract the custom authorizer token from MQTT username query-string properties.\n     *\n     * Required if the custom authorizer has signing enabled.  It is strongly suggested to URL-encode this value; the\n     * SDK will not do so for you.\n     */\n    tokenKeyName?: string;\n\n    /**\n     * An opaque token value. This value must be signed by the private key associated with the custom authorizer and\n     * the result placed in the {@link tokenSignature} property.\n     *\n     * Required if the custom authorizer has signing enabled.\n     */\n    tokenValue?: string;\n\n    /**\n     * The digital signature of the token value in the {@link tokenValue} property.  The signature must be based on\n     * the private key associated with the custom authorizer.  The signature must be base64 encoded.\n     *\n     * Required if the custom authorizer has signing enabled.  It is strongly suggested to URL-encode this value; the\n     * SDK will not do so for you.\n     */\n    tokenSignature?: string;\n};\n\n/** @internal */\nfunction addParam(paramName: string, paramValue: string | undefined, paramSet: [string, string][]) : void {\n    if (paramValue) {\n        paramSet.push([paramName, paramValue]);\n    }\n}\n\n/**\n * Builds the final value for the CONNECT packet's username property based on AWS IoT custom auth configuration\n * and SDK metrics properties.\n *\n * @param customAuthConfig intended AWS IoT custom auth client configuration\n *\n * @internal\n */\nexport function buildMqtt5FinalUsername(customAuthConfig?: MqttConnectCustomAuthConfig) : string {\n\n    let path : string = \"\";\n    let paramList : [string, string][] = [];\n\n    if (customAuthConfig) {\n        /* If we're using token-signing authentication, then all token properties must be set */\n        let usingSigning : boolean = false;\n        if (customAuthConfig.tokenValue || customAuthConfig.tokenKeyName || customAuthConfig.tokenSignature) {\n            usingSigning = true;\n            if (!customAuthConfig.tokenValue || !customAuthConfig.tokenKeyName || !customAuthConfig.tokenSignature) {\n                throw new Error(\"Token-based custom authentication requires all token-related properties to be set\");\n            }\n        }\n\n        let username : string | undefined = customAuthConfig.username;\n        let pathSplit : string[] = (username ?? \"\").split(\"?\");\n        let params : string[] = pathSplit.slice(1);\n        path = pathSplit[0];\n\n        if (params.length > 1) {\n            throw new Error(\"Custom auth username property value is invalid\");\n        } else if (params.length == 1) {\n            params[0].split(\"&\").forEach((keyValue, index, array) => {\n                let kvPair = keyValue.split(\"=\");\n                paramList.push([kvPair[0], kvPair[1] ?? \"\"]);\n            });\n        }\n\n        addParam(\"x-amz-customauthorizer-name\", customAuthConfig.authorizerName, paramList);\n        if (usingSigning) {\n            // @ts-ignore verified earlier\n            addParam(customAuthConfig.tokenKeyName, customAuthConfig.tokenValue, paramList);\n            addParam(\"x-amz-customauthorizer-signature\", customAuthConfig.tokenSignature, paramList);\n        }\n    }\n\n    paramList.push([\"SDK\", \"NodeJSv2\"]);\n    paramList.push([\"Version\", platform.crt_version()]);\n\n    return (path ?? \"\") + \"?\" + paramList.map((value : [string, string]) => `${value[0]}=${value[1]}`).join(\"&\");\n}\n\n/**\n * Attempts to determine the AWS region associated with an endpoint.\n *\n * @param endpoint endpoint to compute the region for\n *\n * @internal\n */\nexport function extractRegionFromEndpoint(endpoint: string) : string {\n    const regexpRegion = /^[\\w\\-]+\\.[\\w\\-]+\\.([\\w+\\-]+)\\./;\n    const match = endpoint.match(regexpRegion);\n    if (match) {\n        return match[1];\n    }\n\n    throw new Error(\"AWS region could not be extracted from endpoint.  Use 'region' property on WebsocketConfig to set manually.\");\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * Module for AWS IoT configuration and connection establishment\n *\n * @packageDocumentation\n */\n\nimport { MqttConnectionConfig, MqttWill} from \"./mqtt\";\nimport { DEFAULT_RECONNECT_MIN_SEC, DEFAULT_RECONNECT_MAX_SEC} from \"../common/mqtt\"\nimport * as io from \"./io\";\nimport { TlsContextOptions } from \"./io\";\nimport * as platform from '../common/platform';\nimport { HttpProxyOptions } from \"./http\";\nimport { WebsocketOptionsBase } from \"../common/auth\";\nimport { CrtError } from \"./error\";\n\nimport {\n    aws_sign_request,\n    AwsCredentialsProvider,\n    AwsSignatureType,\n    AwsSignedBodyValue,\n    AwsSigningAlgorithm,\n    AwsSigningConfig\n} from \"./auth\";\nimport * as iot_shared from \"../common/aws_iot_shared\"\n\n/**\n * Websocket-specific mqtt connection configuration options\n *\n * @category IoT\n */\nexport interface WebsocketConfig extends WebsocketOptionsBase{\n    /** Sources the AWS Credentials used to sign the websocket connection handshake */\n    credentials_provider: AwsCredentialsProvider;\n\n    /** (Optional) http proxy configuration */\n    proxy_options?: HttpProxyOptions;\n\n    /** AWS region the websocket connection is being established in.  Must match the region embedded in the\n     * endpoint.\n     */\n    region: string;\n\n    /** (Optional)  TLS configuration to use when establishing the connection */\n    tls_ctx_options?: TlsContextOptions;\n}\n\n/**\n * Builder functions to create a {@link MqttConnectionConfig} which can then be used to create\n * a {@link MqttClientConnection}, configured for use with AWS IoT.\n *\n * @category IoT\n */\nexport class AwsIotMqttConnectionConfigBuilder {\n    private params: MqttConnectionConfig\n    private is_using_custom_authorizer: boolean\n\n    private constructor(private tls_ctx_options: TlsContextOptions) {\n        this.params = {\n            client_id: '',\n            host_name: '',\n            socket_options: new io.SocketOptions(),\n            port: 8883,\n            use_websocket: false,\n            clean_session: false,\n            keep_alive: undefined,\n            will: undefined,\n            username: \"\",\n            password: undefined,\n            tls_ctx: undefined,\n            reconnect_min_sec: DEFAULT_RECONNECT_MIN_SEC,\n            reconnect_max_sec: DEFAULT_RECONNECT_MAX_SEC\n        };\n        this.is_using_custom_authorizer = false\n    }\n\n    /**\n     * Create a new builder with mTLS file paths\n     * @param cert_path - Path to certificate, in PEM format\n     * @param key_path - Path to private key, in PEM format\n     */\n    static new_mtls_builder_from_path(cert_path: string, key_path: string) {\n        let builder = new AwsIotMqttConnectionConfigBuilder(TlsContextOptions.create_client_with_mtls_from_path(cert_path, key_path));\n        builder.params.port = 8883;\n\n        if (io.is_alpn_available()) {\n            builder.tls_ctx_options.alpn_list.unshift('x-amzn-mqtt-ca');\n        }\n\n        return builder;\n    }\n\n    /**\n     * Create a new builder with mTLS cert pair in memory\n     * @param cert - Certificate, in PEM format\n     * @param private_key - Private key, in PEM format\n     */\n    static new_mtls_builder(cert: string, private_key: string) {\n        let builder = new AwsIotMqttConnectionConfigBuilder(TlsContextOptions.create_client_with_mtls(cert, private_key));\n        builder.params.port = 8883;\n\n        if (io.is_alpn_available()) {\n            builder.tls_ctx_options.alpn_list.unshift('x-amzn-mqtt-ca');\n        }\n\n        return builder;\n    }\n\n    /**\n     * Create a new builder with mTLS using a PKCS#11 library for private key operations.\n     *\n     * NOTE: This configuration only works on Unix devices.\n     * @param pkcs11_options - PKCS#11 options.\n     */\n    static new_mtls_pkcs11_builder(pkcs11_options: TlsContextOptions.Pkcs11Options) {\n        let builder = new AwsIotMqttConnectionConfigBuilder(TlsContextOptions.create_client_with_mtls_pkcs11(pkcs11_options));\n        builder.params.port = 8883;\n\n        if (io.is_alpn_available()) {\n            builder.tls_ctx_options.alpn_list.unshift('x-amzn-mqtt-ca');\n        }\n\n        return builder;\n    }\n\n    /**\n     * Create a new builder with mTLS using a PKCS#12 file for private key operations.\n     *\n     * Note: This configuration only works on MacOS devices.\n     *\n     * @param pkcs12_options - The PKCS#12 options to use in the builder.\n     */\n    static new_mtls_pkcs12_builder(pkcs12_options: io.Pkcs12Options) {\n        let builder = new AwsIotMqttConnectionConfigBuilder(TlsContextOptions.create_client_with_mtls_pkcs12_from_path(\n            pkcs12_options.pkcs12_file, pkcs12_options.pkcs12_password));\n        builder.params.port = 8883;\n\n        if (io.is_alpn_available()) {\n            builder.tls_ctx_options.alpn_list.unshift('x-amzn-mqtt-ca');\n        }\n\n        return builder;\n    }\n\n    /**\n     * Create a new builder with mTLS using a certificate in a Windows certificate store.\n     *\n     * NOTE: This configuration only works on Windows devices.\n     * @param certificate_path - Path to certificate in a Windows certificate store.\n     *      The path must use backslashes and end with the certificate's thumbprint.\n     *      Example: `CurrentUser\\MY\\A11F8A9B5DF5B98BA3508FBCA575D09570E0D2C6`\n     */\n     static new_mtls_windows_cert_store_path_builder(certificate_path: string) {\n        let builder = new AwsIotMqttConnectionConfigBuilder(TlsContextOptions.create_client_with_mtls_windows_cert_store_path(certificate_path));\n        builder.params.port = 8883;\n\n        if (io.is_alpn_available()) {\n            builder.tls_ctx_options.alpn_list.unshift('x-amzn-mqtt-ca');\n        }\n\n        return builder;\n    }\n\n    /**\n     * Creates a new builder with default Tls options. This requires setting the connection details manually.\n     */\n    static new_default_builder() {\n        let ctx_options = new io.TlsContextOptions();\n        let builder = new AwsIotMqttConnectionConfigBuilder(ctx_options);\n        return builder;\n    }\n\n    static new_websocket_builder(...args: any[]) {\n        return this.new_with_websockets(...args);\n    }\n\n    private static configure_websocket_handshake(builder: AwsIotMqttConnectionConfigBuilder, options?: WebsocketConfig) {\n        if (options) {\n            if (builder == null || builder == undefined) {\n                throw new CrtError(\"AwsIotMqttConnectionConfigBuilder configure_websocket_handshake: builder not defined\");\n            }\n\n            builder.params.websocket_handshake_transform = async (request, done) => {\n                const signing_config = options.create_signing_config?.()\n                    ?? {\n                    algorithm: AwsSigningAlgorithm.SigV4,\n                    signature_type: AwsSignatureType.HttpRequestViaQueryParams,\n                    provider: options.credentials_provider,\n                    region: options.region,\n                    service: options.service ?? \"iotdevicegateway\",\n                    signed_body_value: AwsSignedBodyValue.EmptySha256,\n                    omit_session_token: true,\n                };\n\n                try {\n                    await aws_sign_request(request, signing_config as AwsSigningConfig);\n                    done();\n                } catch (error) {\n                    if (error instanceof CrtError) {\n                        done(error.error_code);\n                    } else {\n                        done(3); /* TODO: AWS_ERROR_UNKNOWN */\n                    }\n                }\n            };\n        }\n\n        return builder;\n    }\n\n    /**\n     * Configures the connection to use MQTT over websockets. Forces the port to 443.\n     */\n    static new_with_websockets(options?: WebsocketConfig) {\n        let tls_ctx_options = options?.tls_ctx_options;\n\n        if (!tls_ctx_options) {\n            tls_ctx_options = new TlsContextOptions();\n            tls_ctx_options.alpn_list = [];\n        }\n\n        let builder = new AwsIotMqttConnectionConfigBuilder(tls_ctx_options);\n\n        builder.params.use_websocket = true;\n        builder.params.proxy_options = options?.proxy_options;\n\n        if (builder.tls_ctx_options) {\n            builder.params.port = 443;\n        }\n\n        this.configure_websocket_handshake(builder, options);\n\n        return builder;\n    }\n\n    /**\n     * For API compatibility with the browser version. Alias for {@link new_with_websockets}.\n     *\n     * @returns a new websocket connection builder object with default TLS configuration\n     */\n    static new_builder_for_websocket() {\n        return this.new_with_websockets();\n    }\n\n    /**\n     * Overrides the default system trust store.\n     * @param ca_dirpath - Only used on Unix-style systems where all trust anchors are\n     * stored in a directory (e.g. /etc/ssl/certs).\n     * @param ca_filepath - Single file containing all trust CAs, in PEM format\n     */\n    with_certificate_authority_from_path(ca_dirpath?: string, ca_filepath?: string) {\n        this.tls_ctx_options.override_default_trust_store_from_path(ca_dirpath, ca_filepath);\n        return this;\n    }\n\n    /**\n     * Overrides the default system trust store.\n     * @param ca - Buffer containing all trust CAs, in PEM format\n     */\n    with_certificate_authority(ca: string) {\n        this.tls_ctx_options.override_default_trust_store(ca);\n        return this;\n    }\n\n    /**\n     * Configures the IoT endpoint for this connection\n     * @param endpoint The IoT endpoint to connect to\n     */\n    with_endpoint(endpoint: string) {\n        this.params.host_name = endpoint;\n        return this;\n    }\n\n    /**\n     * The port to connect to on the IoT endpoint\n     * @param port The port to connect to on the IoT endpoint. Usually 8883 for MQTT, or 443 for websockets\n     */\n    with_port(port: number) {\n        this.params.port = port;\n        return this;\n    }\n\n    /**\n     * Configures the client_id to use to connect to the IoT Core service\n     * @param client_id The client id for this connection. Needs to be unique across all devices/clients.\n     */\n    with_client_id(client_id: string) {\n        this.params.client_id = client_id;\n        return this;\n    }\n\n    /**\n     * Determines whether or not the service should try to resume prior subscriptions, if it has any\n     * @param clean_session true if the session should drop prior subscriptions when this client connects, false to resume the session\n     */\n    with_clean_session(clean_session: boolean) {\n        this.params.clean_session = clean_session;\n        return this;\n    }\n\n    /**\n     * Configures MQTT keep-alive via PING messages. Note that this is not TCP keepalive.\n     * @param keep_alive How often in seconds to send an MQTT PING message to the service to keep the connection alive\n     */\n    with_keep_alive_seconds(keep_alive: number) {\n        this.params.keep_alive = keep_alive;\n        return this;\n    }\n\n    /**\n     * Configures the TCP socket timeout (in milliseconds)\n     * @param timeout_ms TCP socket timeout\n     * @deprecated\n     */\n    with_timeout_ms(timeout_ms: number) {\n        this.with_ping_timeout_ms(timeout_ms);\n        return this;\n    }\n\n    /**\n     * Configures the PINGREQ response timeout (in milliseconds)\n     * @param ping_timeout PINGREQ response timeout\n     */\n    with_ping_timeout_ms(ping_timeout: number) {\n        this.params.ping_timeout = ping_timeout;\n        return this;\n    }\n\n    /**\n     * Configures the protocol operation timeout (in milliseconds)\n     * @param protocol_operation_timeout protocol operation timeout\n     */\n    with_protocol_operation_timeout_ms(protocol_operation_timeout: number) {\n        this.params.protocol_operation_timeout = protocol_operation_timeout;\n        return this;\n    }\n\n    /**\n     * Configures the will message to be sent when this client disconnects\n     * @param will The will topic, qos, and message\n     */\n    with_will(will: MqttWill) {\n        this.params.will = will;\n        return this;\n    }\n\n    /**\n     * Configures the common settings for the socket to use when opening a connection to the server\n     * @param socket_options The socket settings\n     */\n    with_socket_options(socket_options: io.SocketOptions) {\n        this.params.socket_options = socket_options;\n        return this;\n    }\n\n    /**\n     * Configures AWS credentials (usually from Cognito) for this connection\n     * @param aws_region The service region to connect to\n     * @param aws_access_id IAM Access ID\n     * @param aws_secret_key IAM Secret Key\n     * @param aws_sts_token STS token from Cognito (optional)\n     */\n    with_credentials(aws_region: string, aws_access_id: string, aws_secret_key: string, aws_sts_token?: string) {\n        return AwsIotMqttConnectionConfigBuilder.configure_websocket_handshake(this, {\n            credentials_provider: AwsCredentialsProvider.newStatic(aws_access_id, aws_secret_key, aws_sts_token),\n            region: aws_region,\n            service: \"iotdevicegateway\",\n        });\n    }\n\n    /**\n     * Configure the http proxy options to use to establish the connection\n     * @param proxy_options proxy options to use to establish the mqtt connection\n     */\n    with_http_proxy_options(proxy_options: HttpProxyOptions) {\n        this.params.proxy_options = proxy_options;\n        return this;\n    }\n\n    /**\n     * Sets the custom authorizer settings. This function will modify the username, port, and TLS options.\n     *\n     * @param username The username to use with the custom authorizer. If an empty string is passed, it will\n     *                 check to see if a username has already been set (via WithUsername function). If no\n     *                 username is set then no username will be passed with the MQTT connection.\n     * @param authorizer_name The name of the custom authorizer. If an empty string is passed, then\n     *                       'x-amz-customauthorizer-name' will not be added with the MQTT connection.\n     * @param authorizer_signature The signature of the custom authorizer. If an empty string is passed, then\n     *                            'x-amz-customauthorizer-signature' will not be added with the MQTT connection.\n     *                            The signature must be based on the private key associated with the custom authorizer.\n     *                            The signature must be base64 encoded.\n     *                            Required if the custom authorizer has signing enabled.  It is strongly suggested to URL-encode\n     *                            this value; the SDK will not do so for you.\n     * @param password The password to use with the custom authorizer. If null is passed, then no password will\n     *                 be set.\n     * @param token_key_name Key used to extract the custom authorizer token from MQTT username query-string properties.\n     *                       Required if the custom authorizer has signing enabled.  It is strongly suggested to URL-encode\n     *                       this value; the SDK will not do so for you.\n     * @param token_value An opaque token value.\n     *                    Required if the custom authorizer has signing enabled. This value must be signed by the private\n     *                    key associated with the custom authorizer and the result placed in the token_signature argument.\n     */\n    with_custom_authorizer(username : string, authorizer_name : string, authorizer_signature : string, password : string, token_key_name? : string, token_value? : string) {\n        this.is_using_custom_authorizer = true;\n        let username_string = iot_shared.populate_username_string_with_custom_authorizer(\n            \"\", username, authorizer_name, authorizer_signature, this.params.username, token_key_name, token_value);\n        this.params.username = username_string;\n        this.params.password = password;\n        if (!this.params.use_websocket) {\n            this.tls_ctx_options.alpn_list = [\"mqtt\"];\n        }\n        this.params.port = 443;\n        return this;\n    }\n\n    /**\n     * Sets username for the connection\n     *\n     * @param username the username that will be passed with the MQTT connection\n     */\n    with_username(username : string) {\n        this.params.username = username;\n        return this;\n    }\n\n    /**\n     * Sets password for the connection\n     *\n     * @param password the password that will be passed with the MQTT connection\n     */\n    with_password(password : string) {\n        this.params.password = password;\n        return this;\n    }\n\n    /**\n     * Configure the max reconnection period (in second). The reonnection period will\n     * be set in range of [reconnect_min_sec,reconnect_max_sec].\n     * @param reconnect_max_sec max reconnection period\n     */\n    with_reconnect_max_sec(max_sec: number) {\n        this.params.reconnect_max_sec = max_sec;\n        return this;\n    }\n\n    /**\n     * Configure the min reconnection period (in second). The reonnection period will\n     * be set in range of [reconnect_min_sec,reconnect_max_sec].\n     * @param reconnect_min_sec min reconnection period\n     */\n    with_reconnect_min_sec(min_sec: number) {\n        this.params.reconnect_min_sec = min_sec;\n        return this;\n    }\n\n    /**\n     * Returns the configured MqttConnectionConfig.  On the first invocation of this function, the TLS context is cached\n     * and re-used on all subsequent calls to build().\n     * @returns The configured MqttConnectionConfig\n     */\n    build() {\n        if (this.params.client_id === undefined || this.params.host_name === undefined) {\n            throw 'client_id and endpoint are required';\n        }\n\n        // Check to see if a custom authorizer is being used but not through the builder\n        if (this.is_using_custom_authorizer == false) {\n            if (iot_shared.is_string_and_not_empty(this.params.username)) {\n                if (this.params.username?.indexOf(\"x-amz-customauthorizer-name=\") != -1 || this.params.username?.indexOf(\"x-amz-customauthorizer-signature=\") != -1) {\n                    this.is_using_custom_authorizer = true;\n                }\n            }\n        }\n\n        // Is the user trying to connect using a custom authorizer?\n        if (this.is_using_custom_authorizer == true) {\n            if (this.params.port != 443) {\n                console.log(\"Warning: Attempting to connect to authorizer with unsupported port. Port is not 443...\");\n            }\n        }\n\n        /*\n         * By caching and reusing the TLS context we get an enormous memory savings on a per-connection basis.\n         * The tradeoff is that you can't modify TLS options in between calls to build.\n         * Previously we were making a new one with every single connection which had a huge negative impact on large\n         * scale tests.\n         */\n        if (this.params.tls_ctx === undefined) {\n            this.params.tls_ctx = new io.ClientTlsContext(this.tls_ctx_options);\n        }\n\n        // Add the metrics string\n        if (iot_shared.is_string_and_not_empty(this.params.username) == false) {\n            this.params.username = \"?SDK=NodeJSv2&Version=\"\n        } else {\n            if (this.params.username?.indexOf(\"?\") != -1) {\n                this.params.username += \"&SDK=NodeJSv2&Version=\"\n            } else {\n                this.params.username += \"?SDK=NodeJSv2&Version=\"\n            }\n        }\n        this.params.username += platform.crt_version()\n\n        return this.params;\n    }\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * @packageDocumentation\n */\n\n\n/**\n * Converts payload to Buffer or string regardless of the supplied type\n * @param payload The payload to convert\n * @internal\n */\nexport function normalize_payload(payload: any): Buffer | string {\n    if (payload instanceof Buffer) {\n        // pass Buffer through\n        return payload;\n    }\n    if (typeof payload === 'string') {\n        // pass string through\n        return payload;\n    }\n    if (ArrayBuffer.isView(payload)) {\n        // return Buffer with view upon the same bytes (no copy)\n        const view = payload as ArrayBufferView;\n        return Buffer.from(view.buffer, view.byteOffset, view.byteLength);\n    }\n    if (payload instanceof ArrayBuffer) {\n        // return Buffer with view upon the same bytes (no copy)\n        return Buffer.from(payload);\n    }\n    if (typeof payload === 'object') {\n        // Convert Object to JSON string\n        return JSON.stringify(payload);\n    }\n\n    if (!payload) {\n        return \"\";\n    }\n\n    throw new TypeError(\"payload parameter must be a string, object, or DataView.\");\n}\n\n/** @internal */\nexport const DEFAULT_KEEP_ALIVE : number = 1200;\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * @packageDocumentation\n * @module mqtt5\n */\n\nimport * as mqtt5_packet from \"./mqtt5_packet\";\nimport { ICrtError } from \"./error\";\n\n/**\n * Mqtt behavior settings that are dynamically negotiated as part of the CONNECT/CONNACK exchange.\n *\n * While you can infer all of these values from a combination of\n *   1. defaults as specified in the mqtt5 spec\n *   1. your CONNECT settings\n *   1. the CONNACK from the broker\n *\n * the client instead does the combining for you and emits a NegotiatedSettings object with final, authoritative values.\n *\n * Negotiated settings are communicated with every successful connection establishment.\n */\nexport interface NegotiatedSettings {\n\n    /**\n     * The maximum QoS allowed for publishes on this connection instance\n     */\n    maximumQos: mqtt5_packet.QoS;\n\n    /**\n     * The amount of time in seconds the server will retain the MQTT session after a disconnect.\n     */\n    sessionExpiryInterval: number;\n\n    /**\n     * The number of in-flight QoS 1 and QoS2 publications the server is willing to process concurrently.\n     */\n    receiveMaximumFromServer: number;\n\n    /**\n     * The maximum packet size the server is willing to accept.\n     */\n    maximumPacketSizeToServer: number;\n\n    /**\n     * The maximum amount of time in seconds between client packets.  The client should use PINGREQs to ensure this\n     * limit is not breached.  The server will disconnect the client for inactivity if no MQTT packet is received\n     * in a time interval equal to 1.5 x this value.\n     */\n    serverKeepAlive: number;\n\n    /**\n     * Whether the server supports retained messages.\n     */\n    retainAvailable: boolean;\n\n    /**\n     * Whether the server supports wildcard subscriptions.\n     */\n    wildcardSubscriptionsAvailable: boolean;\n\n    /**\n     * Whether the server supports subscription identifiers\n     */\n    subscriptionIdentifiersAvailable: boolean;\n\n    /**\n     * Whether the server supports shared subscriptions\n     */\n    sharedSubscriptionsAvailable: boolean;\n\n    /**\n     * Whether the client has rejoined an existing session.\n     */\n    rejoinedSession: boolean;\n\n    /**\n     * The final client id in use by the newly-established connection.  This will be the configured client id if one\n     * was given in the configuration, otherwise, if no client id was specified, this will be the client id assigned\n     * by the server.  Reconnection attempts will always use the auto-assigned client id, allowing for auto-assigned\n     * session resumption.\n     */\n    clientId: string;\n}\n\n/**\n * Controls how the MQTT5 client should behave with respect to MQTT sessions.\n */\nexport enum ClientSessionBehavior {\n\n    /** Maps to Clean */\n    Default = 0,\n\n    /**\n     * Always ask for a clean session when connecting\n     */\n    Clean = 1,\n\n    /**\n     * Always attempt to rejoin an existing session after an initial connection success.\n     *\n     * Session rejoin requires an appropriate non-zero session expiry interval in the client's CONNECT options.\n     */\n    RejoinPostSuccess = 2,\n\n    /**\n     * Always attempt to rejoin an existing session.  Since the client does not yet support durable session persistence,\n     * this option is not guaranteed to be spec compliant because any unacknowledged qos1 publishes (which are\n     * part of the client session state) will not be present on the initial connection.  Until we support\n     * durable session resumption, this option is technically spec-breaking, but useful.\n     */\n    RejoinAlways = 3,\n}\n\n/**\n * Controls how the reconnect delay is modified in order to smooth out the distribution of reconnection attempt\n * timepoints for a large set of reconnecting clients.\n *\n * See [Exponential Backoff and Jitter](https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/)\n */\nexport enum RetryJitterType {\n\n    /**\n     * Maps to Full\n     */\n    Default = 0,\n\n    /**\n     * Do not perform any randomization on the reconnect delay:\n     * ```NextReconnectDelay = CurrentExponentialBackoffValue```\n     */\n    None = 1,\n\n    /**\n     * Fully random between no delay and the current exponential backoff value.\n     * ```NextReconnectDelay = Random(0, CurrentExponentialBackoffValue)```\n     */\n    Full = 2,\n\n    /**\n     * ```NextReconnectDelay = Min(MaxReconnectDelay, Random(MinReconnectDelay, 3 * CurrentReconnectDelay)```\n     */\n    Decorrelated = 3,\n}\n\n/* MQTT5 Event types */\n\n/**\n * Payload of the Stopped event for the MQTT5 client.\n */\nexport interface StoppedEvent {\n}\n\n/**\n * Payload of the AttemptingConnect event for the MQTT5 client.\n */\nexport interface AttemptingConnectEvent {\n}\n\n/**\n * Payload of the ConnectionSuccess event for the MQTT5 client.\n */\nexport interface ConnectionSuccessEvent {\n\n    /**\n     * CONNACK packet received from the server.\n     */\n    connack: mqtt5_packet.ConnackPacket;\n\n    /**\n     * Final MQTT5 connection settings negotiated with the server.\n     */\n    settings: NegotiatedSettings;\n}\n\n/**\n * Payload of the ConnectionFailure event for the MQTT5 client.\n */\nexport interface ConnectionFailureEvent {\n\n    /**\n     * Description of why the connection attempt failed.\n     */\n    error: ICrtError;\n\n    /**\n     * If the connection failure was indicated by the server's CONNACK response, the CONNACK packet received from\n     * the server.\n     */\n    connack?: mqtt5_packet.ConnackPacket;\n}\n\n/**\n * Payload of the Disconnection event for the MQTT5 client.\n */\nexport interface DisconnectionEvent {\n\n    /**\n     * Best-guess description of why the disconnection occurred.\n     */\n    error: ICrtError;\n\n    /**\n     * If the disconnection event was due to a server-side DISCONNECT packet, the DISCONNECT packet received from\n     * the server.\n     */\n    disconnect?: mqtt5_packet.DisconnectPacket;\n}\n\n/**\n * Payload of the MessageReceived event for the MQTT5 client.\n */\nexport interface MessageReceivedEvent {\n\n    /**\n     * PUBLISH packet received from the server\n     */\n    message: mqtt5_packet.PublishPacket;\n}\n\n/**\n * Client Error event listener signature\n */\nexport type ErrorEventListener = (error: ICrtError) => void;\n\n/**\n * Client Stopped lifecycle event listener signature\n */\nexport type StoppedEventListener = (eventData:StoppedEvent) => void;\n\n/**\n * Client AttemptingConnect lifecycle event listener signature\n */\nexport type AttemptingConnectEventListener = (eventData: AttemptingConnectEvent) => void;\n\n/**\n * Client ConnectionSuccess lifecycle event listener signature\n */\nexport type ConnectionSuccessEventListener = (eventData: ConnectionSuccessEvent) => void;\n\n/**\n * Client ConnectionFailure lifecycle event listener signature\n */\nexport type ConnectionFailureEventListener = (eventData: ConnectionFailureEvent) => void;\n\n/**\n * Client Disconnection lifecycle event listener signature\n */\nexport type DisconnectionEventListener = (eventData: DisconnectionEvent) => void;\n\n/**\n * Message received event listener signature\n */\nexport type MessageReceivedEventListener = (eventData: MessageReceivedEvent) => void;\n\n/**\n * Polymorphic success result for publish actions:\n *\n * * QoS 0 - resolves to undefined\n * * QoS 1 - resolves to a {@link PubackPacket}\n * * QoS 2 - (not yet supported) would resolve to a Pubcomp or a Pubrec\n */\nexport type PublishCompletionResult = mqtt5_packet.PubackPacket | undefined;\n\n/**\n * Shared MQTT5 client interface across browser and node.\n *\n * Common event manipulation patterns have explicit functions separate from the EventListener interface because\n * creating an abstract event listening interface in typescript eludes me.\n */\nexport interface IMqtt5Client {\n\n    /**\n     * Triggers cleanup of native resources associated with the MQTT5 client.  Once this has been invoked, callbacks\n     * and events are not guaranteed to be received.\n     *\n     * On the browser, the implementation is an empty function.\n     *\n     * On Node, this must be called when finished with a client; otherwise, native resources will leak.  It is not safe\n     * to invoke any further operations on the client after close() has been called.\n     *\n     * For a running client, safe and proper shutdown can be accomplished by\n     *\n     * ```ts\n     * const stopped = once(client, \"stopped\");\n     * client.stop();\n     * await stopped;\n     * client.close();\n     * ```\n     *\n     * This is an asynchronous operation.\n     */\n    close() : void;\n\n    /**\n     * Notifies the MQTT5 client that you want it to maintain connectivity to the configured endpoint.\n     * The client will attempt to stay connected using the properties of the reconnect-related parameters\n     * in the mqtt5 client configuration.\n     *\n     * This is an asynchronous operation.\n     */\n    start() : void;\n\n    /**\n     * Notifies the MQTT5 client that you want it to end connectivity to the configured endpoint, disconnecting any\n     * existing connection and halting reconnection attempts.\n     *\n     * This is an asynchronous operation.  Once the process completes, no further events will be emitted until the client\n     * has {@link start} invoked.\n     *\n     * @param disconnectPacket (optional) properties of a DISCONNECT packet to send as part of the shutdown process\n     */\n    stop(packet?: mqtt5_packet.DisconnectPacket) : void;\n\n    /**\n     * Subscribe to one or more topic filters by queuing a SUBSCRIBE packet to be sent to the server.\n     *\n     * @param packet SUBSCRIBE packet to send to the server\n     * @returns a promise that will be rejected with an error or resolved with the SUBACK response\n     */\n    subscribe(packet: mqtt5_packet.SubscribePacket) : Promise<mqtt5_packet.SubackPacket>;\n\n    /**\n     * Unsubscribe from one or more topic filters by queuing an UNSUBSCRIBE packet to be sent to the server.\n     *\n     * @param packet UNSUBSCRIBE packet to send to the server\n     * @returns a promise that will be rejected with an error or resolved with the UNSUBACK response\n     */\n    unsubscribe(packet: mqtt5_packet.UnsubscribePacket) : Promise<mqtt5_packet.UnsubackPacket>;\n\n    /**\n     * Send a message to subscribing clients by queuing a PUBLISH packet to be sent to the server.\n     *\n     * @param packet PUBLISH packet to send to the server\n     * @returns a promise that will be rejected with an error or resolved with the PUBACK response\n     */\n    publish(packet: mqtt5_packet.PublishPacket) : Promise<PublishCompletionResult>;\n\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * @packageDocumentation\n * @module mqtt5\n */\n\n/**\n * Data model for MQTT5 user properties.\n *\n * A user property is a name-value pair of utf-8 strings that can be added to mqtt5 packets.\n */\nexport interface UserProperty {\n    name: string;\n    value: string;\n}\n\n/**\n * Server return code for connect attempts.\n *\n * Enum values match [MQTT5 spec](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901079) encoding values.\n */\nexport enum ConnectReasonCode {\n\n    /**\n     * Returned when the connection is accepted.\n     */\n    Success = 0,\n\n    /**\n     * Returned when the server has a failure but does not want to specify a reason or none\n     * of the other reason codes apply.\n     */\n    UnspecifiedError = 128,\n\n    /**\n     * Returned when data in the CONNECT packet could not be correctly parsed by the server.\n     */\n    MalformedPacket = 129,\n\n    /**\n     * Returned when data in the CONNECT packet does not conform to the MQTT5 specification requirements.\n     */\n    ProtocolError = 130,\n\n    /**\n     * Returned when the CONNECT packet is valid but was not accepted by the server.\n     */\n    ImplementationSpecificError = 131,\n\n    /**\n     * Returned when the server does not support MQTT5 protocol version specified in the connection.\n     */\n    UnsupportedProtocolVersion = 132,\n\n    /**\n     * Returned when the client identifier in the CONNECT packet is a valid string but not one that\n     * is allowed on the server.\n     */\n    ClientIdentifierNotValid = 133,\n\n    /**\n     * Returned when the server does not accept the username and/or password specified by the client\n     * in the connection packet.\n     */\n    BadUsernameOrPassword = 134,\n\n    /**\n     * Returned when the client is not authorized to connect to the server.\n     */\n    NotAuthorized = 135,\n\n    /**\n     * Returned when the MQTT5 server is not available.\n     */\n    ServerUnavailable = 136,\n\n    /**\n     * Returned when the server is too busy to make a connection. It is recommended that the client try again later.\n     */\n    ServerBusy = 137,\n\n    /**\n     * Returned when the client has been banned by the server.\n     */\n    Banned = 138,\n\n    /**\n     * Returned when the authentication method used in the connection is either not supported on the server or it does\n     * not match the authentication method currently in use in the CONNECT packet.\n     */\n    BadAuthenticationMethod = 140,\n\n    /**\n     * Returned when the Will topic name sent in the connection packet is correctly formed, but is not accepted by\n     * the server.\n     */\n    TopicNameInvalid = 144,\n\n    /**\n     * Returned when the connection packet exceeded the maximum permissible size on the server.\n     */\n    PacketTooLarge = 149,\n\n    /**\n     * Returned when the quota limits set on the server have been met and/or exceeded.\n     */\n    QuotaExceeded = 151,\n\n    /**\n     * Returned when the Will payload in the CONNECT packet does not match the specified payload format indicator.\n     */\n    PayloadFormatInvalid = 153,\n\n    /**\n     * Returned when the server does not retain messages but the connection packet on the client had Will retain enabled.\n     */\n    RetainNotSupported = 154,\n\n    /**\n     * Returned when the server does not support the QOS setting in the Will QOS in the connection packet.\n     */\n    QosNotSupported = 155,\n\n    /**\n     * Returned when the server is telling the client to temporarily use another server instead of the one they\n     * are trying to connect to.\n     */\n    UseAnotherServer = 156,\n\n    /**\n     * Returned when the server is telling the client to permanently use another server instead of the one they\n     * are trying to connect to.\n     */\n    ServerMoved = 157,\n\n    /**\n     * Returned when the server connection rate limit has been exceeded.\n     */\n    ConnectionRateExceeded = 159,\n}\n\n/**\n * Determines if a reason code represents a successful connect operation\n *\n * @param reasonCode reason code to check success for\n */\nexport function isSuccessfulConnectReasonCode(reasonCode: ConnectReasonCode): boolean {\n    return reasonCode < 128;\n}\n\n/**\n * Reason code inside DISCONNECT packets.  Helps determine why a connection was terminated.\n *\n * Enum values match [MQTT5 spec](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901208) encoding values.\n */\nexport enum DisconnectReasonCode {\n\n    /**\n     * Returned when the remote endpoint wishes to disconnect normally. Will not trigger the publish of a Will message if a\n     * Will message was configured on the connection.\n     *\n     * May be sent by the client or server.\n     */\n    NormalDisconnection = 0,\n\n    /**\n     * Returns that the client wants to disconnect but requires that the server publish the Will message configured\n     * on the connection.\n     *\n     * May only be sent by the client.\n     */\n    DisconnectWithWillMessage = 4,\n\n    /**\n     * Returned when the connection was closed but the sender does not want to specify a reason or none\n     * of the other reason codes apply.\n     *\n     * May be sent by the client or the server.\n     */\n    UnspecifiedError = 128,\n\n    /**\n     * Indicates the remote endpoint received a packet that does not conform to the MQTT specification.\n     *\n     * May be sent by the client or the server.\n     */\n    MalformedPacket = 129,\n\n    /**\n     * Returned when an unexpected or out-of-order packet was received by the remote endpoint.\n     *\n     * May be sent by the client or the server.\n     */\n    ProtocolError = 130,\n\n    /**\n     * Returned when a valid packet was received by the remote endpoint, but could not be processed by the current implementation.\n     *\n     * May be sent by the client or the server.\n     */\n    ImplementationSpecificError = 131,\n\n    /**\n     * Returned when the remote endpoint received a packet that represented an operation that was not authorized within\n     * the current connection.\n     *\n     * May only be sent by the server.\n     */\n    NotAuthorized = 135,\n\n    /**\n     * Returned when the server is busy and cannot continue processing packets from the client.\n     *\n     * May only be sent by the server.\n     */\n    ServerBusy = 137,\n\n    /**\n     * Returned when the server is shutting down.\n     *\n     * May only be sent by the server.\n     */\n    ServerShuttingDown = 139,\n\n    /**\n     * Returned when the server closes the connection because no packet from the client has been received in\n     * 1.5 times the KeepAlive time set when the connection was established.\n     *\n     * May only be sent by the server.\n     */\n    KeepAliveTimeout = 141,\n\n    /**\n     * Returned when the server has established another connection with the same client ID as a client's current\n     * connection, causing the current client to become disconnected.\n     *\n     * May only be sent by the server.\n     */\n    SessionTakenOver = 142,\n\n    /**\n     * Returned when the topic filter name is correctly formed but not accepted by the server.\n     *\n     * May only be sent by the server.\n     */\n    TopicFilterInvalid = 143,\n\n    /**\n     * Returned when topic name is correctly formed, but is not accepted.\n     *\n     * May be sent by the client or the server.\n     */\n    TopicNameInvalid = 144,\n\n    /**\n     * Returned when the remote endpoint reached a state where there were more in-progress QoS1+ publishes then the\n     * limit it established for itself when the connection was opened.\n     *\n     * May be sent by the client or the server.\n     */\n    ReceiveMaximumExceeded = 147,\n\n    /**\n     * Returned when the remote endpoint receives a PUBLISH packet that contained a topic alias greater than the\n     * maximum topic alias limit that it established for itself when the connection was opened.\n     *\n     * May be sent by the client or the server.\n     */\n    TopicAliasInvalid = 148,\n\n    /**\n     * Returned when the remote endpoint received a packet whose size was greater than the maximum packet size limit\n     * it established for itself when the connection was opened.\n     *\n     * May be sent by the client or the server.\n     */\n    PacketTooLarge = 149,\n\n    /**\n     * Returned when the remote endpoint's incoming data rate was too high.\n     *\n     * May be sent by the client or the server.\n     */\n    MessageRateTooHigh = 150,\n\n    /**\n     * Returned when an internal quota of the remote endpoint was exceeded.\n     *\n     * May be sent by the client or the server.\n     */\n    QuotaExceeded = 151,\n\n    /**\n     * Returned when the connection was closed due to an administrative action.\n     *\n     * May be sent by the client or the server.\n     */\n    AdministrativeAction = 152,\n\n    /**\n     * Returned when the remote endpoint received a packet where payload format did not match the format specified\n     * by the payload format indicator.\n     *\n     * May be sent by the client or the server.\n     */\n    PayloadFormatInvalid = 153,\n\n    /**\n     * Returned when the server does not support retained messages.\n     *\n     * May only be sent by the server.\n     */\n    RetainNotSupported = 154,\n\n\n    /**\n     * Returned when the client sends a QOS that is greater than the maximum QOS established when the connection was\n     * opened.\n     *\n     * May only be sent by the server.\n     */\n    QosNotSupported = 155,\n\n    /**\n     * Returned by the server to tell the client to temporarily use a different server.\n     *\n     * May only be sent by the server.\n     */\n    UseAnotherServer = 156,\n\n    /**\n     * Returned by the server to tell the client to permanently use a different server.\n     *\n     * May only be sent by the server.\n     */\n    ServerMoved = 157,\n\n    /**\n     * Returned by the server to tell the client that shared subscriptions are not supported on the server.\n     *\n     * May only be sent by the server.\n     */\n    SharedSubscriptionsNotSupported = 158,\n\n    /**\n     * Returned when the server disconnects the client due to the connection rate being too high.\n     *\n     * May only be sent by the server.\n     */\n    ConnectionRateExceeded = 159,\n\n    /**\n     * Returned by the server when the maximum connection time authorized for the connection was exceeded.\n     *\n     * May only be sent by the server.\n     */\n    MaximumConnectTime = 160,\n\n    /**\n     * Returned by the server when it received a SUBSCRIBE packet with a subscription identifier, but the server does\n     * not support subscription identifiers.\n     *\n     * May only be sent by the server.\n     */\n    SubscriptionIdentifiersNotSupported = 161,\n\n    /**\n     * Returned by the server when it received a SUBSCRIBE packet with a wildcard topic filter, but the server does\n     * not support wildcard topic filters.\n     *\n     * May only be sent by the server.\n     */\n    WildcardSubscriptionsNotSupported = 162,\n}\n\n/**\n * Determines if a reason code represents a successful disconnect operation\n *\n * @param reasonCode reason code to check success for\n */\nexport function isSuccessfulDisconnectReasonCode(reasonCode: DisconnectReasonCode): boolean {\n    return reasonCode < 128;\n}\n\n/**\n * Reason codes inside SUBACK packet payloads that specify the results for each subscription in the associated\n * SUBSCRIBE packet.\n *\n * Enum values match [MQTT5 spec](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901178) encoding values.\n */\nexport enum SubackReasonCode {\n\n    /**\n     * Returned when the subscription was accepted and the maximum QOS sent will be QOS 0.\n     */\n    GrantedQoS0 = 0,\n\n    /**\n     * Returned when the subscription was accepted and the maximum QOS sent will be QOS 1.\n     */\n    GrantedQoS1 = 1,\n\n    /**\n     * Returned when the subscription was accepted and the maximum QOS sent will be QOS 2.\n     */\n    GrantedQoS2 = 2,\n\n\n    /**\n     * Returned when the connection was closed but the sender does not want to specify a reason or none\n     * of the other reason codes apply.\n     */\n    UnspecifiedError = 128,\n\n    /**\n     * Returned when the subscription was valid but the server did not accept it.\n     */\n    ImplementationSpecificError = 131,\n\n    /**\n     * Returned when the client was not authorized to make the subscription on the server.\n     */\n    NotAuthorized = 135,\n\n    /**\n     * Returned when the subscription topic filter was correctly formed but not allowed for the client.\n     */\n    TopicFilterInvalid = 143,\n\n    /**\n     * Returned when the packet identifier was already in use on the server.\n     */\n    PacketIdentifierInUse = 145,\n\n    /**\n     * Returned when a subscribe-related quota set on the server was exceeded.\n     */\n    QuotaExceeded = 151,\n\n    /**\n     * Returned when the subscription's topic filter was a shared subscription and the server does not support\n     * shared subscriptions.\n     */\n    SharedSubscriptionsNotSupported = 158,\n\n    /**\n     * Returned when the SUBSCRIBE packet contained a subscription identifier and the server does not support\n     * subscription identifiers.\n     */\n    SubscriptionIdentifiersNotSupported = 161,\n\n    /**\n     * Returned when the subscription's topic filter contains a wildcard but the server does not support\n     * wildcard subscriptions.\n     */\n    WildcardSubscriptionsNotSupported = 162,\n}\n\n/**\n * Determines if a reason code represents a successful subscribe operation\n *\n * @param reasonCode reason code to check success for\n */\nexport function isSuccessfulSubackReasonCode(reasonCode: SubackReasonCode): boolean {\n    return reasonCode < 128;\n}\n\n/**\n * Reason codes inside UNSUBACK packet payloads that specify the results for each topic filter in the associated\n * UNSUBSCRIBE packet.\n *\n * Enum values match [MQTT5 spec](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901194) encoding values.\n */\nexport enum UnsubackReasonCode {\n\n    /**\n     * Returned when the unsubscribe was successful and the client is no longer subscribed to the topic filter on the server.\n     */\n    Success = 0,\n\n    /**\n     * Returned when the topic filter did not match one of the client's existing subscriptions on the server.\n     */\n    NoSubscriptionExisted = 17,\n\n    /**\n     * Returned when the unsubscribe of the topic filter was not accepted and the server does not want to specify a\n     * reason or none of the other reason codes apply.\n     */\n    UnspecifiedError = 128,\n\n    /**\n     * Returned when the topic filter was valid but the server does not accept an unsubscribe for it.\n     */\n    ImplementationSpecificError = 131,\n\n    /**\n     * Returned when the client was not authorized to unsubscribe from that topic filter on the server.\n     */\n    NotAuthorized = 135,\n\n    /**\n     * Returned when the topic filter was correctly formed but is not allowed for the client on the server.\n     */\n    TopicFilterInvalid = 143,\n\n    /**\n     * Returned when the packet identifier was already in use on the server.\n     */\n    PacketIdentifierInUse = 145,\n}\n\n/**\n * Determines if a reason code represents a successful unsubscribe operation\n *\n * @param reasonCode reason code to check success for\n */\nexport function isSuccessfulUnsubackReasonCode(reasonCode: UnsubackReasonCode): boolean {\n    return reasonCode < 128;\n}\n\n/**\n * Reason code inside PUBACK packets that indicates the result of the associated PUBLISH request.\n *\n * Enum values match [MQTT5 spec](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901124) encoding values.\n */\nexport enum PubackReasonCode {\n\n    /**\n     * Returned when the (QoS 1) publish was accepted by the recipient.\n     *\n     * May be sent by the client or the server.\n     */\n    Success = 0,\n\n    /**\n     * Returned when the (QoS 1) publish was accepted but there were no matching subscribers.\n     *\n     * May only be sent by the server.\n     */\n    NoMatchingSubscribers = 16,\n\n    /**\n     * Returned when the (QoS 1) publish was not accepted and the receiver does not want to specify a reason or none\n     * of the other reason codes apply.\n     *\n     * May be sent by the client or the server.\n     */\n    UnspecifiedError = 128,\n\n    /**\n     * Returned when the (QoS 1) publish was valid but the receiver was not willing to accept it.\n     *\n     * May be sent by the client or the server.\n     */\n    ImplementationSpecificError = 131,\n\n    /**\n     * Returned when the (QoS 1) publish was not authorized by the receiver.\n     *\n     * May be sent by the client or the server.\n     */\n    NotAuthorized = 135,\n\n    /**\n     * Returned when the topic name was valid but the receiver was not willing to accept it.\n     *\n     * May be sent by the client or the server.\n     */\n    TopicNameInvalid = 144,\n\n    /**\n     * Returned when the packet identifier used in the associated PUBLISH was already in use.\n     * This can indicate a mismatch in the session state between client and server.\n     *\n     * May be sent by the client or the server.\n     */\n    PacketIdentifierInUse = 145,\n\n    /**\n     * Returned when the associated PUBLISH failed because an internal quota on the recipient was exceeded.\n     *\n     * May be sent by the client or the server.\n     */\n    QuotaExceeded = 151,\n\n    /**\n     * Returned when the PUBLISH packet's payload format did not match its payload format indicator property.\n     *\n     * May be sent by the client or the server.\n     */\n    PayloadFormatInvalid = 153,\n}\n\n/**\n * Determines if a reason code represents a successful QoS 1 publish operation\n *\n * @param reasonCode reason code to check success for\n */\nexport function isSuccessfulPubackReasonCode(reasonCode: PubackReasonCode): boolean {\n    return reasonCode < 128;\n}\n\n/**\n * Optional property describing a PUBLISH payload's format.\n *\n * Enum values match [MQTT5 spec](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901111) encoding values.\n */\nexport enum PayloadFormatIndicator {\n\n    /**\n     * The payload is arbitrary binary data\n     */\n    Bytes = 0,\n\n    /**\n     * The payload is a well-formed utf-8 string value.\n     */\n    Utf8 = 1,\n}\n\n/**\n * Valid types for a PUBLISH packet's payload\n *\n * While the payload as input can be one of several types, the payload as output (via message receipt)\n * will always be an ArrayBuffer of binary data.\n */\nexport type Payload = string | Record<string, unknown> | ArrayBuffer | ArrayBufferView;\n\n/**\n * Valid types for MQTT5 packet binary data fields (other than PUBLISH payload)\n */\nexport type BinaryData = ArrayBuffer | ArrayBufferView;\n\n/**\n * MQTT message delivery quality of service.\n *\n * Enum values match [MQTT5 spec](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901234) encoding values.\n */\nexport enum QoS {\n\n    /**\n     * The message is delivered according to the capabilities of the underlying network. No response is sent by the\n     * receiver and no retry is performed by the sender. The message arrives at the receiver either once or not at all.\n     */\n    AtMostOnce = 0,\n\n    /**\n     * A level of service that ensures that the message arrives at the receiver at least once.\n     */\n    AtLeastOnce = 1,\n\n    /**\n     * A level of service that ensures that the message arrives at the receiver exactly once.\n     */\n    ExactlyOnce = 2,\n}\n\n/**\n * Configures how retained messages should be handled when subscribing with a topic filter that matches topics with\n * associated retained messages.\n *\n * Enum values match [MQTT5 spec](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901169) encoding values.\n */\nexport enum RetainHandlingType {\n\n    /**\n     * The server should always send all retained messages on topics that match a subscription's filter.\n     */\n    SendOnSubscribe = 0x00,\n\n    /**\n     * The server should send retained messages on topics that match the subscription's filter, but only for the\n     * first matching subscription, per session.\n     */\n    SendOnSubscribeIfNew = 0x01,\n\n    /**\n     * Subscriptions must not trigger any retained message publishes from the server.\n     */\n    DontSend = 0x02,\n}\n\n/**\n * Packet type indicator that allows for basic polymorphism with user-received packets.  Enum values\n * match the mqtt spec's [packet type encoding](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901022) values.\n */\nexport enum PacketType {\n    Connect = 1,\n    Connack = 2,\n    Publish = 3,\n    Puback = 4,\n    Pubrec = 5,\n    Pubrel = 6,\n    Pubcomp = 7,\n    Subscribe = 8,\n    Suback = 9,\n    Unsubscribe = 10,\n    Unsuback = 11,\n    Pingreq = 12,\n    Pingresp = 13,\n    Disconnect = 14,\n    Auth = 15,\n}\n\n/**\n * Common interface for all packet types.\n */\nexport interface IPacket {\n\n    /**\n     * Always set on packets coming from the client to the user.  Ignored if set on packets that come from the\n     * user to the client.\n     *\n     * The primary use is to allow users to distinguish between packets in polymorphic situations (for example,\n     * the result of a publish attempt which might be a Puback (QoS 1) or Pubcomp (QoS 2, when we support it).\n     */\n    type?: PacketType;\n\n}\n\n/**\n * Data model of an [MQTT5 PUBLISH](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901100) packet\n */\nexport interface PublishPacket extends IPacket {\n\n    /**\n     * Sent publishes - The topic this message should be published to.\n     *\n     * Received publishes - The topic this message was published to.\n     *\n     * See [MQTT5 Topic Name](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901107)\n     */\n    topicName: string;\n\n    /**\n     * The payload of the publish message.\n     *\n     * See [MQTT5 Publish Payload](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901119)\n     */\n    payload?: Payload;\n\n    /**\n     * Sent publishes - The MQTT quality of service level this message should be delivered with.\n     *\n     * Received publishes - The MQTT quality of service level this message was delivered at.\n     *\n     * See [MQTT5 QoS](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901103)\n     */\n    qos: QoS;\n\n    /**\n     * True if this is a retained message, false otherwise.\n     *\n     * Always set on received publishes; on sent publishes, undefined implies false.\n     *\n     * See [MQTT5 Retain](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901104)\n     */\n    retain?: boolean;\n\n    /**\n     * Property specifying the format of the payload data.  The mqtt5 client does not enforce or use this\n     * value in a meaningful way.\n     *\n     * See [MQTT5 Payload Format Indicator](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901111)\n     */\n    payloadFormat?: PayloadFormatIndicator;\n\n    /**\n     * Sent publishes - indicates the maximum amount of time allowed to elapse for message delivery before the server\n     * should instead delete the message (relative to a recipient).\n     *\n     * Received publishes - indicates the remaining amount of time (from the server's perspective) before the message would\n     * have been deleted relative to the subscribing client.\n     *\n     * If left undefined, indicates no expiration timeout.\n     *\n     * See [MQTT5 Message Expiry Interval](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901112)\n     */\n    messageExpiryIntervalSeconds?: number;\n\n    /**\n     * Opaque topic string intended to assist with request/response implementations.  Not internally meaningful to\n     * MQTT5 or this client.\n     *\n     * See [MQTT5 Response Topic](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901114)\n     */\n    responseTopic?: string;\n\n    /**\n     * Opaque binary data used to correlate between publish messages, as a potential method for request-response\n     * implementation.  Not internally meaningful to MQTT5.\n     *\n     * See [MQTT5 Correlation Data](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901115)\n     */\n    correlationData?: BinaryData;\n\n    /**\n     * Sent publishes - ignored\n     *\n     * Received publishes - the subscription identifiers of all the subscriptions this message matched.\n     *\n     * See [MQTT5 Subscription Identifier](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901117)\n     */\n    subscriptionIdentifiers?: Array<number>;\n\n    /**\n     * Property specifying the content type of the payload.  Not internally meaningful to MQTT5.\n     *\n     * See [MQTT5 Content Type](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901118)\n     */\n    contentType?: string;\n\n    /**\n     * Set of MQTT5 user properties included with the packet.\n     *\n     * See [MQTT5 User Property](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901116)\n     */\n    userProperties?: Array<UserProperty>;\n}\n\n/**\n * Data model of an [MQTT5 PUBACK](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901121) packet\n */\nexport interface PubackPacket extends IPacket {\n\n    /**\n     * Success indicator or failure reason for the associated PUBLISH packet.\n     *\n     * See [MQTT5 PUBACK Reason Code](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901124)\n     */\n    reasonCode: PubackReasonCode;\n\n    /**\n     * Additional diagnostic information about the result of the PUBLISH attempt.\n     *\n     * See [MQTT5 Reason String](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901127)\n     */\n    reasonString?: string;\n\n    /**\n     * Set of MQTT5 user properties included with the packet.\n     *\n     * See [MQTT5 User Property](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901128)\n     */\n    userProperties?: Array<UserProperty>;\n}\n\n/**\n * Data model of an [MQTT5 CONNECT](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901033) packet.\n */\nexport interface ConnectPacket extends IPacket {\n\n    /**\n     * The maximum time interval, in seconds, that is permitted to elapse between the point at which the client\n     * finishes transmitting one MQTT packet and the point it starts sending the next.  The client will use\n     * PINGREQ packets to maintain this property.\n     *\n     * If the responding CONNACK contains a keep alive property value, then that is the negotiated keep alive value.\n     * Otherwise, the keep alive sent by the client is the negotiated value.\n     *\n     * See [MQTT5 Keep Alive](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901045)\n     */\n    keepAliveIntervalSeconds: number;\n\n    /**\n     * A unique string identifying the client to the server.  Used to restore session state between connections.\n     *\n     * If left empty, the broker will auto-assign a unique client id.  When reconnecting, the mqtt5 client will\n     * always use the auto-assigned client id.\n     *\n     * See [MQTT5 Client Identifier](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901059)\n     */\n    clientId?: string;\n\n    /**\n     * A string value that the server may use for client authentication and authorization.\n     *\n     * See [MQTT5 User Name](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901071)\n     */\n    username?: string;\n\n    /**\n     * Opaque binary data that the server may use for client authentication and authorization.\n     *\n     * See [MQTT5 Password](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901072)\n     */\n    password?: BinaryData;\n\n    /**\n     * A time interval, in seconds, that the client requests the server to persist this connection's MQTT session state\n     * for.  Has no meaning if the client has not been configured to rejoin sessions.  Must be non-zero in order to\n     * successfully rejoin a session.\n     *\n     * If the responding CONNACK contains a session expiry property value, then that is the negotiated session expiry\n     * value.  Otherwise, the session expiry sent by the client is the negotiated value.\n     *\n     * See [MQTT5 Session Expiry Interval](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901048)\n     */\n    sessionExpiryIntervalSeconds?: number;\n\n    /**\n     * If set to true, requests that the server send response information in the subsequent CONNACK.  This response\n     * information may be used to set up request-response implementations over MQTT, but doing so is outside\n     * the scope of the MQTT5 spec and client.\n     *\n     * See [MQTT5 Request Response Information](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901052)\n     */\n    requestResponseInformation?: boolean;\n\n    /**\n     * If set to true, requests that the server send additional diagnostic information (via response string or\n     * user properties) in DISCONNECT or CONNACK packets from the server.\n     *\n     * See [MQTT5 Request Problem Information](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901053)\n     */\n    requestProblemInformation?: boolean;\n\n    /**\n     * Notifies the server of the maximum number of in-flight Qos 1 and 2 messages the client is willing to handle.  If\n     * omitted, then no limit is requested.\n     *\n     * See [MQTT5 Receive Maximum](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901049)\n     */\n    receiveMaximum?: number;\n\n    /**\n     * Notifies the server of the maximum packet size the client is willing to handle.  If\n     * omitted, then no limit beyond the natural limits of MQTT packet size is requested.\n     *\n     * See [MQTT5 Maximum Packet Size](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901050)\n     */\n    maximumPacketSizeBytes?: number;\n\n    /**\n     * A time interval, in seconds, that the server should wait (for a session reconnection) before sending the\n     * will message associated with the connection's session.  If omitted, the server will send the will when the\n     * associated session is destroyed.  If the session is destroyed before a will delay interval has elapsed, then\n     * the will must be sent at the time of session destruction.\n     *\n     * See [MQTT5 Will Delay Interval](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901062)\n     */\n    willDelayIntervalSeconds?: number;\n\n    /**\n     * The definition of a message to be published when the connection's session is destroyed by the server or when\n     * the will delay interval has elapsed, whichever comes first.  If undefined, then nothing will be sent.\n     *\n     * See [MQTT5 Will](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901040)\n     */\n    will?: PublishPacket;\n\n    /**\n     * Set of MQTT5 user properties included with the packet.\n     *\n     * See [MQTT5 User Property](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901054)\n     */\n    userProperties?: Array<UserProperty>;\n}\n\n/**\n * Data model of an [MQTT5 CONNACK](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901074) packet.\n */\nexport interface ConnackPacket extends IPacket {\n\n    /**\n     * True if the client rejoined an existing session on the server, false otherwise.\n     *\n     * See [MQTT5 Session Present](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901078)\n     */\n    sessionPresent : boolean;\n\n    /**\n     * Indicates either success or the reason for failure for the connection attempt.\n     *\n     * See [MQTT5 Connect Reason Code](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901079)\n     */\n    reasonCode : ConnectReasonCode;\n\n    /**\n     * A time interval, in seconds, that the server will persist this connection's MQTT session state\n     * for.  If present, this value overrides any session expiry specified in the preceding CONNECT packet.\n     *\n     * See [MQTT5 Session Expiry Interval](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901082)\n     */\n    sessionExpiryInterval?: number;\n\n    /**\n     * The maximum amount of in-flight QoS 1 or 2 messages that the server is willing to handle at once.  If omitted,\n     * the limit is based on the valid MQTT packet id space (65535).\n     *\n     * See [MQTT5 Receive Maximum](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901083)\n     */\n    receiveMaximum?: number;\n\n    /**\n     * The maximum message delivery quality of service that the server will allow on this connection.\n     *\n     * See [MQTT5 Maximum QoS](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901084)\n     */\n    maximumQos?: QoS;\n\n    /**\n     * Indicates whether the server supports retained messages.  If undefined, retained messages are\n     * supported.\n     *\n     * See [MQTT5 Retain Available](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901085)\n     */\n    retainAvailable?: boolean;\n\n    /**\n     * Specifies the maximum packet size, in bytes, that the server is willing to accept.  If undefined, there\n     * is no limit beyond what is imposed by the MQTT spec itself.\n     *\n     * See [MQTT5 Maximum Packet Size](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901086)\n     */\n    maximumPacketSize?: number;\n\n    /**\n     * Specifies a client identifier assigned to this connection by the server.  Only valid when the client id of\n     * the preceding CONNECT packet was left empty.\n     *\n     * See [MQTT5 Assigned Client Identifier](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901087)\n     */\n    assignedClientIdentifier?: string;\n\n    /**\n     * Specifies the maximum topic alias value that the server will accept from the client.\n     *\n     * See [MQTT5 Topic Alias Maximum](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901088)\n     */\n    topicAliasMaximum?: number;\n\n    /**\n     * Additional diagnostic information about the result of the connection attempt.\n     *\n     * See [MQTT5 Reason String](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901089)\n     */\n    reasonString?: string;\n\n    /**\n     * Indicates whether the server supports wildcard subscriptions.  If undefined, wildcard subscriptions\n     * are supported.\n     *\n     * See [MQTT5 Wildcard Subscriptions Available](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901091)\n     */\n    wildcardSubscriptionsAvailable?: boolean;\n\n    /**\n     * Indicates whether the server supports subscription identifiers.  If undefined, subscription identifiers\n     * are supported.\n     *\n     * See [MQTT5 Subscription Identifiers Available](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901092)\n     */\n    subscriptionIdentifiersAvailable?: boolean;\n\n    /**\n     * Indicates whether the server supports shared subscription topic filters.  If undefined, shared subscriptions\n     * are supported.\n     *\n     * See [MQTT5 Shared Subscriptions Available](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901093)\n     */\n    sharedSubscriptionsAvailable?: boolean;\n\n    /**\n     * Server-requested override of the keep alive interval, in seconds.  If undefined, the keep alive value sent\n     * by the client should be used.\n     *\n     * See [MQTT5 Server Keep Alive](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901094)\n     */\n    serverKeepAlive?: number;\n\n    /**\n     * A value that can be used in the creation of a response topic associated with this connection.  MQTT5-based\n     * request/response is outside the purview of the MQTT5 spec and this client.\n     *\n     * See [MQTT5 Response Information](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901095)\n     */\n    responseInformation?: string;\n\n    /**\n     * Property indicating an alternate server that the client may temporarily or permanently attempt\n     * to connect to instead of the configured endpoint.  Will only be set if the reason code indicates another\n     * server may be used (ServerMoved, UseAnotherServer).\n     *\n     * See [MQTT5 Server Reference](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901096)\n     */\n    serverReference?: string;\n\n    /**\n     * Set of MQTT5 user properties included with the packet.\n     *\n     * See [MQTT5 User Property](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901090)\n     */\n    userProperties?: Array<UserProperty>;\n}\n\n/**\n * Data model of an [MQTT5 DISCONNECT](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901205) packet.\n */\nexport interface DisconnectPacket extends IPacket {\n\n    /**\n     * Value indicating the reason that the sender is closing the connection\n     *\n     * See [MQTT5 Disconnect Reason Code](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901208)\n     */\n    reasonCode: DisconnectReasonCode;\n\n    /**\n     * Requests a change to the session expiry interval negotiated at connection time as part of the disconnect.  Only\n     * valid for  DISCONNECT packets sent from client to server.  It is not valid to attempt to change session expiry\n     * from zero to a non-zero value.\n     *\n     * See [MQTT5 Session Expiry Interval](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901211)\n     */\n    sessionExpiryIntervalSeconds?: number;\n\n    /**\n     * Additional diagnostic information about the reason that the sender is closing the connection\n     *\n     * See [MQTT5 Reason String](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901212)\n     */\n    reasonString?: string;\n\n    /**\n     * Set of MQTT5 user properties included with the packet.\n     *\n     * See [MQTT5 User Property](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901213)\n     */\n    userProperties?: Array<UserProperty>;\n\n    /**\n     * Property indicating an alternate server that the client may temporarily or permanently attempt\n     * to connect to instead of the configured endpoint.  Will only be set if the reason code indicates another\n     * server may be used (ServerMoved, UseAnotherServer).\n     *\n     * See [MQTT5 Server Reference](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901214)\n     */\n    serverReference?: string;\n}\n\n/**\n * Configures a single subscription within a Subscribe operation\n *\n * See [MQTT5 Subscription Options](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901169)\n */\nexport interface Subscription {\n    /**\n     * Topic filter to subscribe to\n     *\n     * See [MQTT5 Subscription Options](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901169)\n     */\n    topicFilter : string;\n\n    /**\n     * Maximum QoS on which the subscriber will accept publish messages.  Negotiated QoS may be different.\n     *\n     * See [MQTT5 Subscription Options](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901169)\n     */\n    qos : QoS;\n\n    /**\n     * Should the server not send publishes to a client when that client was the one who sent the publish?  If\n     * undefined, this is assumed to be false.\n     *\n     * See [MQTT5 Subscription Options](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901169)\n     */\n    noLocal? : boolean;\n\n    /**\n     * Should messages sent due to this subscription keep the retain flag preserved on the message?  If undefined,\n     * this is assumed to be false.\n     *\n     * See [MQTT5 Subscription Options](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901169)\n     */\n    retainAsPublished?: boolean;\n\n    /**\n     * Should retained messages on matching topics be sent in reaction to this subscription?  If undefined,\n     * this is assumed to be RetainHandlingType.SendOnSubscribe.\n     *\n     * See [MQTT5 Subscription Options](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901169)\n     */\n    retainHandlingType?: RetainHandlingType;\n}\n\n/**\n * Data model of an [MQTT5 SUBSCRIBE](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901161) packet.\n */\nexport interface SubscribePacket extends IPacket {\n\n    /**\n     * List of topic filter subscriptions that the client wishes to listen to\n     *\n     * See [MQTT5 Subscribe Payload](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901168)\n     */\n    subscriptions: Array<Subscription>;\n\n    /**\n     * A positive integer to associate with all subscriptions in this request.  Publish packets that match\n     * a subscription in this request should include this identifier in the resulting message.\n     *\n     * See [MQTT5 Subscription Identifier](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901166)\n     */\n    subscriptionIdentifier?: number;\n\n    /**\n     * Set of MQTT5 user properties included with the packet.\n     *\n     * See [MQTT5 User Property](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901167)\n     */\n    userProperties?: Array<UserProperty>;\n}\n\n/**\n * Data model of an [MQTT5 SUBACK](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901171) packet.\n */\nexport interface SubackPacket extends IPacket {\n\n    /**\n     * A list of reason codes indicating the result of each individual subscription entry in the\n     * associated SUBSCRIBE packet.\n     *\n     * See [MQTT5 Suback Payload](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901178)\n     */\n    reasonCodes: Array<SubackReasonCode>;\n\n    /**\n     * Additional diagnostic information about the result of the SUBSCRIBE attempt.\n     *\n     * See [MQTT5 Reason String](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901176)\n     */\n    reasonString?: string;\n\n    /**\n     * Set of MQTT5 user properties included with the packet.\n     *\n     * See [MQTT5 User Property](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901177)\n     */\n    userProperties?: Array<UserProperty>;\n}\n\n/**\n * Data model of an [MQTT5 UNSUBSCRIBE](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901179) packet.\n */\nexport interface UnsubscribePacket extends IPacket {\n\n    /**\n     * List of topic filters that the client wishes to unsubscribe from.\n     *\n     * See [MQTT5 Unsubscribe Payload](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901185)\n     */\n    topicFilters: Array<string>;\n\n    /**\n     * Set of MQTT5 user properties included with the packet.\n     *\n     * See [MQTT5 User Property](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901184)\n     */\n    userProperties?: Array<UserProperty>;\n}\n\n/**\n * Data model of an [MQTT5 UNSUBACK](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901187) packet.\n */\nexport interface UnsubackPacket extends IPacket {\n\n    /**\n     * A list of reason codes indicating the result of unsubscribing from each individual topic filter entry in the\n     * associated UNSUBSCRIBE packet.\n     *\n     * See [MQTT5 Unsuback Payload](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901194)\n     */\n    reasonCodes: Array<UnsubackReasonCode>;\n\n    /**\n     * Additional diagnostic information about the result of the UNSUBSCRIBE attempt.\n     *\n     * See [MQTT5 Reason String](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901192)\n     */\n    reasonString?: string;\n\n    /**\n     * Set of MQTT5 user properties included with the packet.\n     *\n     * See [MQTT5 User Property](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901193)\n     */\n    userProperties?: Array<UserProperty>;\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * Node.js specific MQTT5 client implementation\n *\n * DEVELOPER PREVIEW DISCLAIMER\n *\n * MQTT5 support is currently in **developer preview**.  We encourage feedback at all times, but feedback during the\n * preview window is especially valuable in shaping the final product.  During the preview period we may make\n * backwards-incompatible changes to the public API, but in general, this is something we will try our best to avoid.\n *\n * [MQTT5 Client User Guide](https://www.github.com/awslabs/aws-crt-nodejs/blob/main/MQTT5-UserGuide.md)\n *\n * @packageDocumentation\n * @module mqtt5\n * @mergeTarget\n *\n */\n\nimport crt_native from './binding';\nimport { NativeResourceMixin } from \"./native_resource\";\nimport { BufferedEventEmitter } from '../common/event';\nimport * as io from \"./io\";\nimport * as http from './http';\nimport * as mqtt5_packet from \"../common/mqtt5_packet\";\nimport * as mqtt5 from \"../common/mqtt5\";\nimport * as mqtt_shared from \"../common/mqtt_shared\";\nimport {CrtError} from \"./error\";\n\nexport { HttpProxyOptions } from './http';\nexport * from \"../common/mqtt5\";\nexport * from '../common/mqtt5_packet';\n\n/**\n * Websocket handshake http request transformation function signature\n */\nexport type WebsocketHandshakeTransform = (request: http.HttpRequest, done: (error_code?: number) => void) => void;\n\n/**\n * Information about the client's queue of operations\n */\nexport interface ClientStatistics {\n\n    /**\n     * Total number of operations submitted to the client that have not yet been completed.  Unacked operations\n     * are a subset of this.\n     */\n    incompleteOperationCount : number;\n\n    /**\n     * Total packet size of operations submitted to the client that have not yet been completed.  Unacked operations\n     * are a subset of this.\n     */\n    incompleteOperationSize : number;\n\n    /**\n     * Total number of operations that have been sent to the server and are waiting for a corresponding ACK before\n     * they can be completed.\n     */\n    unackedOperationCount : number;\n\n    /**\n     * Total packet size of operations that have been sent to the server and are waiting for a corresponding ACK before\n     * they can be completed.\n     */\n    unackedOperationSize : number;\n};\n\n/**\n * Controls how disconnects affect the queued and in-progress operations tracked by the client.  Also controls\n * how operations are handled while the client is not connected.  In particular, if the client is not connected,\n * then any operation that would be failed on disconnect (according to these rules) will be rejected.\n */\nexport enum ClientOperationQueueBehavior {\n\n    /** Same as FailQos0PublishOnDisconnect */\n    Default = 0,\n\n    /**\n     * Re-queues QoS 1+ publishes on disconnect; un-acked publishes go to the front while unprocessed publishes stay\n     * in place.  All other operations (QoS 0 publishes, subscribe, unsubscribe) are failed.\n     */\n    FailNonQos1PublishOnDisconnect = 1,\n\n    /**\n     * QoS 0 publishes that are not complete at the time of disconnection are failed.  Un-acked QoS 1+ publishes are\n     * re-queued at the head of the line for immediate retransmission on a session resumption.  All other operations\n     * are requeued in original order behind any retransmissions.\n     */\n    FailQos0PublishOnDisconnect = 2,\n\n    /**\n     * All operations that are not complete at the time of disconnection are failed, except operations that\n     * the MQTT5 spec requires to be retransmitted (un-acked QoS1+ publishes).\n     */\n    FailAllOnDisconnect = 3,\n}\n\n/**\n * Additional controls for client behavior with respect to operation validation and flow control; these checks\n * go beyond the MQTT5 spec to respect limits of specific MQTT brokers.\n */\nexport enum ClientExtendedValidationAndFlowControl {\n    /**\n     * Do not do any additional validation or flow control\n     */\n    None = 0,\n\n    /**\n     * Apply additional client-side validation and operational flow control that respects the\n     * default AWS IoT Core limits.\n     *\n     * Currently applies the following additional validation:\n     *\n     * 1. No more than 8 subscriptions per SUBSCRIBE packet\n     * 1. Topics and topic filters have a maximum of 7 slashes (8 segments), not counting any AWS rules prefix\n     * 1. Topics must be <= 256 bytes in length\n     * 1. Client id must be <= 128 bytes in length\n     *\n     * Also applies the following flow control:\n     *\n     * 1. Outbound throughput throttled to 512KB/s\n     * 1. Outbound publish TPS throttled to 100\n     */\n    AwsIotCoreDefaults = 1,\n}\n\n/**\n * Configuration options for mqtt5 client creation.\n */\nexport interface Mqtt5ClientConfig {\n\n    /**\n     * Host name of the MQTT server to connect to.\n     */\n    hostName: string;\n\n    /**\n     * Network port of the MQTT server to connect to.\n     */\n    port: number;\n\n    /**\n     * Controls how the MQTT5 client should behave with respect to MQTT sessions.\n     */\n    sessionBehavior? : mqtt5.ClientSessionBehavior;\n\n    /**\n     * Controls how the reconnect delay is modified in order to smooth out the distribution of reconnection attempt\n     * timepoints for a large set of reconnecting clients.\n     */\n    retryJitterMode? : mqtt5.RetryJitterType;\n\n    /**\n     * Minimum amount of time to wait to reconnect after a disconnect.  Exponential backoff is performed with jitter\n     * after each connection failure.\n     */\n    minReconnectDelayMs? : number;\n\n    /**\n     * Maximum amount of time to wait to reconnect after a disconnect.  Exponential backoff is performed with jitter\n     * after each connection failure.\n     */\n    maxReconnectDelayMs? : number;\n\n    /**\n     * Amount of time that must elapse with an established connection before the reconnect delay is reset to the minimum.\n     * This helps alleviate bandwidth-waste in fast reconnect cycles due to permission failures on operations.\n     */\n    minConnectedTimeToResetReconnectDelayMs? : number;\n\n    /**\n     * Time interval to wait after sending a CONNECT request for a CONNACK to arrive.  If one does not arrive, the\n     * connection will be shut down.\n     */\n    connackTimeoutMs? : number;\n\n    /**\n     * All configurable options with respect to the CONNECT packet sent by the client, including the will.  These\n     * connect properties will be used for every connection attempt made by the client.\n     */\n    connectProperties?: mqtt5_packet.ConnectPacket;\n\n    /**\n     * Controls how disconnects affect the queued and in-progress operations tracked by the client.  Also controls\n     * how new operations are handled while the client is not connected.  In particular, if the client is not connected,\n     * then any operation that would be failed on disconnect (according to these rules) will also be rejected.\n     *\n     * @group Node-only\n     */\n    offlineQueueBehavior? : ClientOperationQueueBehavior;\n\n    /**\n     * Time interval to wait after sending a PINGREQ for a PINGRESP to arrive.  If one does not arrive, the client will\n     * close the current connection.\n     *\n     * @group Node-only\n     */\n    pingTimeoutMs? : number;\n\n    /**\n     * Time interval to wait for an ack after sending a QoS 1+ PUBLISH, SUBSCRIBE, or UNSUBSCRIBE before\n     * failing the operation.\n     *\n     * @group Node-only\n     */\n    ackTimeoutSeconds? : number;\n\n    /**\n     * Client bootstrap to use.  In almost all cases, this can be left undefined.\n     *\n     * @group Node-only\n     */\n    clientBootstrap?: io.ClientBootstrap;\n\n    /**\n     * Controls socket properties of the underlying MQTT connections made by the client.  Leave undefined to use\n     * defaults (no TCP keep alive, 10 second socket timeout).\n     *\n     * @group Node-only\n     */\n    socketOptions?: io.SocketOptions;\n\n    /**\n     * TLS context for secure socket connections.\n     * If undefined, then a plaintext connection will be used.\n     *\n     * @group Node-only\n     */\n    tlsCtx?: io.ClientTlsContext;\n\n    /**\n     * This callback allows a custom transformation of the HTTP request that acts as the websocket handshake.\n     * Websockets will be used if this is set to a valid transformation callback.  To use websockets but not perform\n     * a transformation, just set this as a trivial completion callback.  If undefined, the connection will be made\n     * with direct MQTT.\n     *\n     * @group Node-only\n     */\n    websocketHandshakeTransform?: WebsocketHandshakeTransform;\n\n    /**\n     * Configures (tunneling) HTTP proxy usage when establishing MQTT connections\n     *\n     * @group Node-only\n     */\n    httpProxyOptions?: http.HttpProxyOptions;\n\n    /**\n     * Additional controls for client behavior with respect to operation validation and flow control; these checks\n     * go beyond the base MQTT5 spec to respect limits of specific MQTT brokers.\n     *\n     * @group Node-only\n     */\n    extendedValidationAndFlowControlOptions? : ClientExtendedValidationAndFlowControl;\n}\n\n/**\n * Node.js specific MQTT5 client implementation\n *\n * DEVELOPER PREVIEW DISCLAIMER\n *\n * MQTT5 support is currently in **developer preview**.  We encourage feedback at all times, but feedback during the\n * preview window is especially valuable in shaping the final product.  During the preview period we may make\n * backwards-incompatible changes to the public API, but in general, this is something we will try our best to avoid.\n *\n * Not all parts of the MQTT5 spec are supported. We currently do not support:\n *\n * * AUTH packets and the authentication fields in the CONNECT packet\n * * QoS 2\n *\n * [MQTT5 Client User Guide](https://www.github.com/awslabs/aws-crt-nodejs/blob/main/MQTT5-UserGuide.md)\n *\n * This client is based on native resources.  When finished with the client, you must call close() to dispose of\n * them or they will leak.\n *\n */\nexport class Mqtt5Client extends NativeResourceMixin(BufferedEventEmitter) implements mqtt5.IMqtt5Client {\n\n    /**\n     * Client constructor\n     *\n     * @param config The configuration for this client\n     */\n    constructor(config: Mqtt5ClientConfig) {\n        super();\n\n        this._super(crt_native.mqtt5_client_new(\n            this,\n            config,\n            (client: Mqtt5Client) => { Mqtt5Client._s_on_stopped(client); },\n            (client: Mqtt5Client) => { Mqtt5Client._s_on_attempting_connect(client); },\n            (client: Mqtt5Client, connack : mqtt5_packet.ConnackPacket, settings: mqtt5.NegotiatedSettings) => { Mqtt5Client._s_on_connection_success(client, connack, settings); },\n            (client: Mqtt5Client, errorCode: number, connack? : mqtt5_packet.ConnackPacket) => { Mqtt5Client._s_on_connection_failure(client, new CrtError(errorCode), connack); },\n            (client: Mqtt5Client, errorCode: number, disconnect? : mqtt5_packet.DisconnectPacket) => { Mqtt5Client._s_on_disconnection(client, new CrtError(errorCode), disconnect); },\n            (client: Mqtt5Client, message : mqtt5_packet.PublishPacket) => { Mqtt5Client._s_on_message_received(client, message); },\n            config.clientBootstrap ? config.clientBootstrap.native_handle() : null,\n            config.socketOptions ? config.socketOptions.native_handle() : null,\n            config.tlsCtx ? config.tlsCtx.native_handle() : null,\n            config.httpProxyOptions ? config.httpProxyOptions.create_native_handle() : null\n        ));\n    }\n\n    /**\n     * Triggers cleanup of native resources associated with the MQTT5 client.  Once this has been invoked, callbacks\n     * and events are not guaranteed to be received.\n     *\n     * This must be called when finished with a client; otherwise, native resources will leak.  It is not safe\n     * to invoke any further operations on the client after close() has been called.\n     *\n     * For a running client, safe and proper shutdown can be accomplished by\n     *\n     * ```ts\n     * const stopped = once(client, \"stopped\");\n     * client.stop();\n     * await stopped;\n     * client.close();\n     * ```\n     *\n     * This is an asynchronous operation.\n     *\n     * @group Node-only\n     */\n    close() {\n        crt_native.mqtt5_client_close(this.native_handle());\n    }\n\n    /**\n     * Notifies the MQTT5 client that you want it to maintain connectivity to the configured endpoint.\n     * The client will attempt to stay connected using the properties of the reconnect-related parameters\n     * in the mqtt5 client configuration.\n     *\n     * This is an asynchronous operation.\n     */\n    start() {\n        crt_native.mqtt5_client_start(this.native_handle());\n    }\n\n    /**\n     * Notifies the MQTT5 client that you want it to end connectivity to the configured endpoint, disconnecting any\n     * existing connection and halting reconnection attempts.\n     *\n     * This is an asynchronous operation.  Once the process completes, no further events will be emitted until the client\n     * has {@link start} invoked.  Invoking {@link start start()} after a {@link stop stop()} will always result in a\n     * new MQTT session.\n     *\n     * @param disconnectPacket (optional) properties of a DISCONNECT packet to send as part of the shutdown process\n     */\n    stop(disconnectPacket?: mqtt5_packet.DisconnectPacket) {\n        crt_native.mqtt5_client_stop(this.native_handle(), disconnectPacket);\n    }\n\n    /**\n     * Subscribe to one or more topic filters by queuing a SUBSCRIBE packet to be sent to the server.\n     *\n     * @param packet SUBSCRIBE packet to send to the server\n     * @returns a promise that will be rejected with an error or resolved with the SUBACK response\n     */\n    async subscribe(packet: mqtt5_packet.SubscribePacket) : Promise<mqtt5_packet.SubackPacket> {\n        return new Promise<mqtt5_packet.SubackPacket>((resolve, reject) => {\n\n            function curriedPromiseCallback(client: Mqtt5Client, errorCode: number, suback?: mqtt5_packet.SubackPacket){\n                return Mqtt5Client._s_on_suback_callback(resolve, reject, client, errorCode, suback);\n            }\n\n            try {\n                crt_native.mqtt5_client_subscribe(this.native_handle(), packet, curriedPromiseCallback);\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Unsubscribe from one or more topic filters by queuing an UNSUBSCRIBE packet to be sent to the server.\n     *\n     * @param packet UNSUBSCRIBE packet to send to the server\n     * @returns a promise that will be rejected with an error or resolved with the UNSUBACK response\n     */\n    async unsubscribe(packet: mqtt5_packet.UnsubscribePacket) : Promise<mqtt5_packet.UnsubackPacket> {\n        return new Promise<mqtt5_packet.UnsubackPacket>((resolve, reject) => {\n\n            function curriedPromiseCallback(client: Mqtt5Client, errorCode: number, unsuback?: mqtt5_packet.UnsubackPacket){\n                return Mqtt5Client._s_on_unsuback_callback(resolve, reject, client, errorCode, unsuback);\n            }\n\n            try {\n                crt_native.mqtt5_client_unsubscribe(this.native_handle(), packet, curriedPromiseCallback);\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Send a message to subscribing clients by queuing a PUBLISH packet to be sent to the server.\n     *\n     * @param packet PUBLISH packet to send to the server\n     * @returns a promise that will be rejected with an error or resolved with the PUBACK response (QoS 1) or\n     * undefined (QoS 0)\n     */\n    async publish(packet: mqtt5_packet.PublishPacket) : Promise<mqtt5.PublishCompletionResult> {\n        return new Promise<mqtt5.PublishCompletionResult>((resolve, reject) => {\n\n            if (packet && packet.payload) {\n                packet.payload = mqtt_shared.normalize_payload(packet.payload);\n            }\n\n            function curriedPromiseCallback(client: Mqtt5Client, errorCode: number, result: mqtt5.PublishCompletionResult){\n                return Mqtt5Client._s_on_puback_callback(resolve, reject, client, errorCode, result);\n            }\n\n            try {\n                crt_native.mqtt5_client_publish(this.native_handle(), packet, curriedPromiseCallback);\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Queries a small set of numerical statistics about the current state of the client's operation queue\n     *\n     * @group Node-only\n     */\n    getQueueStatistics() : ClientStatistics {\n        return crt_native.mqtt5_client_get_queue_statistics(this.native_handle());\n    }\n\n    /**\n     * Event emitted when the client encounters a serious error condition, such as invalid input, napi failures, and\n     * other potentially unrecoverable situations.\n     *\n     * Listener type: {@link ErrorEventListener}\n     *\n     * @event\n     */\n    static ERROR : string = 'error';\n\n    /**\n     * Event emitted when an MQTT PUBLISH packet is received by the client.\n     *\n     * Listener type: {@link MessageReceivedEventListener}\n     *\n     * @event\n     */\n    static MESSAGE_RECEIVED : string = 'messageReceived';\n\n    /**\n     * Event emitted when the client begins a connection attempt.\n     *\n     * Listener type: {@link AttemptingConnectEventListener}\n     *\n     * @event\n     */\n    static ATTEMPTING_CONNECT : string = 'attemptingConnect';\n\n    /**\n     * Event emitted when the client successfully establishes an MQTT connection.  Only emitted after\n     * an {@link ATTEMPTING_CONNECT attemptingConnect} event.\n     *\n     * Listener type: {@link ConnectionSuccessEventListener}\n     *\n     * @event\n     */\n    static CONNECTION_SUCCESS : string = 'connectionSuccess';\n\n    /**\n     * Event emitted when the client fails to establish an MQTT connection.  Only emitted after\n     * an {@link ATTEMPTING_CONNECT attemptingConnect} event.\n     *\n     * Listener type: {@link ConnectionFailureEventListener}\n     *\n     * @event\n     */\n    static CONNECTION_FAILURE : string = 'connectionFailure';\n\n    /**\n     * Event emitted when the client's current connection is closed for any reason.  Only emitted after\n     * a {@link CONNECTION_SUCCESS connectionSuccess} event.\n     *\n     * Listener type: {@link DisconnectionEventListener}\n     *\n     * @event\n     */\n    static DISCONNECTION : string = 'disconnection';\n\n    /**\n     * Event emitted when the client finishes shutdown as a result of the user invoking {@link stop}.\n     *\n     * Listener type: {@link StoppedEventListener}\n     *\n     * @event\n     */\n    static STOPPED : string = 'stopped';\n\n    /**\n     * Registers a listener for the client's {@link ERROR error} event.  An {@link ERROR error} event is emitted when\n     * the client encounters a serious error condition, such as invalid input, napi failures, and other potentially\n     * unrecoverable situations.\n     *\n     * @param event the type of event to listen to\n     * @param listener the event listener to add\n     */\n    on(event: 'error', listener: mqtt5.ErrorEventListener): this;\n\n    /**\n     * Registers a listener for the client's {@link MESSAGE_RECEIVED messageReceived} event.  A\n     * {@link MESSAGE_RECEIVED messageReceived} event is emitted when an MQTT PUBLISH packet is received by the\n     * client.\n     *\n     * @param event the type of event to listen to\n     * @param listener the event listener to add\n     */\n    on(event: 'messageReceived', listener: mqtt5.MessageReceivedEventListener): this;\n\n    /**\n     * Registers a listener for the client's {@link ATTEMPTING_CONNECT attemptingConnect} event.  A\n     * {@link ATTEMPTING_CONNECT attemptingConnect} event is emitted every time the client begins a connection attempt.\n     *\n     * @param event the type of event to listen to\n     * @param listener the event listener to add\n     */\n    on(event: 'attemptingConnect', listener: mqtt5.AttemptingConnectEventListener): this;\n\n    /**\n     * Registers a listener for the client's {@link CONNECTION_SUCCESS connectionSuccess} event.  A\n     * {@link CONNECTION_SUCCESS connectionSuccess} event is emitted every time the client successfully establishes\n     * an MQTT connection.\n     *\n     * @param event the type of event to listen to\n     * @param listener the event listener to add\n     */\n    on(event: 'connectionSuccess', listener: mqtt5.ConnectionSuccessEventListener): this;\n\n    /**\n     * Registers a listener for the client's {@link CONNECTION_FAILURE connectionFailure} event.  A\n     * {@link CONNECTION_FAILURE connectionFailure} event is emitted every time the client fails to establish an\n     * MQTT connection.\n     *\n     * @param event the type of event to listen to\n     * @param listener the event listener to add\n     */\n    on(event: 'connectionFailure', listener: mqtt5.ConnectionFailureEventListener): this;\n\n    /**\n     * Registers a listener for the client's {@link DISCONNECTION disconnection} event.  A\n     * {@link DISCONNECTION disconnection} event is emitted when the client's current MQTT connection is closed\n     * for any reason.\n     *\n     * @param event the type of event to listen to\n     * @param listener the event listener to add\n     */\n    on(event: 'disconnection', listener: mqtt5.DisconnectionEventListener): this;\n\n    /**\n     * Registers a listener for the client's {@link STOPPED stopped} event.  A\n     * {@link STOPPED stopped} event is emitted when the client finishes shutdown as a\n     * result of the user invoking {@link stop}.\n     *\n     * @param event the type of event to listen to\n     * @param listener the event listener to add\n     */\n    on(event: 'stopped', listener: mqtt5.StoppedEventListener): this;\n\n    on(event: string | symbol, listener: (...args: any[]) => void): this {\n        super.on(event, listener);\n        return this;\n    }\n\n    /*\n     * Private helper functions\n     *\n     * Callbacks come through static functions so that the native threadsafe function objects do not\n     * capture the client object itself, simplifying the number of strong references to the client floating around.\n     */\n\n    private static _s_on_stopped(client: Mqtt5Client) {\n        process.nextTick(() => {\n            let stoppedEvent: mqtt5.StoppedEvent = {};\n\n            client.emit(Mqtt5Client.STOPPED, stoppedEvent);\n        });\n    }\n\n    private static _s_on_attempting_connect(client: Mqtt5Client) {\n        process.nextTick(() => {\n            let attemptingConnectEvent: mqtt5.AttemptingConnectEvent = {};\n\n            client.emit(Mqtt5Client.ATTEMPTING_CONNECT, attemptingConnectEvent);\n        });\n    }\n\n    private static _s_on_connection_success(client: Mqtt5Client, connack: mqtt5_packet.ConnackPacket, settings: mqtt5.NegotiatedSettings) {\n        let connectionSuccessEvent: mqtt5.ConnectionSuccessEvent = {\n            connack: connack,\n            settings: settings\n        };\n\n        process.nextTick(() => {\n            client.emit(Mqtt5Client.CONNECTION_SUCCESS, connectionSuccessEvent);\n        });\n    }\n\n    private static _s_on_connection_failure(client: Mqtt5Client, error: CrtError, connack?: mqtt5_packet.ConnackPacket) {\n        let connectionFailureEvent: mqtt5.ConnectionFailureEvent = {\n            error: error\n        };\n\n        if (connack !== null && connack !== undefined) {\n            connectionFailureEvent.connack = connack;\n        }\n\n        process.nextTick(() => {\n            client.emit(Mqtt5Client.CONNECTION_FAILURE, connectionFailureEvent);\n        });\n    }\n\n    private static _s_on_disconnection(client: Mqtt5Client, error: CrtError, disconnect?: mqtt5_packet.DisconnectPacket) {\n        let disconnectionEvent: mqtt5.DisconnectionEvent = {\n            error: error\n        };\n\n        if (disconnect !== null && disconnect !== undefined) {\n            disconnectionEvent.disconnect = disconnect;\n        }\n\n        process.nextTick(() => {\n            client.emit(Mqtt5Client.DISCONNECTION, disconnectionEvent);\n        });\n    }\n\n    private static _s_on_suback_callback(resolve : (value: (mqtt5_packet.SubackPacket | PromiseLike<mqtt5_packet.SubackPacket>)) => void, reject : (reason?: any) => void, client: Mqtt5Client, errorCode: number, suback?: mqtt5_packet.SubackPacket) {\n        if (errorCode == 0 && suback !== undefined) {\n            resolve(suback);\n        } else {\n            reject(io.error_code_to_string(errorCode));\n        }\n    }\n\n    private static _s_on_unsuback_callback(resolve : (value: (mqtt5_packet.UnsubackPacket | PromiseLike<mqtt5_packet.UnsubackPacket>)) => void, reject : (reason?: any) => void, client: Mqtt5Client, errorCode: number, unsuback?: mqtt5_packet.UnsubackPacket) {\n        if (errorCode == 0 && unsuback !== undefined) {\n            resolve(unsuback);\n        } else {\n            reject(io.error_code_to_string(errorCode));\n        }\n    }\n\n    private static _s_on_puback_callback(resolve : (value: (mqtt5.PublishCompletionResult | PromiseLike<mqtt5.PublishCompletionResult>)) => void, reject : (reason?: any) => void, client: Mqtt5Client, errorCode: number, result:mqtt5.PublishCompletionResult) {\n        if (errorCode == 0) {\n            resolve(result);\n        } else {\n            reject(io.error_code_to_string(errorCode));\n        }\n    }\n\n    private static _s_on_message_received(client: Mqtt5Client, message : mqtt5_packet.PublishPacket) {\n        let messageReceivedEvent: mqtt5.MessageReceivedEvent = {\n            message: message\n        };\n\n        process.nextTick(() => {\n            client.emit(Mqtt5Client.MESSAGE_RECEIVED, messageReceivedEvent);\n        });\n    }\n}", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * Module for the configuration of MQTT5 clients to connect to AWS IoT\n *\n * @packageDocumentation\n */\n\nimport * as mqtt5 from \"./mqtt5\";\nimport * as io from \"./io\";\nimport * as auth from \"./auth\";\nimport {CrtError} from \"./error\";\nimport * as iot_shared from \"../common/aws_iot_shared\";\nimport * as http from \"./http\";\nimport * as mqtt_shared from \"../common/mqtt_shared\";\n\nexport { MqttConnectCustomAuthConfig } from '../common/aws_iot_shared';\n\n/**\n * Websocket-specific MQTT5 client AWS IoT configuration options\n *\n * @category IoT\n */\nexport interface WebsocketSigv4Config {\n\n    /**\n     * Sources the AWS Credentials used to sign the websocket connection handshake.  If not provided, the\n     * default credentials provider chain is used.\n     */\n    credentialsProvider?: auth.AwsCredentialsProvider;\n\n    /**\n     * AWS region the websocket connection is being established in.  Must match the region embedded in the\n     * endpoint.  If not provided, pattern-matching logic is used to extract the region from the endpoint.\n     * Use this option if the pattern-matching logic has not yet been updated to handle new endpoint formats.\n     */\n    region?: string;\n}\n\n/**\n * Builder pattern class to create an {@link Mqtt5ClientConfig} which can then be used to create\n * an {@link Mqtt5Client}, configured for use with AWS IoT.\n *\n * DEVELOPER PREVIEW DISCLAIMER\n *\n * MQTT5 support is currently in **developer preview**.  We encourage feedback at all times, but feedback during the\n * preview window is especially valuable in shaping the final product.  During the preview period we may make\n * backwards-incompatible changes to the public API, but in general, this is something we will try our best to avoid.\n *\n * [MQTT5 Client User Guide](https://www.github.com/awslabs/aws-crt-nodejs/blob/main/MQTT5-UserGuide.md)\n *\n * @category IoT\n */\nexport class AwsIotMqtt5ClientConfigBuilder {\n\n    private static DEFAULT_WEBSOCKET_MQTT_PORT : number = 443;\n    private static DEFAULT_DIRECT_MQTT_PORT : number = 8883;\n\n    private config: mqtt5.Mqtt5ClientConfig;\n\n    private customAuthConfig?: iot_shared.MqttConnectCustomAuthConfig;\n\n    private constructor(hostName : string, port: number, private tlsContextOptions: io.TlsContextOptions) {\n        this.config = {\n            hostName: hostName,\n            port: port,\n            connectProperties: {\n                keepAliveIntervalSeconds: mqtt_shared.DEFAULT_KEEP_ALIVE\n            },\n            extendedValidationAndFlowControlOptions: mqtt5.ClientExtendedValidationAndFlowControl.AwsIotCoreDefaults\n        };\n    }\n\n    /* Builders for different connection methods to AWS IoT Core */\n\n    /**\n     * Create a new MQTT5 client builder that will create MQTT5 clients that connect to AWS IoT Core via mutual TLS\n     * using X509 certificate and key at the supplied file paths.\n     *\n     * @param hostName - AWS IoT endpoint to connect to\n     * @param certPath - Path to certificate, in PEM format\n     * @param keyPath - Path to private key, in PEM format\n     */\n    static newDirectMqttBuilderWithMtlsFromPath(hostName : string, certPath: string, keyPath: string) : AwsIotMqtt5ClientConfigBuilder {\n        let builder = new AwsIotMqtt5ClientConfigBuilder(\n            hostName,\n            AwsIotMqtt5ClientConfigBuilder.DEFAULT_DIRECT_MQTT_PORT,\n            io.TlsContextOptions.create_client_with_mtls_from_path(certPath, keyPath));\n\n        if (io.is_alpn_available()) {\n            builder.tlsContextOptions.alpn_list.unshift('x-amzn-mqtt-ca');\n        }\n\n        return builder;\n    }\n\n    /**\n     * Create a new MQTT5 client builder that will create MQTT5 clients that connect to AWS IoT Core via mutual TLS\n     * using in-memory X509 certificate and key.\n     *\n     * @param hostName - AWS IoT endpoint to connect to\n     * @param cert - Certificate, in PEM format\n     * @param privateKey - Private key, in PEM format\n     */\n    static newDirectMqttBuilderWithMtlsFromMemory(hostName : string, cert: string, privateKey: string) : AwsIotMqtt5ClientConfigBuilder {\n        let builder = new AwsIotMqtt5ClientConfigBuilder(\n            hostName,\n            AwsIotMqtt5ClientConfigBuilder.DEFAULT_DIRECT_MQTT_PORT,\n            io.TlsContextOptions.create_client_with_mtls(cert, privateKey));\n\n        if (io.is_alpn_available()) {\n            builder.tlsContextOptions.alpn_list.unshift('x-amzn-mqtt-ca');\n        }\n\n        return builder;\n    }\n\n    /**\n     * Create a new MQTT5 client builder that will create MQTT5 clients that connect to AWS IoT Core via mutual TLS\n     * using a PKCS11 library for certificate and private key operations.\n     *\n     * NOTE: This configuration only works on Unix devices.\n     *\n     * @param hostName - AWS IoT endpoint to connect to\n     * @param pkcs11Options - PKCS#11 options.\n     */\n    static newDirectMqttBuilderWithMtlsFromPkcs11(hostName : string, pkcs11Options: io.TlsContextOptions.Pkcs11Options) : AwsIotMqtt5ClientConfigBuilder {\n        let builder = new AwsIotMqtt5ClientConfigBuilder(\n            hostName,\n            AwsIotMqtt5ClientConfigBuilder.DEFAULT_DIRECT_MQTT_PORT,\n            io.TlsContextOptions.create_client_with_mtls_pkcs11(pkcs11Options));\n\n        if (io.is_alpn_available()) {\n            builder.tlsContextOptions.alpn_list.unshift('x-amzn-mqtt-ca');\n        }\n\n        return builder;\n    }\n\n    /**\n     * Create a new MQTT5 client builder that will create MQTT5 clients that connect to AWS IoT Core via mutual TLS\n     * using a PKCS12 file.\n     *\n     * Note: This configuration only works on MacOS devices.\n     *\n     * @param hostName - AWS IoT endpoint to connect to\n     * @param pkcs12_options - The PKCS#12 options to use in the builder.\n     */\n    static newDirectMqttBuilderWithMtlsFromPkcs12(hostName : string, pkcs12_options: io.Pkcs12Options) : AwsIotMqtt5ClientConfigBuilder {\n        let builder = new AwsIotMqtt5ClientConfigBuilder(\n            hostName,\n            AwsIotMqtt5ClientConfigBuilder.DEFAULT_DIRECT_MQTT_PORT,\n            io.TlsContextOptions.create_client_with_mtls_pkcs12_from_path(pkcs12_options.pkcs12_file, pkcs12_options.pkcs12_password));\n\n        if (io.is_alpn_available()) {\n            builder.tlsContextOptions.alpn_list.unshift('x-amzn-mqtt-ca');\n        }\n\n        return builder;\n    }\n\n    /**\n     * Create a new MQTT5 client builder that will create MQTT5 clients that connect to AWS IoT Core via mutual TLS\n     * using a certificate entry in a Windows certificate store.\n     *\n     * NOTE: This configuration only works on Windows devices.\n     *\n     * @param hostName - AWS IoT endpoint to connect to\n     * @param certificatePath - Path to certificate in a Windows certificate store.\n     *      The path must use backslashes and end with the certificate's thumbprint.\n     *      Example: `CurrentUser\\MY\\A11F8A9B5DF5B98BA3508FBCA575D09570E0D2C6`\n     */\n    static newDirectMqttBuilderWithMtlsFromWindowsCertStorePath(hostName : string, certificatePath: string) : AwsIotMqtt5ClientConfigBuilder {\n        let builder = new AwsIotMqtt5ClientConfigBuilder(\n            hostName,\n            AwsIotMqtt5ClientConfigBuilder.DEFAULT_DIRECT_MQTT_PORT,\n            io.TlsContextOptions.create_client_with_mtls_windows_cert_store_path(certificatePath));\n\n        if (io.is_alpn_available()) {\n            builder.tlsContextOptions.alpn_list.unshift('x-amzn-mqtt-ca');\n        }\n\n        return builder;\n    }\n\n    /**\n     * Create a new MQTT5 client builder that will create MQTT5 clients that connect to AWS IoT Core via TLS,\n     * authenticating via a custom authenticator.\n     *\n     * @param hostName - AWS IoT endpoint to connect to\n     * @param customAuthConfig - AWS IoT custom auth configuration\n     */\n    static newDirectMqttBuilderWithCustomAuth(hostName : string, customAuthConfig: iot_shared.MqttConnectCustomAuthConfig) : AwsIotMqtt5ClientConfigBuilder {\n        let builder = new AwsIotMqtt5ClientConfigBuilder(\n            hostName,\n            AwsIotMqtt5ClientConfigBuilder.DEFAULT_WEBSOCKET_MQTT_PORT,\n            new io.TlsContextOptions());\n\n        builder.customAuthConfig = customAuthConfig;\n        builder.tlsContextOptions.alpn_list = [\"mqtt\"];\n\n        return builder;\n    }\n\n    /**\n     * Create a new MQTT5 client builder that will create MQTT5 clients that connect to AWS IoT Core via websockets,\n     * using AWS Sigv4 signing to establish authenticate.\n     *\n     * @param hostName - AWS IoT endpoint to connect to\n     * @param options - additional sigv4-oriented options to use\n     */\n    static newWebsocketMqttBuilderWithSigv4Auth(hostName : string, options?: WebsocketSigv4Config) : AwsIotMqtt5ClientConfigBuilder {\n        let tlsContextOptions = new io.TlsContextOptions();\n        tlsContextOptions.alpn_list = [];\n\n        let builder = new AwsIotMqtt5ClientConfigBuilder(\n            hostName,\n            AwsIotMqtt5ClientConfigBuilder.DEFAULT_WEBSOCKET_MQTT_PORT,\n            tlsContextOptions);\n\n        let credentialsProvider = options?.credentialsProvider;\n        if (!credentialsProvider) {\n            credentialsProvider = auth.AwsCredentialsProvider.newDefault();\n        }\n\n        builder.config.websocketHandshakeTransform = async (request, done) => {\n            try {\n                const signingConfig : auth.AwsSigningConfig = {\n                    algorithm: auth.AwsSigningAlgorithm.SigV4,\n                    signature_type: auth.AwsSignatureType.HttpRequestViaQueryParams,\n                    provider: credentialsProvider as auth.AwsCredentialsProvider,\n                    region: options?.region ?? iot_shared.extractRegionFromEndpoint(hostName),\n                    service: \"iotdevicegateway\",\n                    signed_body_value: auth.AwsSignedBodyValue.EmptySha256,\n                    omit_session_token: true,\n                };\n\n                await auth.aws_sign_request(request, signingConfig);\n                done();\n            } catch (error) {\n                if (error instanceof CrtError) {\n                    done(error.error_code);\n                } else {\n                    done(3); /* TODO: AWS_ERROR_UNKNOWN */\n                }\n            }\n        };\n\n        return builder;\n    }\n\n    /**\n     * Create a new MQTT5 client builder that will create MQTT5 clients that connect to AWS IoT Core via websockets,\n     * authenticating via a custom authenticator.\n     *\n     * @param hostName - AWS IoT endpoint to connect to\n     * @param customAuthConfig - AWS IoT custom auth configuration\n     */\n     static newWebsocketMqttBuilderWithCustomAuth(hostName : string, customAuthConfig: iot_shared.MqttConnectCustomAuthConfig) : AwsIotMqtt5ClientConfigBuilder {\n        let builder = new AwsIotMqtt5ClientConfigBuilder(\n            hostName,\n            AwsIotMqtt5ClientConfigBuilder.DEFAULT_WEBSOCKET_MQTT_PORT,\n            new io.TlsContextOptions());\n        builder.customAuthConfig = customAuthConfig;\n\n        builder.config.websocketHandshakeTransform = async (request, done) => {\n            done(0);\n        };\n\n        return builder;\n    }\n\n    /* Instance Methods for various config overrides */\n\n    /**\n     * Overrides the default system trust store.\n     *\n     * @param caDirpath - Only used on Unix-style systems where all trust anchors are\n     * stored in a directory (e.g. /etc/ssl/certs).\n     * @param caFilepath - Single file containing all trust CAs, in PEM format\n     */\n    withCertificateAuthorityFromPath(caDirpath?: string, caFilepath?: string) : AwsIotMqtt5ClientConfigBuilder {\n        this.tlsContextOptions.override_default_trust_store_from_path(caDirpath, caFilepath);\n        return this;\n    }\n\n    /**\n     * Overrides the default system trust store.\n     *\n     * @param ca - Buffer containing all trust CAs, in PEM format\n     */\n    withCertificateAuthority(ca: string) : AwsIotMqtt5ClientConfigBuilder {\n        this.tlsContextOptions.override_default_trust_store(ca);\n        return this;\n    }\n\n    /**\n     * Overrides the IoT endpoint port to connect to.\n     *\n     * @param port The IoT endpoint port to connect to. Usually 8883 for MQTT, or 443 for websockets\n     */\n    withPort(port: number) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.port = port;\n        return this;\n    }\n\n    /**\n     * Overrides all configurable options with respect to the CONNECT packet sent by the client, including the will.\n     * These connect properties will be used for every connection attempt made by the client.  Custom authentication\n     * configuration will override the username and password values in this configuration.\n     *\n     * @param connectPacket all configurable options with respect to the CONNECT packet sent by the client\n     */\n    withConnectProperties(connectPacket: mqtt5.ConnectPacket) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.connectProperties = connectPacket;\n        return this;\n    }\n\n    /**\n     * Overrides how the MQTT5 client should behave with respect to MQTT sessions.\n     *\n     * @param sessionBehavior how the MQTT5 client should behave with respect to MQTT sessions.\n     */\n    withSessionBehavior(sessionBehavior: mqtt5.ClientSessionBehavior) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.sessionBehavior = sessionBehavior;\n        return this;\n    }\n\n    /**\n     * Overrides how the reconnect delay is modified in order to smooth out the distribution of reconnection attempt\n     * timepoints for a large set of reconnecting clients.\n     *\n     * @param retryJitterMode controls how the reconnect delay is modified in order to smooth out the distribution of\n     * econnection attempt timepoints for a large set of reconnecting clients.\n     */\n    withRetryJitterMode(retryJitterMode: mqtt5.RetryJitterType) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.retryJitterMode = retryJitterMode;\n        return this;\n    }\n\n    /**\n     * Overrides the minimum amount of time to wait to reconnect after a disconnect.  Exponential backoff is performed\n     * with controllable jitter after each connection failure.\n     *\n     * @param minReconnectDelayMs minimum amount of time to wait to reconnect after a disconnect.\n     */\n    withMinReconnectDelayMs(minReconnectDelayMs? : number) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.minReconnectDelayMs = minReconnectDelayMs;\n        return this;\n    }\n\n    /**\n     * Overrides the maximum amount of time to wait to reconnect after a disconnect.  Exponential backoff is performed\n     * with controllable jitter after each connection failure.\n     *\n     * @param maxReconnectDelayMs maximum amount of time to wait to reconnect after a disconnect.\n     */\n    withMaxReconnectDelayMs(maxReconnectDelayMs? : number) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.maxReconnectDelayMs = maxReconnectDelayMs;\n        return this;\n    }\n\n    /**\n     * Overrides the amount of time that must elapse with an established connection before the reconnect delay is\n     * reset to the minimum.  This helps alleviate bandwidth-waste in fast reconnect cycles due to permission\n     * failures on operations.\n     *\n     * @param minConnectedTimeToResetReconnectDelayMs the amount of time that must elapse with an established\n     * connection before the reconnect delay is reset to the minimum\n     */\n    withMinConnectedTimeToResetReconnectDelayMs(minConnectedTimeToResetReconnectDelayMs? : number) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.minConnectedTimeToResetReconnectDelayMs = minConnectedTimeToResetReconnectDelayMs;\n        return this;\n    }\n\n    /**\n     * Overrides the time interval to wait after sending a CONNECT request for a CONNACK to arrive.  If one does not\n     * arrive, the connection will be shut down.\n     *\n     * @param connackTimeoutMs time interval to wait after sending a CONNECT request for a CONNACK to arrive\n     */\n    withConnackTimeoutMs(connackTimeoutMs? : number) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.connackTimeoutMs = connackTimeoutMs;\n        return this;\n    }\n\n    /**\n     * Overrides how disconnects affect the queued and in-progress operations tracked by the client.  Also controls\n     * how new operations are handled while the client is not connected.  In particular, if the client is not connected,\n     * then any operation that would be failed on disconnect (according to these rules) will also be rejected.\n     *\n     * @param offlineQueueBehavior how disconnects affect the queued and in-progress operations tracked by the client\n     *\n     * @group Node-only\n     */\n    withOfflineQueueBehavior(offlineQueueBehavior: mqtt5.ClientOperationQueueBehavior) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.offlineQueueBehavior = offlineQueueBehavior;\n        return this;\n    }\n\n    /**\n     * Overrides the time interval to wait after sending a PINGREQ for a PINGRESP to arrive.  If one does not arrive,\n     * the client will close the current connection.\n     *\n     * @param pingTimeoutMs time interval to wait after sending a PINGREQ for a PINGRESP to arrive\n     *\n     * @group Node-only\n     */\n    withPingTimeoutMs(pingTimeoutMs? : number) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.pingTimeoutMs = pingTimeoutMs;\n        return this;\n    }\n\n    /**\n     * Overrides the time interval to wait for an ack after sending a QoS 1+ PUBLISH, SUBSCRIBE, or UNSUBSCRIBE before\n     * failing the operation.  Defaults to no timeout.\n     *\n     * @param ackTimeoutSeconds the time interval to wait for an ack after sending a QoS 1+ PUBLISH, SUBSCRIBE,\n     * or UNSUBSCRIBE before failing the operation\n     *\n     * @group Node-only\n     */\n    withAckTimeoutSeconds(ackTimeoutSeconds? : number) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.ackTimeoutSeconds = ackTimeoutSeconds;\n        return this;\n    }\n\n    /**\n     * Overrides the socket properties of the underlying MQTT connections made by the client.  Leave undefined to use\n     * defaults (no TCP keep alive, 10 second socket timeout).\n     *\n     * @param socketOptions socket properties of the underlying MQTT connections made by the client\n     *\n     * @group Node-only\n     */\n    withSocketOptions(socketOptions: io.SocketOptions) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.socketOptions = socketOptions;\n        return this;\n    }\n\n    /**\n     * Overrides (tunneling) HTTP proxy usage when establishing MQTT connections.\n     *\n     * @param httpProxyOptions HTTP proxy options to use when establishing MQTT connections\n     *\n     * @group Node-only\n     */\n    withHttpProxyOptions(httpProxyOptions: http.HttpProxyOptions) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.httpProxyOptions = httpProxyOptions;\n        return this;\n    }\n\n    /**\n     * Overrides additional controls for client behavior with respect to operation validation and flow control; these\n     * checks go beyond the base MQTT5 spec to respect limits of specific MQTT brokers.\n     *\n     * @param extendedValidationAndFlowControlOptions additional controls for client behavior with respect to operation\n     * validation and flow control\n     *\n     * @group Node-only\n     */\n    withExtendedValidationAndFlowControlOptions(extendedValidationAndFlowControlOptions: mqtt5.ClientExtendedValidationAndFlowControl) : AwsIotMqtt5ClientConfigBuilder {\n        this.config.extendedValidationAndFlowControlOptions = extendedValidationAndFlowControlOptions;\n        return this;\n    }\n\n\n    /**\n     * Constructs an MQTT5 Client configuration object for creating mqtt5 clients.\n     */\n    build() : mqtt5.Mqtt5ClientConfig {\n        if (this.config.tlsCtx === undefined) {\n            this.config.tlsCtx = new io.ClientTlsContext(this.tlsContextOptions);\n        }\n\n        // this is always set by the constructor, but check it to make typescript happy\n        if (this.config.connectProperties) {\n            this.config.connectProperties.username = iot_shared.buildMqtt5FinalUsername(this.customAuthConfig);\n            if (this.customAuthConfig?.password) {\n                this.config.connectProperties.password = this.customAuthConfig?.password;\n            }\n        }\n\n        return this.config;\n    }\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n * Module for AWS IoT MQTT client configuration and connection establishment.\n *\n * @packageDocumentation\n * @module iot\n * @mergeTarget\n */\n\nexport * from './aws_iot';\nexport * from './aws_iot_mqtt5';\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n/**\n *\n * A module containing support for mqtt connection establishment and operations.\n *\n * @packageDocumentation\n * @module mqtt\n * @mergeTarget\n */\n\nimport crt_native from './binding';\nimport { NativeResource, NativeResourceMixin } from \"./native_resource\";\nimport { BufferedEventEmitter } from '../common/event';\nimport * as crt from \"../common/mqtt_shared\";\nimport { CrtError } from './error';\nimport * as io from \"./io\";\nimport { HttpProxyOptions, HttpRequest } from './http';\nexport { HttpProxyOptions } from './http';\nimport {\n    QoS,\n    Payload,\n    MqttRequest,\n    MqttSubscribeRequest,\n    MqttWill,\n    OnMessageCallback,\n    MqttConnectionConnected,\n    MqttConnectionDisconnected,\n    MqttConnectionResumed,\n    DEFAULT_RECONNECT_MIN_SEC,\n    DEFAULT_RECONNECT_MAX_SEC,\n} from \"../common/mqtt\";\nexport { QoS, Payload, MqttRequest, MqttSubscribeRequest, MqttWill, OnMessageCallback, MqttConnectionConnected, MqttConnectionDisconnected, MqttConnectionResumed } from \"../common/mqtt\";\n\n/**\n * Listener signature for event emitted from an {@link MqttClientConnection} when an error occurs\n *\n * @param error the error that occurred\n *\n * @category MQTT\n */\nexport type MqttConnectionError = (error: CrtError) => void;\n\n/**\n * Listener signature for event emitted from an {@link MqttClientConnection} when the connection has been\n * interrupted unexpectedly.\n *\n * @param error description of the error that occurred\n *\n * @category MQTT\n */\nexport type MqttConnectionInterrupted = (error: CrtError) => void;\n\n/**\n * MQTT client\n *\n * @category MQTT\n */\nexport class MqttClient extends NativeResource {\n    /**\n     * @param bootstrap The {@link ClientBootstrap} to use for socket connections.  Leave undefined to use the\n     *          default system-wide bootstrap (recommended).\n     */\n    constructor(readonly bootstrap: io.ClientBootstrap | undefined = undefined) {\n        super(crt_native.mqtt_client_new(bootstrap != null ? bootstrap.native_handle() : null));\n    }\n\n    /**\n     * Creates a new {@link MqttClientConnection}\n     * @param config Configuration for the mqtt connection\n     * @returns A new connection\n     */\n    new_connection(\n        config: MqttConnectionConfig) {\n        return new MqttClientConnection(this, config);\n    }\n}\n\n/**\n * Configuration options for an MQTT connection\n *\n * @category MQTT\n */\nexport interface MqttConnectionConfig {\n    /**\n     * ID to place in CONNECT packet. Must be unique across all devices/clients.\n     * If an ID is already in use, the other client will be disconnected.\n     */\n    client_id: string;\n\n    /** Server name to connect to */\n    host_name: string;\n\n    /** Server port to connect to */\n    port: number;\n\n    /** Socket options */\n    socket_options: io.SocketOptions;\n\n    /** If true, connect to MQTT over websockets */\n    use_websocket?: boolean;\n\n    /**\n     * Whether or not to start a clean session with each reconnect.\n     * If True, the server will forget all subscriptions with each reconnect.\n     * Set False to request that the server resume an existing session\n     * or start a new session that may be resumed after a connection loss.\n     * The `session_present` bool in the connection callback informs\n     * whether an existing session was successfully resumed.\n     * If an existing session is resumed, the server remembers previous subscriptions\n     * and sends mesages (with QoS1 or higher) that were published while the client was offline.\n     */\n    clean_session?: boolean;\n\n    /**\n     * The keep alive value, in seconds, to send in CONNECT packet.\n     * A PING will automatically be sent at this interval.\n     * The server will assume the connection is lost if no PING is received after 1.5X this value.\n     * This duration must be longer than {@link ping_timeout}.\n     */\n    keep_alive?: number;\n\n    /**\n     * Milliseconds to wait for ping response before client assumes\n     * the connection is invalid and attempts to reconnect.\n     * This duration must be shorter than keep_alive_secs.\n     * Alternatively, TCP keep-alive via :attr:`SocketOptions.keep_alive`\n     * may accomplish this in a more efficient (low-power) scenario,\n     * but keep-alive options may not work the same way on every platform and OS version.\n     */\n    ping_timeout?: number;\n\n    /**\n     * Milliseconds to wait for the response to the operation requires response by protocol.\n     * Set to zero to disable timeout. Otherwise, the operation will fail if no response is\n     * received within this amount of time after the packet is written to the socket.\n     * It applied to PUBLISH (QoS>0) and UNSUBSCRIBE now.\n     */\n    protocol_operation_timeout?: number;\n\n    /**\n     * Minimum seconds to wait between reconnect attempts.\n     * Must be <= {@link reconnect_max_sec}.\n     * Wait starts at min and doubles with each attempt until max is reached.\n     */\n    reconnect_min_sec?: number;\n\n    /**\n     * Maximum seconds to wait between reconnect attempts.\n     * Must be >= {@link reconnect_min_sec}.\n     * Wait starts at min and doubles with each attempt until max is reached.\n     */\n    reconnect_max_sec?: number;\n\n    /**\n     * Will to send with CONNECT packet. The will is\n     * published by the server when its connection to the client is unexpectedly lost.\n     */\n    will?: MqttWill;\n\n    /** Username to connect with */\n    username?: string;\n\n    /** Password to connect with */\n    password?: string;\n\n    /**\n     * TLS context for secure socket connections.\n     * If None is provided, then an unencrypted connection is used.\n     */\n    tls_ctx?: io.ClientTlsContext;\n\n    /** Optional proxy options */\n    proxy_options?: HttpProxyOptions;\n\n    /**\n     * Optional function to transform websocket handshake request.\n     * If provided, function is called each time a websocket connection is attempted.\n     * The function may modify the HTTP request before it is sent to the server.\n     */\n    websocket_handshake_transform?: (request: HttpRequest, done: (error_code?: number) => void) => void;\n}\n\n/**\n * Information about the connection's queue of operations\n */\n export interface ConnectionStatistics {\n\n    /**\n     * Total number of operations submitted to the connection that have not yet been completed.  Unacked operations\n     * are a subset of this.\n     */\n    incompleteOperationCount : number;\n\n    /**\n     * Total packet size of operations submitted to the connection that have not yet been completed.  Unacked operations\n     * are a subset of this.\n     */\n    incompleteOperationSize : number;\n\n    /**\n     * Total number of operations that have been sent to the server and are waiting for a corresponding ACK before\n     * they can be completed.\n     */\n    unackedOperationCount : number;\n\n    /**\n     * Total packet size of operations that have been sent to the server and are waiting for a corresponding ACK before\n     * they can be completed.\n     */\n    unackedOperationSize : number;\n};\n\n/**\n * MQTT client connection\n *\n * @category MQTT\n */\nexport class MqttClientConnection extends NativeResourceMixin(BufferedEventEmitter) {\n    readonly tls_ctx?: io.ClientTlsContext; // this reference keeps the tls_ctx alive beyond the life of the connection\n\n    /**\n     * @param client The client that owns this connection\n     * @param config The configuration for this connection\n     */\n    constructor(readonly client: MqttClient, private config: MqttConnectionConfig) {\n        super();\n\n        if (config == null || config == undefined) {\n            throw new CrtError(\"MqttClientConnection constructor: config not defined\");\n        }\n\n        // If there is a will, ensure that its payload is normalized to a DataView\n        const will = config.will ?\n            {\n                topic: config.will.topic,\n                qos: config.will.qos,\n                payload: crt.normalize_payload(config.will.payload),\n                retain: config.will.retain\n            }\n            : undefined;\n\n        /** clamp reconnection time out values */\n        var min_sec = DEFAULT_RECONNECT_MIN_SEC;\n        var max_sec = DEFAULT_RECONNECT_MAX_SEC;\n        if (config.reconnect_min_sec) {\n            min_sec = config.reconnect_min_sec;\n            // clamp max, in case they only passed in min\n            max_sec = Math.max(min_sec, max_sec);\n        }\n\n        if (config.reconnect_max_sec) {\n            max_sec = config.reconnect_max_sec;\n            // clamp min, in case they only passed in max (or passed in min > max)\n            min_sec = Math.min(min_sec, max_sec);\n        }\n\n        if (client == undefined || client == null) {\n            throw new CrtError(\"MqttClientConnection constructor: client not defined\");\n        }\n        if (config.socket_options == undefined || config.socket_options == null) {\n            throw new CrtError(\"MqttClientConnection constructor: socket_options in configuration not defined\");\n        }\n\n        this._super(crt_native.mqtt_client_connection_new(\n            client.native_handle(),\n            (error_code: number) => { this._on_connection_interrupted(error_code); },\n            (return_code: number, session_present: boolean) => { this._on_connection_resumed(return_code, session_present); },\n            config.tls_ctx ? config.tls_ctx.native_handle() : null,\n            will,\n            config.username,\n            config.password,\n            config.use_websocket,\n            config.proxy_options ? config.proxy_options.create_native_handle() : undefined,\n            config.websocket_handshake_transform,\n            min_sec,\n            max_sec,\n        ));\n        this.tls_ctx = config.tls_ctx;\n        crt_native.mqtt_client_connection_on_message(this.native_handle(), this._on_any_publish.bind(this));\n\n        /*\n         * Failed mqtt operations (which is normal) emit error events as well as rejecting the original promise.\n         * By installing a default error handler here we help prevent common issues where operation failures bring\n         * the whole program to an end because a handler wasn't installed.  Programs that install their own handler\n         * will be unaffected.\n         */\n        this.on('error', (error) => {});\n    }\n\n    private close() {\n        crt_native.mqtt_client_connection_close(this.native_handle());\n    }\n\n    /**\n     * Emitted when the connection successfully establishes itself for the first time\n     *\n     * @event\n     */\n    static CONNECT = 'connect';\n\n    /**\n     * Emitted when connection has disconnected successfully.\n     *\n     * @event\n     */\n    static DISCONNECT = 'disconnect';\n\n    /**\n     * Emitted when an error occurs.  The error will contain the error\n     * code and message.\n     *\n     * @event\n     */\n    static ERROR = 'error';\n\n    /**\n     * Emitted when the connection is dropped unexpectedly. The error will contain the error\n     * code and message.  The underlying mqtt implementation will attempt to reconnect.\n     *\n     * @event\n     */\n    static INTERRUPT = 'interrupt';\n\n    /**\n     * Emitted when the connection reconnects (after an interrupt). Only triggers on connections after the initial one.\n     *\n     * @event\n     */\n    static RESUME = 'resume';\n\n    /**\n     * Emitted when any MQTT publish message arrives.\n     *\n     * @event\n     */\n    static MESSAGE = 'message';\n\n    on(event: 'connect', listener: MqttConnectionConnected): this;\n\n    on(event: 'disconnect', listener: MqttConnectionDisconnected): this;\n\n    on(event: 'error', listener: MqttConnectionError): this;\n\n    on(event: 'interrupt', listener: MqttConnectionInterrupted): this;\n\n    on(event: 'resume', listener: MqttConnectionResumed): this;\n\n    on(event: 'message', listener: OnMessageCallback): this;\n\n    // Overridden to allow uncorking on ready\n    on(event: string | symbol, listener: (...args: any[]) => void): this {\n        super.on(event, listener);\n        if (event == 'connect') {\n            process.nextTick(() => {\n                this.uncork();\n            })\n        }\n        return this;\n    }\n\n    /**\n     * Open the actual connection to the server (async).\n     * @returns A Promise which completes whether the connection succeeds or fails.\n     *          If connection fails, the Promise will reject with an exception.\n     *          If connection succeeds, the Promise will return a boolean that is\n     *          true for resuming an existing session, or false if the session is new\n     */\n    async connect() {\n        return new Promise<boolean>((resolve, reject) => {\n            reject = this._reject(reject);\n\n            if (this.config.socket_options == null || this.config.socket_options == undefined) {\n                throw new CrtError(\"MqttClientConnection connect: socket_options in configuration not defined\");\n            }\n\n            try {\n                crt_native.mqtt_client_connection_connect(\n                    this.native_handle(),\n                    this.config.client_id,\n                    this.config.host_name,\n                    this.config.port,\n                    this.config.socket_options.native_handle(),\n                    this.config.keep_alive,\n                    this.config.ping_timeout,\n                    this.config.protocol_operation_timeout,\n                    this.config.clean_session,\n                    this._on_connect_callback.bind(this, resolve, reject),\n                );\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * The connection will automatically reconnect. To cease reconnection attempts, call {@link disconnect}.\n     * To resume the connection, call {@link connect}.\n     * @deprecated\n     */\n    async reconnect() {\n        return new Promise<boolean>((resolve, reject) => {\n            reject = this._reject(reject);\n\n            try {\n                crt_native.mqtt_client_connection_reconnect(this.native_handle(), this._on_connect_callback.bind(this, resolve, reject));\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Publish message (async).\n     * If the device is offline, the PUBLISH packet will be sent once the connection resumes.\n     *\n     * @param topic Topic name\n     * @param payload Contents of message\n     * @param qos Quality of Service for delivering this message\n     * @param retain If true, the server will store the message and its QoS so that it can be\n     *               delivered to future subscribers whose subscriptions match the topic name\n     * @returns Promise which returns a {@link MqttRequest} which will contain the packet id of\n     *          the PUBLISH packet.\n     *\n     * * For QoS 0, completes as soon as the packet is sent.\n     * * For QoS 1, completes when PUBACK is received.\n     * * For QoS 2, completes when PUBCOMP is received.\n     */\n    async publish(topic: string, payload: Payload, qos: QoS, retain: boolean = false) {\n        return new Promise<MqttRequest>((resolve, reject) => {\n            reject = this._reject(reject);\n            try {\n                crt_native.mqtt_client_connection_publish(this.native_handle(), topic, crt.normalize_payload(payload), qos, retain, this._on_puback_callback.bind(this, resolve, reject));\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Subscribe to a topic filter (async).\n     * The client sends a SUBSCRIBE packet and the server responds with a SUBACK.\n     *\n     * subscribe() may be called while the device is offline, though the async\n     * operation cannot complete successfully until the connection resumes.\n     *\n     * Once subscribed, `callback` is invoked each time a message matching\n     * the `topic` is received. It is possible for such messages to arrive before\n     * the SUBACK is received.\n     *\n     * @param topic Subscribe to this topic filter, which may include wildcards\n     * @param qos Maximum requested QoS that server may use when sending messages to the client.\n     *            The server may grant a lower QoS in the SUBACK\n     * @param on_message Optional callback invoked when message received.\n     * @returns Promise which returns a {@link MqttSubscribeRequest} which will contain the\n     *          result of the SUBSCRIBE. The Promise resolves when a SUBACK is returned\n     *          from the server or is rejected when an exception occurs.\n     */\n    async subscribe(topic: string, qos: QoS, on_message?: OnMessageCallback) {\n        return new Promise<MqttSubscribeRequest>((resolve, reject) => {\n            reject = this._reject(reject);\n\n            try {\n                crt_native.mqtt_client_connection_subscribe(this.native_handle(), topic, qos, on_message, this._on_suback_callback.bind(this, resolve, reject));\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Unsubscribe from a topic filter (async).\n     * The client sends an UNSUBSCRIBE packet, and the server responds with an UNSUBACK.\n     * @param topic The topic filter to unsubscribe from. May contain wildcards.\n     * @returns Promise wihch returns a {@link MqttRequest} which will contain the packet id\n     *          of the UNSUBSCRIBE packet being acknowledged. Promise is resolved when an\n     *          UNSUBACK is received from the server or is rejected when an exception occurs.\n     */\n    async unsubscribe(topic: string) {\n        return new Promise<MqttRequest>((resolve, reject) => {\n            reject = this._reject(reject);\n\n            try {\n                crt_native.mqtt_client_connection_unsubscribe(this.native_handle(), topic, this._on_unsuback_callback.bind(this, resolve, reject));\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Close the connection (async).\n     * @returns Promise which completes when the connection is closed.\n    */\n    async disconnect() {\n        return new Promise<void>((resolve, reject) => {\n            reject = this._reject(reject);\n\n            try {\n                crt_native.mqtt_client_connection_disconnect(\n                    this.native_handle(),\n                    this._on_disconnect_callback.bind(this, resolve)\n                );\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * Queries a small set of numerical statistics about the current state of the connection's operation queue\n     *\n     * @group Node-only\n     */\n     getQueueStatistics() : ConnectionStatistics {\n        return crt_native.mqtt_client_connection_get_queue_statistics(this.native_handle());\n    }\n\n    // Wrap a promise rejection with a function that will also emit the error as an event\n    private _reject(reject: (reason: any) => void) {\n        return (reason: any) => {\n            reject(reason);\n\n            process.nextTick(() => {\n                this.emit('error', new CrtError(reason));\n            });\n        };\n    }\n\n    private _on_connection_interrupted(error_code: number) {\n        this.emit('interrupt', new CrtError(error_code));\n    }\n\n    private _on_connection_resumed(return_code: number, session_present: boolean) {\n        this.emit('resume', return_code, session_present);\n    }\n\n    private _on_any_publish(topic: string, payload: ArrayBuffer, dup: boolean, qos: QoS, retain: boolean) {\n        this.emit('message', topic, payload, dup, qos, retain);\n    }\n\n    private _on_connect_callback(resolve : (value: (boolean | PromiseLike<boolean>)) => void, reject : (reason?: any) => void, error_code: number, return_code: number, session_present: boolean) {\n        if (error_code == 0 && return_code == 0) {\n            resolve(session_present);\n            this.emit('connect', session_present);\n        } else if (error_code != 0) {\n            reject(\"Failed to connect: \" + io.error_code_to_string(error_code));\n        } else {\n            reject(\"Server rejected connection.\");\n        }\n    }\n\n    private _on_puback_callback(resolve : (value: (MqttRequest | PromiseLike<MqttRequest>)) => void, reject : (reason?: any) => void, packet_id: number, error_code: number) {\n        if (error_code == 0) {\n            resolve({ packet_id });\n        } else {\n            reject(\"Failed to publish: \" + io.error_code_to_string(error_code));\n        }\n    }\n\n    private _on_suback_callback(resolve : (value: (MqttSubscribeRequest | PromiseLike<MqttSubscribeRequest>)) => void, reject : (reason?: any) => void, packet_id: number, topic: string, qos: QoS, error_code: number) {\n        if (error_code == 0) {\n            resolve({ packet_id, topic, qos, error_code });\n        } else {\n            reject(\"Failed to subscribe: \" + io.error_code_to_string(error_code));\n        }\n    }\n\n    private _on_unsuback_callback(resolve : (value: (MqttRequest | PromiseLike<MqttRequest>)) => void, reject : (reason?: any) => void, packet_id: number, error_code: number) {\n        if (error_code == 0) {\n            resolve({ packet_id });\n        } else {\n            reject(\"Failed to unsubscribe: \" + io.error_code_to_string(error_code));\n        }\n    }\n\n    private _on_disconnect_callback(resolve: (value?: (void | PromiseLike<void>)) => void) {\n        resolve();\n        this.emit('disconnect');\n        this.close();\n    }\n}\n", "/*\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0.\n */\n\n// This is the entry point for the AWS CRT nodejs native libraries\n\n/* common libs */\nimport * as cancel from './common/cancel';\nimport * as platform from './common/platform';\nimport * as promise from './common/promise';\nimport * as resource_safety from './common/resource_safety';\n\n/* node specific libs */\nimport * as auth from './native/auth';\nimport * as checksums from './native/checksums';\nimport * as crt from './native/crt';\nimport * as crypto from './native/crypto';\nimport * as eventstream from './native/eventstream';\nimport * as http from './native/http';\nimport * as io from './native/io';\nimport * as iot from './native/iot';\nimport * as mqtt from './native/mqtt';\nimport * as mqtt5 from './native/mqtt5';\nimport { ICrtError, CrtError } from './native/error';\n\nexport {\n    auth,\n    cancel,\n    checksums,\n    crypto,\n    crt,\n    eventstream,\n    http,\n    io,\n    iot,\n    mqtt,\n    mqtt5,\n    platform,\n    promise,\n    resource_safety,\n    ICrtError,\n    CrtError\n};\n", "'use strict'\n\nclass TokenError extends Error {\n  constructor(code, message, additional) {\n    super(message)\n    Error.captureStackTrace(this, this.constructor)\n\n    this.code = code\n\n    if (additional) {\n      for (const k in additional) {\n        this[k] = additional[k]\n      }\n    }\n  }\n}\n\nTokenError.codes = {\n  invalidType: 'FAST_JWT_INVALID_TYPE',\n  invalidOption: 'FAST_JWT_INVALID_OPTION',\n  invalidAlgorithm: 'FAST_JWT_INVALID_ALGORITHM',\n  invalidClaimType: 'FAST_JWT_INVALID_CLAIM_TYPE',\n  invalidClaimValue: 'FAST_JWT_INVALID_CLAIM_VALUE',\n  invalidKey: 'FAST_JWT_INVALID_KEY',\n  invalidSignature: 'FAST_JWT_INVALID_SIGNATURE',\n  invalidPayload: 'FAST_JWT_INVALID_PAYLOAD',\n  malformed: 'FAST_JWT_MALFORMED',\n  inactive: 'FAST_JWT_INACTIVE',\n  expired: 'FAST_JWT_EXPIRED',\n  missingKey: 'FAST_JWT_MISSING_KEY',\n  keyFetchingError: 'FAST_JWT_KEY_FETCHING_ERROR',\n  signError: 'FAST_JWT_SIGN_ERROR',\n  verifyError: 'FAST_JWT_VERIFY_ERROR',\n  missingRequiredClaim: 'FAST_JWT_MISSING_REQUIRED_CLAIM'\n}\n\nTokenError.wrap = function(originalError, code, message) {\n  if (originalError instanceof TokenError) {\n    return originalError\n  }\n\n  return new TokenError(code, message, { originalError })\n}\n\nmodule.exports = TokenError\n", "'use strict'\n\nconst TokenError = require('./error')\n\nfunction decode({ complete, checkTyp }, token) {\n  // Make sure the token is a string or a Buffer - Other cases make no sense to even try to validate\n  if (token instanceof Buffer) {\n    token = token.toString('utf-8')\n  } else if (typeof token !== 'string') {\n    throw new TokenError(TokenError.codes.invalidType, 'The token must be a string or a buffer.')\n  }\n\n  // Validate the format\n  const firstSeparator = token.indexOf('.')\n  const lastSeparator = token.lastIndexOf('.')\n\n  if (firstSeparator === -1 || firstSeparator >= lastSeparator) {\n    throw new TokenError(TokenError.codes.malformed, 'The token is malformed.')\n  }\n\n  // Parse header\n  let validHeader = false\n  try {\n    const header = JSON.parse(Buffer.from(token.slice(0, firstSeparator), 'base64').toString('utf-8'))\n    if (checkTyp && header.typ !== checkTyp) {\n      throw new TokenError(TokenError.codes.invalidType, `The type must be \"${checkTyp}\".`, { header })\n    }\n    validHeader = true\n\n    // Parse payload\n    let payload = Buffer.from(token.slice(firstSeparator + 1, lastSeparator), 'base64').toString('utf-8')\n    payload = JSON.parse(payload)\n    // https://tools.ietf.org/html/rfc7519#section-7.2\n    //\n    // 10.  Verify that the resulting octet sequence is a UTF-8-encoded\n    //      representation of a completely valid JSON object conforming to\n    //      RFC 7159 [RFC7159]; let the JWT Claims Set be this JSON object.\n    if (!payload || typeof payload !== 'object') {\n      throw new TokenError(TokenError.codes.invalidPayload, 'The payload must be an object', { payload })\n    }\n\n    // Return whatever was requested\n    return complete\n      ? { header, payload, signature: token.slice(lastSeparator + 1), input: token.slice(0, lastSeparator) }\n      : payload\n  } catch (e) {\n    throw TokenError.wrap(\n      e,\n      TokenError.codes.malformed,\n      `The token ${validHeader ? 'payload' : 'header'} is not a valid base64url serialized JSON.`\n    )\n  }\n}\n\nmodule.exports = function createDecoder(options = {}) {\n  const complete = options.complete || false\n  const checkTyp = options.checkTyp\n\n  return decode.bind(null, { complete, checkTyp })\n}\n", "/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n  if (typeof next !== 'function')\n    throw new Error('obliterator/iterator: expecting a function!');\n\n  this.next = next;\n}\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function () {\n  var args = arguments,\n    l = args.length,\n    i = 0;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function () {\n  var iterator = new Iterator(function () {\n    return {done: true};\n  });\n\n  return iterator;\n};\n\n/**\n * Returning an iterator over the given indexed sequence.\n *\n * @param  {string|Array} sequence - Target sequence.\n * @return {Iterator}\n */\nIterator.fromSequence = function (sequence) {\n  var i = 0,\n    l = sequence.length;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: sequence[i++]};\n  });\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function (value) {\n  if (value instanceof Iterator) return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n", "exports.ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined';\nexports.SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n", "/**\n * Obliterator ForEach Function\n * =============================\n *\n * Helper function used to easily iterate over mixed values.\n */\nvar support = require('./support.js');\n\nvar ARRAY_BUFFER_SUPPORT = support.ARRAY_BUFFER_SUPPORT;\nvar SYMBOL_SUPPORT = support.SYMBOL_SUPPORT;\n\n/**\n * Function able to iterate over almost any iterable JS value.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nmodule.exports = function forEach(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable) throw new Error('obliterator/forEach: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEach: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++) callback(iterable[i], i);\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while (((s = iterator.next()), s.done !== true)) {\n      callback(s.value, i);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n};\n", "/**\n * Mnemonist Typed Array Helpers\n * ==============================\n *\n * Miscellaneous helpers related to typed arrays.\n */\n\n/**\n * When using an unsigned integer array to store pointers, one might want to\n * choose the optimal word size in regards to the actual numbers of pointers\n * to store.\n *\n * This helpers does just that.\n *\n * @param  {number} size - Expected size of the array to map.\n * @return {TypedArray}\n */\nvar MAX_8BIT_INTEGER = Math.pow(2, 8) - 1,\n    MAX_16BIT_INTEGER = Math.pow(2, 16) - 1,\n    MAX_32BIT_INTEGER = Math.pow(2, 32) - 1;\n\nvar MAX_SIGNED_8BIT_INTEGER = Math.pow(2, 7) - 1,\n    MAX_SIGNED_16BIT_INTEGER = Math.pow(2, 15) - 1,\n    MAX_SIGNED_32BIT_INTEGER = Math.pow(2, 31) - 1;\n\nexports.getPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_8BIT_INTEGER)\n    return Uint8Array;\n\n  if (maxIndex <= MAX_16BIT_INTEGER)\n    return Uint16Array;\n\n  if (maxIndex <= MAX_32BIT_INTEGER)\n    return Uint32Array;\n\n  throw new Error('mnemonist: Pointer Array of size > 4294967295 is not supported.');\n};\n\nexports.getSignedPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_SIGNED_8BIT_INTEGER)\n    return Int8Array;\n\n  if (maxIndex <= MAX_SIGNED_16BIT_INTEGER)\n    return Int16Array;\n\n  if (maxIndex <= MAX_SIGNED_32BIT_INTEGER)\n    return Int32Array;\n\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given number.\n *\n * @param  {number} value - Value to test.\n * @return {TypedArrayClass}\n */\nexports.getNumberType = function(value) {\n\n  // <= 32 bits itnteger?\n  if (value === (value | 0)) {\n\n    // Negative\n    if (Math.sign(value) === -1) {\n      if (value <= 127 && value >= -128)\n        return Int8Array;\n\n      if (value <= 32767 && value >= -32768)\n        return Int16Array;\n\n      return Int32Array;\n    }\n    else {\n\n      if (value <= 255)\n        return Uint8Array;\n\n      if (value <= 65535)\n        return Uint16Array;\n\n      return Uint32Array;\n    }\n  }\n\n  // 53 bits integer & floats\n  // NOTE: it's kinda hard to tell whether we could use 32bits or not...\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given array\n * of JavaScript numbers.\n *\n * @param  {array}    array  - Array to represent.\n * @param  {function} getter - Optional getter.\n * @return {TypedArrayClass}\n */\nvar TYPE_PRIORITY = {\n  Uint8Array: 1,\n  Int8Array: 2,\n  Uint16Array: 3,\n  Int16Array: 4,\n  Uint32Array: 5,\n  Int32Array: 6,\n  Float32Array: 7,\n  Float64Array: 8\n};\n\n// TODO: make this a one-shot for one value\nexports.getMinimalRepresentation = function(array, getter) {\n  var maxType = null,\n      maxPriority = 0,\n      p,\n      t,\n      v,\n      i,\n      l;\n\n  for (i = 0, l = array.length; i < l; i++) {\n    v = getter ? getter(array[i]) : array[i];\n    t = exports.getNumberType(v);\n    p = TYPE_PRIORITY[t.name];\n\n    if (p > maxPriority) {\n      maxPriority = p;\n      maxType = t;\n    }\n  }\n\n  return maxType;\n};\n\n/**\n * Function returning whether the given value is a typed array.\n *\n * @param  {any} value - Value to test.\n * @return {boolean}\n */\nexports.isTypedArray = function(value) {\n  return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView(value);\n};\n\n/**\n * Function used to concat byte arrays.\n *\n * @param  {...ByteArray}\n * @return {ByteArray}\n */\nexports.concat = function() {\n  var length = 0,\n      i,\n      o,\n      l;\n\n  for (i = 0, l = arguments.length; i < l; i++)\n    length += arguments[i].length;\n\n  var array = new (arguments[0].constructor)(length);\n\n  for (i = 0, o = 0; i < l; i++) {\n    array.set(arguments[i], o);\n    o += arguments[i].length;\n  }\n\n  return array;\n};\n\n/**\n * Function used to initialize a byte array of indices.\n *\n * @param  {number}    length - Length of target.\n * @return {ByteArray}\n */\nexports.indices = function(length) {\n  var PointerArray = exports.getPointerArray(length);\n\n  var array = new PointerArray(length);\n\n  for (var i = 0; i < length; i++)\n    array[i] = i;\n\n  return array;\n};\n", "/**\n * Mnemonist Iterable Function\n * ============================\n *\n * Harmonized iteration helpers over mixed iterable targets.\n */\nvar forEach = require('obliterator/foreach');\n\nvar typed = require('./typed-arrays.js');\n\n/**\n * Function used to determine whether the given object supports array-like\n * random access.\n *\n * @param  {any} target - Target object.\n * @return {boolean}\n */\nfunction isArrayLike(target) {\n  return Array.isArray(target) || typed.isTypedArray(target);\n}\n\n/**\n * Function used to guess the length of the structure over which we are going\n * to iterate.\n *\n * @param  {any} target - Target object.\n * @return {number|undefined}\n */\nfunction guessLength(target) {\n  if (typeof target.length === 'number')\n    return target.length;\n\n  if (typeof target.size === 'number')\n    return target.size;\n\n  return;\n}\n\n/**\n * Function used to convert an iterable to an array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArray(target) {\n  var l = guessLength(target);\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i++] = value;\n  });\n\n  return array;\n}\n\n/**\n * Same as above but returns a supplementary indices array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArrayWithIndices(target) {\n  var l = guessLength(target);\n\n  var IndexArray = typeof l === 'number' ?\n    typed.getPointerArray(l) :\n    Array;\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n  var indices = typeof l === 'number' ? new IndexArray(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i] = value;\n    indices[i] = i++;\n  });\n\n  return [array, indices];\n}\n\n/**\n * Exporting.\n */\nexports.isArrayLike = isArrayLike;\nexports.guessLength = guessLength;\nexports.toArray = toArray;\nexports.toArrayWithIndices = toArrayWithIndices;\n", "/**\n * Mnemonist LRUCache\n * ===================\n *\n * JavaScript implementation of the LRU Cache data structure. To save up\n * memory and allocations this implementation represents its underlying\n * doubly-linked list as static arrays and pointers. Thus, memory is allocated\n * only once at instantiation and JS objects are never created to serve as\n * pointers. This also means this implementation does not trigger too many\n * garbage collections.\n *\n * Note that to save up memory, a LRU Cache can be implemented using a singly\n * linked list by storing predecessors' pointers as hashmap values.\n * However, this means more hashmap lookups and would probably slow the whole\n * thing down. What's more, pointers are not the things taking most space in\n * memory.\n */\nvar Iterator = require('obliterator/iterator'),\n    forEach = require('obliterator/foreach'),\n    typed = require('./utils/typed-arrays.js'),\n    iterables = require('./utils/iterables.js');\n\n/**\n * LRUCache.\n *\n * @constructor\n * @param {function} Keys     - Array class for storing keys.\n * @param {function} Values   - Array class for storing values.\n * @param {number}   capacity - Desired capacity.\n */\nfunction LRUCache(Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  this.capacity = capacity;\n\n  if (typeof this.capacity !== 'number' || this.capacity <= 0)\n    throw new Error('mnemonist/lru-cache: capacity should be positive number.');\n  else if (!isFinite(this.capacity) || Math.floor(this.capacity) !== this.capacity)\n    throw new Error('mnemonist/lru-cache: capacity should be a finite positive integer.');\n\n  var PointerArray = typed.getPointerArray(capacity);\n\n  this.forward = new PointerArray(capacity);\n  this.backward = new PointerArray(capacity);\n  this.K = typeof Keys === 'function' ? new Keys(capacity) : new Array(capacity);\n  this.V = typeof Values === 'function' ? new Values(capacity) : new Array(capacity);\n\n  // Properties\n  this.size = 0;\n  this.head = 0;\n  this.tail = 0;\n  this.items = {};\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nLRUCache.prototype.clear = function() {\n  this.size = 0;\n  this.head = 0;\n  this.tail = 0;\n  this.items = {};\n};\n\n/**\n * Method used to splay a value on top.\n *\n * @param  {number}   pointer - Pointer of the value to splay on top.\n * @return {LRUCache}\n */\nLRUCache.prototype.splayOnTop = function(pointer) {\n  var oldHead = this.head;\n\n  if (this.head === pointer)\n    return this;\n\n  var previous = this.backward[pointer],\n      next = this.forward[pointer];\n\n  if (this.tail === pointer) {\n    this.tail = previous;\n  }\n  else {\n    this.backward[next] = previous;\n  }\n\n  this.forward[previous] = next;\n\n  this.backward[oldHead] = pointer;\n  this.head = pointer;\n  this.forward[pointer] = oldHead;\n\n  return this;\n};\n\n/**\n * Method used to set the value for the given key in the cache.\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {undefined}\n */\nLRUCache.prototype.set = function(key, value) {\n\n  var pointer = this.items[key];\n\n  // The key already exists, we just need to update the value and splay on top\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    this.V[pointer] = value;\n\n    return;\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    pointer = this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    delete this.items[this.K[pointer]];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n};\n\n/**\n * Method used to set the value for the given key in the cache\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {{evicted: boolean, key: any, value: any}} An object containing the\n * key and value of an item that was overwritten or evicted in the set\n * operation, as well as a boolean indicating whether it was evicted due to\n * limited capacity. Return value is null if nothing was evicted or overwritten\n * during the set operation.\n */\nLRUCache.prototype.setpop = function(key, value) {\n  var oldValue = null;\n  var oldKey = null;\n\n  var pointer = this.items[key];\n\n  // The key already exists, we just need to update the value and splay on top\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    oldValue = this.V[pointer];\n    this.V[pointer] = value;\n    return {evicted: false, key: key, value: oldValue};\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    pointer = this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    oldValue = this.V[pointer];\n    oldKey = this.K[pointer];\n    delete this.items[this.K[pointer]];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n\n  // Return object if eviction took place, otherwise return null\n  if (oldKey) {\n    return {evicted: true, key: oldKey, value: oldValue};\n  }\n  else {\n    return null;\n  }\n};\n\n/**\n * Method used to check whether the key exists in the cache.\n *\n * @param  {any} key   - Key.\n * @return {boolean}\n */\nLRUCache.prototype.has = function(key) {\n  return key in this.items;\n};\n\n/**\n * Method used to get the value attached to the given key. Will move the\n * related key to the front of the underlying linked list.\n *\n * @param  {any} key   - Key.\n * @return {any}\n */\nLRUCache.prototype.get = function(key) {\n  var pointer = this.items[key];\n\n  if (typeof pointer === 'undefined')\n    return;\n\n  this.splayOnTop(pointer);\n\n  return this.V[pointer];\n};\n\n/**\n * Method used to get the value attached to the given key. Does not modify\n * the ordering of the underlying linked list.\n *\n * @param  {any} key   - Key.\n * @return {any}\n */\nLRUCache.prototype.peek = function(key) {\n  var pointer = this.items[key];\n\n  if (typeof pointer === 'undefined')\n    return;\n\n  return this.V[pointer];\n};\n\n/**\n * Method used to iterate over the cache's entries using a callback.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nLRUCache.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      values = this.V,\n      forward = this.forward;\n\n  while (i < l) {\n\n    callback.call(scope, values[pointer], keys[pointer], this);\n    pointer = forward[pointer];\n\n    i++;\n  }\n};\n\n/**\n * Method used to create an iterator over the cache's keys from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.keys = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var key = keys[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: key\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the cache's values from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.values = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      values = this.V,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var value = values[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: value\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the cache's entries from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.entries = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      values = this.V,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var key = keys[pointer],\n        value = values[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: [key, value]\n    };\n  });\n};\n\n/**\n * Attaching the #.entries method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  LRUCache.prototype[Symbol.iterator] = LRUCache.prototype.entries;\n\n/**\n * Convenience known methods.\n */\nLRUCache.prototype.inspect = function() {\n  var proxy = new Map();\n\n  var iterator = this.entries(),\n      step;\n\n  while ((step = iterator.next(), !step.done))\n    proxy.set(step.value[0], step.value[1]);\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: LRUCache,\n    enumerable: false\n  });\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  LRUCache.prototype[Symbol.for('nodejs.util.inspect.custom')] = LRUCache.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a structure.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @param  {function} Keys     - Array class for storing keys.\n * @param  {function} Values   - Array class for storing values.\n * @param  {number}   capacity - Cache's capacity.\n * @return {LRUCache}\n */\nLRUCache.from = function(iterable, Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = iterables.guessLength(iterable);\n\n    if (typeof capacity !== 'number')\n      throw new Error('mnemonist/lru-cache.from: could not guess iterable length. Please provide desired capacity as last argument.');\n  }\n  else if (arguments.length === 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  var cache = new LRUCache(Keys, Values, capacity);\n\n  forEach(iterable, function(value, key) {\n    cache.set(key, value);\n  });\n\n  return cache;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = LRUCache;\n", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n", "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n", "'use strict';\n\nconst inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  const state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  const state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  const state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  const state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  const state = this._reporterState;\n\n  const prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  const state = this._reporterState;\n\n  const now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  let err;\n  const state = this._reporterState;\n\n  const inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  const state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n}\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n", "'use strict';\n\nconst inherits = require('inherits');\nconst Reporter = require('../base/reporter').Reporter;\nconst Buffer = require('safer-buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    Buffer.isBuffer(data.base) &&\n    data.constructor.name === 'DecoderBuffer' &&\n    typeof data.offset === 'number' &&\n    typeof data.length === 'number' &&\n    typeof data.save === 'function' &&\n    typeof data.restore === 'function' &&\n    typeof data.isEmpty === 'function' &&\n    typeof data.readUInt8 === 'function' &&\n    typeof data.skip === 'function' &&\n    typeof data.raw === 'function';\n\n  return isCompatible;\n};\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  const res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!EncoderBuffer.isEncoderBuffer(item))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    data.constructor.name === 'EncoderBuffer' &&\n    typeof data.length === 'number' &&\n    typeof data.join === 'function';\n\n  return isCompatible;\n};\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = Buffer.alloc(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n", "module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n", "'use strict';\n\nconst Reporter = require('../base/reporter').Reporter;\nconst EncoderBuffer = require('../base/buffer').EncoderBuffer;\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst assert = require('minimalistic-assert');\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n\n  state.name = name;\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      const res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  let result = state['default'];\n  let present = true;\n\n  let prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any)\n        save = input.save();\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default'];\n    else\n      return;\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        const state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(\n      false,\n      data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n", "'use strict';\n\n// Helper\nfunction reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n}\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = reverse(exports.tag);\n", "'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n  primitive,\n  cls,\n  content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1;\n  for (let i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  const header = Buffer.alloc(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s.]+/g);\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  let size = 0;\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  const objid = Buffer.alloc(size);\n  let offset = objid.length - 1;\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  let str;\n  const date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getUTCFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getUTCFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    const numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = Buffer.from(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length;\n    if (num.length === 0)\n      size++;\n\n    const out = Buffer.alloc(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0;\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  let size = 1;\n  for (let i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  const out = new Array(size);\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  const state = this._baseState;\n  let i;\n  if (state['default'] === null)\n    return false;\n\n  const data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  let res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n", "'use strict';\n\nconst inherits = require('inherits');\n\nconst DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  const buf = DEREncoder.prototype.encode.call(this, data);\n\n  const p = buf.toString('base64');\n  const out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (let i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n", "'use strict';\n\nconst encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n", "'use strict';\n\nconst inherits = require('inherits');\n\nconst bignum = require('bn.js');\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options);\n  }\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  const state = buffer.save();\n  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer,\n    'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  let len = derDecodeLen(buffer,\n    decodedTag.primitive,\n    'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  const state = buffer.save();\n  const res = this._skipUntilEnd(\n    buffer,\n    'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    const len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    let res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len);\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n  options) {\n  const result = [];\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    const res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    let str = '';\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  let result;\n  const identifiers = [];\n  let ident = 0;\n  let subident = 0;\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  const first = (identifiers[0] / 40) | 0;\n  const second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    let tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  const str = buffer.raw().toString();\n\n  let year;\n  let mon;\n  let day;\n  let hour;\n  let min;\n  let sec;\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0;\n    mon = str.slice(4, 6) | 0;\n    day = str.slice(6, 8) | 0;\n    hour = str.slice(8, 10) | 0;\n    min = str.slice(10, 12) | 0;\n    sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0;\n    mon = str.slice(2, 4) | 0;\n    day = str.slice(4, 6) | 0;\n    hour = str.slice(6, 8) | 0;\n    min = str.slice(8, 10) | 0;\n    sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull() {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  const res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw();\n  let res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  let tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  const cls = der.tagClass[tag >> 6];\n  const primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  const tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  let len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  const num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (let i = 0; i < num; i++) {\n    len <<= 8;\n    const j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n", "'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\n\nconst DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n\n  const label = options.label.toUpperCase();\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n", "'use strict';\n\nconst decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n", "'use strict';\n\nconst encoders = require('./encoders');\nconst decoders = require('./decoders');\nconst inherits = require('inherits');\n\nconst api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n}\n\nEntity.prototype._createNamed = function createNamed(Base) {\n  const name = this.name;\n\n  function Generated(entity) {\n    this._initNamed(entity, name);\n  }\n  inherits(Generated, Base);\n  Generated.prototype._initNamed = function _initNamed(entity, name) {\n    Base.call(this, entity, name);\n  };\n\n  return new Generated(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n", "'use strict';\n\nconst base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n", "'use strict';\n\nconst constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n", "'use strict';\n\nconst asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "'use strict';\n\nfunction getParamSize(keySize) {\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n\treturn result;\n}\n\nvar paramBytesForAlg = {\n\tES256: getParamSize(256),\n\tES384: getParamSize(384),\n\tES512: getParamSize(521)\n};\n\nfunction getParamBytesForAlg(alg) {\n\tvar paramBytes = paramBytesForAlg[alg];\n\tif (paramBytes) {\n\t\treturn paramBytes;\n\t}\n\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nmodule.exports = getParamBytesForAlg;\n", "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\n\nvar MAX_OCTET = 0x80,\n\tCLASS_UNIVERSAL = 0,\n\tPRIMITIVE_BIT = 0x20,\n\tTAG_SEQ = 0x10,\n\tTAG_INT = 0x02,\n\tENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),\n\tENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\n\nfunction base64Url(base64) {\n\treturn base64\n\t\t.replace(/=/g, '')\n\t\t.replace(/\\+/g, '-')\n\t\t.replace(/\\//g, '_');\n}\n\nfunction signatureAsBuffer(signature) {\n\tif (Buffer.isBuffer(signature)) {\n\t\treturn signature;\n\t} else if ('string' === typeof signature) {\n\t\treturn Buffer.from(signature, 'base64');\n\t}\n\n\tthrow new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction derToJose(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\t// the DER encoded param should at most be the param size, plus a padding\n\t// zero, since due to being a signed integer\n\tvar maxEncodedParamLength = paramBytes + 1;\n\n\tvar inputLength = signature.length;\n\n\tvar offset = 0;\n\tif (signature[offset++] !== ENCODED_TAG_SEQ) {\n\t\tthrow new Error('Could not find expected \"seq\"');\n\t}\n\n\tvar seqLength = signature[offset++];\n\tif (seqLength === (MAX_OCTET | 1)) {\n\t\tseqLength = signature[offset++];\n\t}\n\n\tif (inputLength - offset < seqLength) {\n\t\tthrow new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\n\t}\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"r\"');\n\t}\n\n\tvar rLength = signature[offset++];\n\n\tif (inputLength - offset - 2 < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\n\t}\n\n\tif (maxEncodedParamLength < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar rOffset = offset;\n\toffset += rLength;\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"s\"');\n\t}\n\n\tvar sLength = signature[offset++];\n\n\tif (inputLength - offset !== sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\n\t}\n\n\tif (maxEncodedParamLength < sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar sOffset = offset;\n\toffset += sLength;\n\n\tif (offset !== inputLength) {\n\t\tthrow new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\n\t}\n\n\tvar rPadding = paramBytes - rLength,\n\t\tsPadding = paramBytes - sLength;\n\n\tvar dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\n\n\tfor (offset = 0; offset < rPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\n\n\toffset = paramBytes;\n\n\tfor (var o = offset; offset < o + sPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\n\n\tdst = dst.toString('base64');\n\tdst = base64Url(dst);\n\n\treturn dst;\n}\n\nfunction countPadding(buf, start, stop) {\n\tvar padding = 0;\n\twhile (start + padding < stop && buf[start + padding] === 0) {\n\t\t++padding;\n\t}\n\n\tvar needsSign = buf[start + padding] >= MAX_OCTET;\n\tif (needsSign) {\n\t\t--padding;\n\t}\n\n\treturn padding;\n}\n\nfunction joseToDer(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\tvar signatureBytes = signature.length;\n\tif (signatureBytes !== paramBytes * 2) {\n\t\tthrow new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n\t}\n\n\tvar rPadding = countPadding(signature, 0, paramBytes);\n\tvar sPadding = countPadding(signature, paramBytes, signature.length);\n\tvar rLength = paramBytes - rPadding;\n\tvar sLength = paramBytes - sPadding;\n\n\tvar rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n\n\tvar shortLength = rsBytes < MAX_OCTET;\n\n\tvar dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\n\n\tvar offset = 0;\n\tdst[offset++] = ENCODED_TAG_SEQ;\n\tif (shortLength) {\n\t\t// Bit 8 has value \"0\"\n\t\t// bits 7-1 give the length.\n\t\tdst[offset++] = rsBytes;\n\t} else {\n\t\t// Bit 8 of first octet has value \"1\"\n\t\t// bits 7-1 give the number of additional length octets.\n\t\tdst[offset++] = MAX_OCTET\t| 1;\n\t\t// length, base 256\n\t\tdst[offset++] = rsBytes & 0xff;\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = rLength;\n\tif (rPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\toffset += signature.copy(dst, offset, 0, paramBytes);\n\t} else {\n\t\toffset += signature.copy(dst, offset, rPadding, paramBytes);\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = sLength;\n\tif (sPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\tsignature.copy(dst, offset, paramBytes);\n\t} else {\n\t\tsignature.copy(dst, offset, paramBytes + sPadding);\n\t}\n\n\treturn dst;\n}\n\nmodule.exports = {\n\tderToJose: derToJose,\n\tjoseToDer: joseToDer\n};\n", "'use strict'\n\nconst asn = require('asn1.js')\nconst {\n  createHmac,\n  createVerify,\n  createSign,\n  timingSafeEqual,\n  createPublicKey,\n  constants: {\n    RSA_PKCS1_PSS_PADDING,\n    RSA_PSS_SALTLEN_DIGEST,\n    RSA_PKCS1_PADDING,\n    RSA_PSS_SALTLEN_MAX_SIGN,\n    RSA_PSS_SALTLEN_AUTO\n  }\n} = require('crypto')\nlet { sign: directSign, verify: directVerify } = require('crypto')\nconst { joseToDer, derToJose } = require('ecdsa-sig-formatter')\nconst Cache = require('mnemonist/lru-cache')\nconst TokenError = require('./error')\n\nconst useNewCrypto = typeof directSign === 'function'\n\nconst base64UrlMatcher = /[=+/]/g\nconst encoderMap = { '=': '', '+': '-', '/': '_' }\n\nconst privateKeyPemMatcher = /^-----BEGIN(?: (RSA|EC|ENCRYPTED))? PRIVATE KEY-----/\nconst publicKeyPemMatcher = '-----BEGIN PUBLIC KEY-----'\nconst publicKeyX509CertMatcher = '-----BEGIN CERTIFICATE-----'\nconst privateKeysCache = new Cache(1000)\nconst publicKeysCache = new Cache(1000)\n\nconst hsAlgorithms = ['HS256', 'HS384', 'HS512']\nconst esAlgorithms = ['ES256', 'ES384', 'ES512']\nconst rsaAlgorithms = ['RS256', 'RS384', 'RS512', 'PS256', 'PS384', 'PS512']\nconst edAlgorithms = ['EdDSA']\nconst ecCurves = {\n  '1.2.840.10045.3.1.7': { bits: '256', names: ['P-256', 'prime256v1'] },\n  '1.3.132.0.10': { bits: '256', names: ['secp256k1'] },\n  '1.3.132.0.34': { bits: '384', names: ['P-384', 'secp384r1'] },\n  '1.3.132.0.35': { bits: '512', names: ['P-521', 'secp521r1'] }\n}\n\n/* istanbul ignore next */\nif (!useNewCrypto) {\n  directSign = function(alg, data, options) {\n    if (typeof alg === 'undefined') {\n      throw new TokenError(TokenError.codes.signError, 'EdDSA algorithms are not supported by your Node.js version.')\n    }\n\n    return createSign(alg)\n      .update(data)\n      .sign(options)\n  }\n}\n\nconst PrivateKey = asn.define('PrivateKey', function() {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm')\n      .seq()\n      .obj(\n        this.key('algorithm').objid(),\n        this.key('parameters')\n          .optional()\n          .objid()\n      )\n  )\n})\n\nconst PublicKey = asn.define('PublicKey', function() {\n  this.seq().obj(\n    this.key('algorithm')\n      .seq()\n      .obj(\n        this.key('algorithm').objid(),\n        this.key('parameters')\n          .optional()\n          .objid()\n      )\n  )\n})\n\nconst ECPrivateKey = asn.define('ECPrivateKey', function() {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters')\n      .explicit(0)\n      .optional()\n      .choice({ namedCurve: this.objid() })\n  )\n})\n\nfunction base64UrlReplacer(c) {\n  return encoderMap[c]\n}\n\nfunction cacheSet(cache, key, value, error) {\n  cache.set(key, [value, error])\n  return value || error\n}\n\nfunction performDetectPrivateKeyAlgorithm(key) {\n  if (key.includes(publicKeyPemMatcher) || key.includes(publicKeyX509CertMatcher)) {\n    throw new TokenError(TokenError.codes.invalidKey, 'Public keys are not supported for signing.')\n  }\n\n  const pemData = key.trim().match(privateKeyPemMatcher)\n\n  if (!pemData) {\n    return 'HS256'\n  }\n\n  let keyData\n  let oid\n  let curveId\n\n  switch (pemData[1]) {\n    case 'RSA': // pkcs1 format - Can only be RSA key\n      return 'RS256'\n    case 'EC': // sec1 format - Can only be a EC key\n      keyData = ECPrivateKey.decode(key, 'pem', { label: 'EC PRIVATE KEY' })\n      curveId = keyData.parameters.value.join('.')\n      break\n    case 'ENCRYPTED': // Can be either RSA or EC key - we'll used the supplied algorithm\n      return 'ENCRYPTED'\n    default:\n      // pkcs8\n      keyData = PrivateKey.decode(key, 'pem', { label: 'PRIVATE KEY' })\n      oid = keyData.algorithm.algorithm.join('.')\n\n      switch (oid) {\n        case '1.2.840.113549.1.1.1': // RSA\n          return 'RS256'\n        case '1.2.840.10045.2.1': // EC\n          curveId = keyData.algorithm.parameters.join('.')\n          break\n        case '1.3.101.112': // Ed25519\n        case '1.3.101.113': // Ed448\n          return 'EdDSA'\n        default:\n          throw new TokenError(TokenError.codes.invalidKey, `Unsupported PEM PCKS8 private key with OID ${oid}.`)\n      }\n  }\n\n  const curve = ecCurves[curveId]\n\n  if (!curve) {\n    throw new TokenError(TokenError.codes.invalidKey, `Unsupported EC private key with curve ${curveId}.`)\n  }\n\n  return `ES${curve.bits}`\n}\n\nfunction performDetectPublicKeyAlgorithms(key) {\n  if (key.match(privateKeyPemMatcher)) {\n    throw new TokenError(TokenError.codes.invalidKey, 'Private keys are not supported for verifying.')\n  } else if (!key.includes(publicKeyPemMatcher) && !key.includes(publicKeyX509CertMatcher)) {\n    // Not a PEM, assume a plain secret\n    return hsAlgorithms\n  }\n\n  // if the key is a X509 cert we need to convert it\n  if (key.includes(publicKeyX509CertMatcher)) {\n    key = createPublicKey(key).export({ type: 'spki', format: 'pem' })\n  }\n\n  const keyData = PublicKey.decode(key, 'pem', { label: 'PUBLIC KEY' })\n  const oid = keyData.algorithm.algorithm.join('.')\n  let curveId\n\n  switch (oid) {\n    case '1.2.840.113549.1.1.1': // RSA\n      return rsaAlgorithms\n    case '1.2.840.10045.2.1': // EC\n      curveId = keyData.algorithm.parameters.join('.')\n      break\n    case '1.3.101.112': // Ed25519\n    case '1.3.101.113': // Ed448\n      return ['EdDSA']\n    default:\n      throw new TokenError(TokenError.codes.invalidKey, `Unsupported PEM PCKS8 public key with OID ${oid}.`)\n  }\n\n  const curve = ecCurves[curveId]\n\n  if (!curve) {\n    throw new TokenError(TokenError.codes.invalidKey, `Unsupported EC public key with curve ${curveId}.`)\n  }\n\n  return [`ES${curve.bits}`]\n}\n\nfunction detectPrivateKeyAlgorithm(key, providedAlgorithm) {\n  if (key instanceof Buffer) {\n    key = key.toString('utf-8')\n  } else if (typeof key !== 'string') {\n    throw new TokenError(TokenError.codes.invalidKey, 'The private key must be a string or a buffer.')\n  }\n\n  // Check cache first\n  const [cached, error] = privateKeysCache.get(key) || []\n\n  if (cached) {\n    return cached\n  } else if (error) {\n    throw error\n  }\n\n  // Try detecting\n  try {\n    const detectedAlgorithm = performDetectPrivateKeyAlgorithm(key)\n\n    if (detectedAlgorithm === 'ENCRYPTED') {\n      return cacheSet(privateKeysCache, key, providedAlgorithm)\n    }\n    return cacheSet(privateKeysCache, key, detectedAlgorithm)\n  } catch (e) {\n    throw cacheSet(privateKeysCache, key, null, TokenError.wrap(e, TokenError.codes.invalidKey, 'Unsupported PEM private key.'))\n  }\n}\n\nfunction detectPublicKeyAlgorithms(key) {\n  if (!key) {\n    return 'none'\n  }\n\n  // Check cache first\n  const [cached, error] = publicKeysCache.get(key) || []\n\n  if (cached) {\n    return cached\n  } else if (error) {\n    throw error\n  }\n\n  // Try detecting\n  try {\n    if (key instanceof Buffer) {\n      key = key.toString('utf-8')\n    } else if (typeof key !== 'string') {\n      throw new TokenError(TokenError.codes.invalidKey, 'The public key must be a string or a buffer.')\n    }\n\n    return cacheSet(publicKeysCache, key, performDetectPublicKeyAlgorithms(key))\n  } catch (e) {\n    throw cacheSet(\n      publicKeysCache,\n      key,\n      null,\n      TokenError.wrap(e, TokenError.codes.invalidKey, 'Unsupported PEM public key.')\n    )\n  }\n}\n\nfunction createSignature(algorithm, key, input) {\n  try {\n    const type = algorithm.slice(0, 2)\n    const alg = `sha${algorithm.slice(2)}`\n\n    let raw\n    let options\n\n    switch (type) {\n      case 'HS':\n        raw = createHmac(alg, key)\n          .update(input)\n          .digest('base64')\n        break\n      case 'ES':\n        raw = derToJose(directSign(alg, Buffer.from(input, 'utf-8'), key), algorithm).toString('base64')\n        break\n      case 'RS':\n      case 'PS':\n        options = {\n          key,\n          padding: RSA_PKCS1_PADDING,\n          saltLength: RSA_PSS_SALTLEN_MAX_SIGN\n        }\n\n        if (type === 'PS') {\n          options.padding = RSA_PKCS1_PSS_PADDING\n          options.saltLength = RSA_PSS_SALTLEN_DIGEST\n        }\n\n        raw = createSign(alg)\n          .update(input)\n          .sign(options)\n          .toString('base64')\n        break\n      case 'Ed':\n        raw = directSign(undefined, Buffer.from(input, 'utf-8'), key).toString('base64')\n    }\n\n    return raw.replace(base64UrlMatcher, base64UrlReplacer)\n  } catch (e) {\n    /* istanbul ignore next */\n    throw new TokenError(TokenError.codes.signError, 'Cannot create the signature.', { originalError: e })\n  }\n}\n\nfunction verifySignature(algorithm, key, input, signature) {\n  try {\n    const type = algorithm.slice(0, 2)\n    const alg = `SHA${algorithm.slice(2)}`\n\n    signature = Buffer.from(signature, 'base64')\n\n    if (type === 'HS') {\n      try {\n        return timingSafeEqual(\n          createHmac(alg, key)\n            .update(input)\n            .digest(),\n          signature\n        )\n      } catch (e) {\n        return false\n      }\n    } else if (type === 'Ed') {\n      // Check if supported on Node 10\n      /* istanbul ignore next */\n      if (typeof directVerify === 'function') {\n        return directVerify(undefined, Buffer.from(input, 'utf-8'), key, signature)\n      } else {\n        throw new TokenError(TokenError.codes.signError, 'EdDSA algorithms are not supported by your Node.js version.')\n      }\n    }\n\n    const options = { key, padding: RSA_PKCS1_PADDING, saltLength: RSA_PSS_SALTLEN_AUTO }\n\n    if (type === 'PS') {\n      options.padding = RSA_PKCS1_PSS_PADDING\n      options.saltLength = RSA_PSS_SALTLEN_DIGEST\n    } else if (type === 'ES') {\n      signature = joseToDer(signature, algorithm)\n    }\n\n    return createVerify('RSA-' + alg)\n      .update(input)\n      .verify(options, signature)\n  } catch (e) {\n    /* istanbul ignore next */\n    throw new TokenError(TokenError.codes.verifyError, 'Cannot verify the signature.', { originalError: e })\n  }\n}\n\nmodule.exports = {\n  useNewCrypto,\n  base64UrlMatcher,\n  base64UrlReplacer,\n  hsAlgorithms,\n  rsaAlgorithms,\n  esAlgorithms,\n  edAlgorithms,\n  detectPrivateKeyAlgorithm,\n  detectPublicKeyAlgorithms,\n  createSignature,\n  verifySignature\n}\n", "'use strict'\n\nconst { createHash } = require('crypto')\nconst algorithmMatcher = /\"alg\"\\s*:\\s*\"[HERP]S(256|384)\"/m\nconst edAlgorithmMatcher = /\"alg\"\\s*:\\s*\"EdDSA\"/m\nconst ed448CurveMatcher = /\"crv\"\\s*:\\s*\"Ed448\"/m\n\nfunction getAsyncKey(handler, header, callback) {\n  const result = handler(header, callback)\n\n  if (result && typeof result.then === 'function') {\n    result\n      .then(key => {\n        // This avoids the callback to be thrown twice if callback throws\n        process.nextTick(() => callback(null, key))\n      })\n      .catch(callback)\n  }\n}\n\nfunction ensurePromiseCallback(callback) {\n  if (typeof callback === 'function') {\n    return [callback]\n  }\n\n  let promiseResolve, promiseReject\n\n  const promise = new Promise((resolve, reject) => {\n    promiseResolve = resolve\n    promiseReject = reject\n  })\n\n  return [\n    function(err, token) {\n      if (err) {\n        return promiseReject(err)\n      }\n\n      return promiseResolve(token)\n    },\n    promise\n  ]\n}\n\nfunction hashToken(token) {\n  const rawHeader = token.split('.', 1)[0]\n  const header = Buffer.from(rawHeader, 'base64').toString('utf-8')\n  let hasher = null\n\n  /* istanbul ignore next */\n  if (header.match(edAlgorithmMatcher) && header.match(ed448CurveMatcher)) {\n    hasher = createHash('shake256', { outputLength: 114 })\n  } else {\n    const mo = header.match(algorithmMatcher)\n    hasher = createHash(`sha${mo ? mo[1] : '512'}`)\n  }\n\n  return hasher.update(token).digest('hex')\n}\n\nmodule.exports = {\n  getAsyncKey,\n  ensurePromiseCallback,\n  hashToken\n}\n", "'use strict'\n\nconst { createPublicKey, createSecretKey } = require('crypto')\nconst Cache = require('mnemonist/lru-cache')\n\nconst { useNewCrypto, hsAlgorithms, verifySignature, detectPublicKeyAlgorithms } = require('./crypto')\nconst createDecoder = require('./decoder')\nconst TokenError = require('./error')\nconst { getAsyncKey, ensurePromiseCallback, hashToken } = require('./utils')\n\nconst defaultCacheSize = 1000\n\nfunction exactStringClaimMatcher(allowed, actual) {\n  return allowed === actual\n}\n\nfunction checkAreCompatibleAlgorithms(expected, actual) {\n  let valid = false\n\n  for (const expectedAlg of expected) {\n    valid = actual.indexOf(expectedAlg) !== -1\n\n    // if at least one of the expected algorithms is compatible we're done\n    if (valid) {\n      break\n    }\n  }\n\n  if (!valid) {\n    throw new TokenError(\n      TokenError.codes.invalidKey,\n      `Invalid public key provided for algorithms ${expected.join(', ')}.`\n    )\n  }\n}\n\nfunction prepareKeyOrSecret(key, isSecret) {\n  if (typeof key === 'string') {\n    key = Buffer.from(key, 'utf-8')\n  }\n\n  // Only on Node 12 - Create a key object\n  /* istanbul ignore next */\n  if (useNewCrypto) {\n    key = isSecret ? createSecretKey(key) : createPublicKey(key)\n  }\n\n  return key\n}\n\nfunction ensureStringClaimMatcher(raw) {\n  if (!Array.isArray(raw)) {\n    raw = [raw]\n  }\n\n  return raw\n    .filter(r => r)\n    .map(r => {\n      if (r && typeof r.test === 'function') {\n        return r\n      }\n\n      return { test: exactStringClaimMatcher.bind(null, r) }\n    })\n}\n\nfunction createCache(rawSize) {\n  const size = parseInt(rawSize === true ? defaultCacheSize : rawSize, 10)\n  return size > 0 ? new Cache(size) : null\n}\n\nfunction cacheSet(\n  { cache, token, cacheTTL, payload, ignoreExpiration, ignoreNotBefore, maxAge, clockTimestamp, clockTolerance },\n  value\n) {\n  if (!cache) {\n    return value\n  }\n\n  const cacheValue = [value, 0, 0]\n  const hasIat = payload && typeof payload.iat === 'number'\n\n  // Add time range of the token\n  if (hasIat) {\n    cacheValue[1] = !ignoreNotBefore && typeof payload.nbf === 'number' ? (payload.nbf * 1000 - clockTolerance) : 0\n\n    if (!ignoreExpiration) {\n      if (typeof payload.exp === 'number') {\n        cacheValue[2] = payload.exp * 1000 + clockTolerance\n      } else if (maxAge) {\n        cacheValue[2] = payload.iat * 1000 + maxAge + clockTolerance\n      }\n    }\n  }\n\n  // The maximum TTL for the token cannot exceed the configured cacheTTL\n  const maxTTL = (clockTimestamp || Date.now()) + clockTolerance + cacheTTL\n  cacheValue[2] = cacheValue[2] === 0 ? maxTTL : Math.min(cacheValue[2], maxTTL)\n\n  cache.set(hashToken(token), cacheValue)\n\n  return value\n}\n\nfunction handleCachedResult(cached, callback, promise) {\n  if (cached instanceof TokenError) {\n    if (!callback) {\n      throw cached\n    }\n\n    callback(cached)\n  } else {\n    if (!callback) {\n      return cached\n    }\n\n    callback(null, cached)\n  }\n\n  return promise\n}\n\nfunction validateAlgorithmAndSignature(input, header, signature, key, allowedAlgorithms) {\n  // According to the signature and key, check with algorithms are supported\n  const algorithms = allowedAlgorithms\n\n  // Verify the token is allowed\n  if (!algorithms.includes(header.alg)) {\n    throw new TokenError(TokenError.codes.invalidAlgorithm, 'The token algorithm is invalid.')\n  }\n\n  // Verify the signature, if present\n  if (signature && !verifySignature(header.alg, key, input, signature)) {\n    throw new TokenError(TokenError.codes.invalidSignature, 'The token signature is invalid.')\n  }\n}\n\nfunction validateClaimType(values, claim, array, type) {\n  const typeFailureMessage = array\n    ? `The ${claim} claim must be a ${type} or an array of ${type}s.`\n    : `The ${claim} claim must be a ${type}.`\n\n  if (values.map(v => typeof v).some(t => t !== type)) {\n    throw new TokenError(TokenError.codes.invalidClaimType, typeFailureMessage)\n  }\n}\n\nfunction validateClaimValues(values, claim, allowed, arrayValue) {\n  const failureMessage = arrayValue\n    ? `None of ${claim} claim values are allowed.`\n    : `The ${claim} claim value is not allowed.`\n\n  if (!values.some(v => allowed.some(a => a.test(v)))) {\n    throw new TokenError(TokenError.codes.invalidClaimValue, failureMessage)\n  }\n}\n\nfunction validateClaimDateValue(value, modifier, now, greater, errorCode, errorVerb) {\n  const adjusted = value * 1000 + (modifier || 0)\n  const valid = greater ? now >= adjusted : now <= adjusted\n\n  if (!valid) {\n    throw new TokenError(TokenError.codes[errorCode], `The token ${errorVerb} at ${new Date(adjusted).toISOString()}.`)\n  }\n}\n\nfunction verifyToken(\n  key,\n  { input, header, payload, signature },\n  { validators, allowedAlgorithms, checkTyp, clockTimestamp, clockTolerance, requiredClaims }\n) {\n  // Verify the key\n  /* istanbul ignore next */\n  const hasKey = key instanceof Buffer ? key.length : !!key\n\n  if (hasKey && !signature) {\n    throw new TokenError(TokenError.codes.missingSignature, 'The token signature is missing.')\n  } else if (!hasKey && signature) {\n    throw new TokenError(TokenError.codes.missingKey, 'The key option is missing.')\n  }\n\n  validateAlgorithmAndSignature(input, header, signature, key, allowedAlgorithms)\n\n  // Verify typ\n  if (checkTyp) {\n    if (typeof header.typ !== 'string' || checkTyp !== header.typ.toLowerCase().replace(/^application\\//, '')) {\n      throw new TokenError(TokenError.codes.invalidType, 'Invalid typ.')\n    }\n  }\n\n  // Verify the payload\n  const now = clockTimestamp || Date.now()\n\n  for (const validator of validators) {\n    const { type, claim, allowed, array, modifier, greater, errorCode, errorVerb } = validator\n    const value = payload[claim]\n    const arrayValue = Array.isArray(value)\n    const values = arrayValue ? value : [value]\n\n    // Check if the claim is marked as required before skipping it\n    if (!(claim in payload)) {\n      if (requiredClaims && requiredClaims.includes(claim)) {\n        throw new TokenError(TokenError.codes.missingRequiredClaim, `The ${claim} claim is required.`)\n      }\n\n      continue\n    }\n\n    // Validate type\n    validateClaimType(values, claim, array, type === 'date' ? 'number' : 'string')\n\n    if (type === 'date') {\n      validateClaimDateValue(value, modifier, now, greater, errorCode, errorVerb)\n    } else {\n      validateClaimValues(values, claim, allowed, arrayValue)\n    }\n  }\n}\n\nfunction verify(\n  {\n    key,\n    allowedAlgorithms,\n    complete,\n    cacheTTL,\n    checkTyp,\n    clockTimestamp,\n    clockTolerance,\n    ignoreExpiration,\n    ignoreNotBefore,\n    maxAge,\n    isAsync,\n    validators,\n    decode,\n    cache,\n    requiredClaims\n  },\n  token,\n  cb\n) {\n  const [callback, promise] = isAsync ? ensurePromiseCallback(cb) : []\n\n  const cacheContext = {\n    cache,\n    token,\n    cacheTTL,\n    payload: undefined,\n    ignoreExpiration,\n    ignoreNotBefore,\n    maxAge,\n    clockTimestamp,\n    clockTolerance\n  }\n\n  // Check the cache\n  if (cache) {\n    const [value, min, max] = cache.get(hashToken(token)) || [undefined, 0, 0]\n    const now = clockTimestamp || Date.now()\n\n    // Validate time range\n    if (typeof value !== 'undefined' &&\n      (min === 0 || (now < min && value.code === 'FAST_JWT_INACTIVE') || (now >= min && value.code !== 'FAST_JWT_INACTIVE')) &&\n      (max === 0 || now <= max)) {\n      // Cache hit\n      return handleCachedResult(value, callback, promise)\n    }\n  }\n\n  /*\n    As very first thing, decode the token - If invalid, everything else is useless.\n    We don't involve cache here since it's much slower.\n  */\n  let decoded\n  try {\n    decoded = decode(token)\n  } catch (e) {\n    if (callback) {\n      callback(e)\n      return promise\n    }\n\n    throw e\n  }\n\n  const { header, payload, signature } = decoded\n  cacheContext.payload = payload\n  const validationContext = { validators, allowedAlgorithms, checkTyp, clockTimestamp, clockTolerance, requiredClaims }\n\n  // We have the key\n  if (!callback) {\n    try {\n      verifyToken(key, decoded, validationContext)\n\n      return cacheSet(cacheContext, complete ? { header, payload, signature } : payload)\n    } catch (e) {\n      throw cacheSet(cacheContext, e)\n    }\n  }\n\n  // Get the key asynchronously\n  getAsyncKey(key, header, (err, currentKey) => {\n    if (err) {\n      return callback(\n        cacheSet(cacheContext, TokenError.wrap(err, TokenError.codes.keyFetchingError, 'Cannot fetch key.'))\n      )\n    }\n\n    if (typeof currentKey === 'string') {\n      currentKey = Buffer.from(currentKey, 'utf-8')\n    } else if (!(currentKey instanceof Buffer)) {\n      return callback(\n        cacheSet(\n          cacheContext,\n          new TokenError(\n            TokenError.codes.keyFetchingError,\n            'The key returned from the callback must be a string or a buffer containing a secret or a public key.'\n          )\n        )\n      )\n    }\n\n    try {\n      // Detect the private key - If the algorithms were known, just verify they match, otherwise assign them\n      const availableAlgorithms = detectPublicKeyAlgorithms(currentKey)\n\n      if (validationContext.allowedAlgorithms.length) {\n        checkAreCompatibleAlgorithms(allowedAlgorithms, availableAlgorithms)\n      } else {\n        validationContext.allowedAlgorithms = availableAlgorithms\n      }\n\n      currentKey = prepareKeyOrSecret(currentKey, availableAlgorithms[0] === hsAlgorithms[0])\n\n      verifyToken(currentKey, decoded, validationContext)\n    } catch (e) {\n      return callback(cacheSet(cacheContext, e))\n    }\n\n    callback(null, cacheSet(cacheContext, complete ? { header, payload, signature } : payload))\n  })\n\n  return promise\n}\n\nmodule.exports = function createVerifier(options) {\n  let {\n    key,\n    algorithms: allowedAlgorithms,\n    complete,\n    cache: cacheSize,\n    cacheTTL,\n    checkTyp,\n    clockTimestamp,\n    clockTolerance,\n    ignoreExpiration,\n    ignoreNotBefore,\n    maxAge,\n    allowedJti,\n    allowedAud,\n    allowedIss,\n    allowedSub,\n    allowedNonce,\n    requiredClaims\n  } = { cacheTTL: 600000, clockTolerance: 0, ...options }\n\n  // Validate options\n  if (!Array.isArray(allowedAlgorithms)) {\n    allowedAlgorithms = []\n  }\n\n  const keyType = typeof key\n  if (keyType !== 'string' && keyType !== 'object' && keyType !== 'function') {\n    throw new TokenError(\n      TokenError.codes.INVALID_OPTION,\n      'The key option must be a string, a buffer or a function returning the algorithm secret or public key.'\n    )\n  }\n\n  if (key && keyType !== 'function') {\n    // Detect the private key - If the algorithms were known, just verify they match, otherwise assign them\n    const availableAlgorithms = detectPublicKeyAlgorithms(key)\n\n    if (allowedAlgorithms.length) {\n      checkAreCompatibleAlgorithms(allowedAlgorithms, availableAlgorithms)\n    } else {\n      allowedAlgorithms = availableAlgorithms\n    }\n\n    key = prepareKeyOrSecret(key, availableAlgorithms[0] === hsAlgorithms[0])\n  }\n\n  if (clockTimestamp && (typeof clockTimestamp !== 'number' || clockTimestamp < 0)) {\n    throw new TokenError(TokenError.codes.invalidOption, 'The clockTimestamp option must be a positive number.')\n  }\n\n  if (clockTolerance && (typeof clockTolerance !== 'number' || clockTolerance < 0)) {\n    throw new TokenError(TokenError.codes.invalidOption, 'The clockTolerance option must be a positive number.')\n  }\n\n  if (cacheTTL && (typeof cacheTTL !== 'number' || cacheTTL < 0)) {\n    throw new TokenError(TokenError.codes.invalidOption, 'The cacheTTL option must be a positive number.')\n  }\n\n  if (requiredClaims && !Array.isArray(requiredClaims)) {\n    throw new TokenError(TokenError.codes.invalidOption, 'The requiredClaims option must be an array.')\n  }\n\n  // Add validators\n  const validators = []\n\n  if (!ignoreNotBefore) {\n    validators.push({ type: 'date', claim: 'nbf', errorCode: 'inactive', errorVerb: 'will be active', greater: true, modifier: -clockTolerance })\n  }\n\n  if (!ignoreExpiration) {\n    validators.push({ type: 'date', claim: 'exp', errorCode: 'expired', errorVerb: 'has expired', modifier: +clockTolerance })\n  }\n\n  if (typeof maxAge === 'number') {\n    validators.push({ type: 'date', claim: 'iat', errorCode: 'expired', errorVerb: 'has expired', modifier: maxAge })\n  }\n\n  if (allowedJti) {\n    validators.push({ type: 'string', claim: 'jti', allowed: ensureStringClaimMatcher(allowedJti) })\n  }\n\n  if (allowedAud) {\n    validators.push({ type: 'string', claim: 'aud', allowed: ensureStringClaimMatcher(allowedAud), array: true })\n  }\n\n  if (allowedIss) {\n    validators.push({ type: 'string', claim: 'iss', allowed: ensureStringClaimMatcher(allowedIss) })\n  }\n\n  if (allowedSub) {\n    validators.push({ type: 'string', claim: 'sub', allowed: ensureStringClaimMatcher(allowedSub) })\n  }\n\n  if (allowedNonce) {\n    validators.push({ type: 'string', claim: 'nonce', allowed: ensureStringClaimMatcher(allowedNonce) })\n  }\n\n  let normalizedTyp = null\n  if (checkTyp) {\n    normalizedTyp = checkTyp.toLowerCase().replace(/^application\\//, '')\n  }\n\n  const context = {\n    key,\n    allowedAlgorithms,\n    complete,\n    cacheTTL,\n    checkTyp: normalizedTyp,\n    clockTimestamp,\n    clockTolerance,\n    ignoreExpiration,\n    ignoreNotBefore,\n    maxAge,\n    isAsync: keyType === 'function',\n    validators,\n    decode: createDecoder({ complete: true }),\n    cache: createCache(cacheSize),\n    requiredClaims\n  }\n\n  // Return the verifier\n  const verifier = verify.bind(null, context)\n  verifier.cache = context.cache\n  return verifier\n}\n", "'use strict'\n\nconst {\n  base64UrlMatcher,\n  base64UrlReplacer,\n  useNewCrypto,\n  hsAlgorithms,\n  esAlgorithms,\n  rsaAlgorithms,\n  edAlgorithms,\n  detectPrivateKeyAlgorithm,\n  createSignature\n} = require('./crypto')\nconst TokenError = require('./error')\nconst { getAsyncKey, ensurePromiseCallback } = require('./utils')\nconst { createPrivateKey, createSecretKey } = require('crypto')\n\nconst supportedAlgorithms = Array.from(\n  new Set([...hsAlgorithms, ...esAlgorithms, ...rsaAlgorithms, ...edAlgorithms, 'none'])\n).join(', ')\n\nfunction checkIsCompatibleAlgorithm(expected, actual) {\n  const expectedType = expected.slice(0, 2)\n  const actualType = actual.slice(0, 2)\n\n  let valid = true // We accept everything for HS\n\n  // If the key is passphrase encrypted (actual === \"ENCRYPTED\") only RS and ES algos are supported\n  if (expectedType === 'RS' || expectedType === 'PS') {\n    // RS and PS use same keys\n    valid = actualType === 'RS' || (expectedType === 'RS' && actual === 'ENCRYPTED')\n  } else if (expectedType === 'ES' || expectedType === 'Ed') {\n    // ES and Ed must match\n    valid = expectedType === actualType || (expectedType === 'ES' && actual === 'ENCRYPTED')\n  }\n\n  if (!valid) {\n    throw new TokenError(TokenError.codes.invalidKey, `Invalid private key provided for algorithm ${expected}.`)\n  }\n}\n\nfunction prepareKeyOrSecret(key, algorithm) {\n  if (typeof key === 'string') {\n    key = Buffer.from(key, 'utf-8')\n  }\n\n  // Only on Node 12 - Create a key object\n  /* istanbul ignore next */\n  if (useNewCrypto) {\n    key = algorithm[0] === 'H' ? createSecretKey(key) : createPrivateKey(key)\n  }\n\n  return key\n}\n\nfunction sign(\n  {\n    key,\n    algorithm,\n    noTimestamp,\n    mutatePayload,\n    clockTimestamp,\n    expiresIn,\n    notBefore,\n    kid,\n    typ,\n    isAsync,\n    additionalHeader,\n    fixedPayload\n  },\n  payload,\n  cb\n) {\n  const [callback, promise] = isAsync ? ensurePromiseCallback(cb) : []\n\n  // Validate payload\n  if (typeof payload !== 'object') {\n    throw new TokenError(TokenError.codes.invalidType, 'The payload must be an object.')\n  }\n\n  if (payload.exp && (!Number.isInteger(payload.exp) || payload.exp < 0)) {\n    throw new TokenError(TokenError.codes.invalidClaimValue, 'The exp claim must be a positive integer.')\n  }\n\n  // Prepare the header\n  const header = {\n    alg: algorithm,\n    typ: typ || 'JWT',\n    kid,\n    ...additionalHeader\n  }\n\n  // Prepare the payload\n  let encodedPayload = ''\n\n  // Add claims\n  const iat = payload.iat * 1000 || clockTimestamp || Date.now()\n\n  const finalPayload = {\n    ...payload,\n    ...fixedPayload,\n    iat: noTimestamp ? undefined : Math.floor(iat / 1000),\n    exp: payload.exp ? payload.exp : expiresIn ? Math.floor((iat + expiresIn) / 1000) : undefined,\n    nbf: notBefore ? Math.floor((iat + notBefore) / 1000) : undefined\n  }\n\n  if (mutatePayload) {\n    Object.assign(payload, finalPayload)\n  }\n\n  encodedPayload = Buffer.from(JSON.stringify(finalPayload), 'utf-8')\n    .toString('base64')\n    .replace(base64UrlMatcher, base64UrlReplacer)\n\n  // We have the key\n  if (!callback) {\n    const encodedHeader = Buffer.from(JSON.stringify(header), 'utf-8')\n      .toString('base64')\n      .replace(base64UrlMatcher, base64UrlReplacer)\n\n    const input = encodedHeader + '.' + encodedPayload\n    const signature = algorithm === 'none' ? '' : createSignature(algorithm, key, input)\n\n    return input + '.' + signature\n  }\n\n  // Get the key asynchronously\n  getAsyncKey(key, header, (err, currentKey) => {\n    if (err) {\n      const error = TokenError.wrap(err, TokenError.codes.keyFetchingError, 'Cannot fetch key.')\n      return callback(error)\n    }\n\n    if (typeof currentKey === 'string') {\n      currentKey = Buffer.from(currentKey, 'utf-8')\n    } else if (!(currentKey instanceof Buffer)) {\n      return callback(\n        new TokenError(\n          TokenError.codes.keyFetchingError,\n          'The key returned from the callback must be a string or a buffer containing a secret or a private key.'\n        )\n      )\n    }\n\n    let token\n    try {\n      // Detect the private key - If the algorithm was known, just verify they match, otherwise assign it\n      const availableAlgorithm = detectPrivateKeyAlgorithm(currentKey, algorithm)\n\n      if (algorithm) {\n        checkIsCompatibleAlgorithm(algorithm, availableAlgorithm)\n      } else {\n        header.alg = algorithm = availableAlgorithm\n      }\n\n      currentKey = prepareKeyOrSecret(currentKey, algorithm)\n\n      const encodedHeader = Buffer.from(JSON.stringify(header), 'utf-8')\n        .toString('base64')\n        .replace(base64UrlMatcher, base64UrlReplacer)\n\n      const input = encodedHeader + '.' + encodedPayload\n      token = input + '.' + createSignature(algorithm, currentKey, input)\n    } catch (e) {\n      return callback(e)\n    }\n\n    callback(null, token)\n  })\n\n  return promise\n}\n\nmodule.exports = function createSigner(options) {\n  let {\n    key,\n    algorithm,\n    noTimestamp,\n    mutatePayload,\n    clockTimestamp,\n    expiresIn,\n    notBefore,\n    jti,\n    aud,\n    iss,\n    sub,\n    nonce,\n    kid,\n    typ,\n    header: additionalHeader\n  } = { clockTimestamp: 0, ...options }\n\n  // Validate options\n  if (\n    algorithm &&\n    algorithm !== 'none' &&\n    !hsAlgorithms.includes(algorithm) &&\n    !esAlgorithms.includes(algorithm) &&\n    !rsaAlgorithms.includes(algorithm) &&\n    !edAlgorithms.includes(algorithm)\n  ) {\n    throw new TokenError(\n      TokenError.codes.invalidOption,\n      `The algorithm option must be one of the following values: ${supportedAlgorithms}.`\n    )\n  }\n\n  const keyType = typeof key\n  const isKeyPasswordProtected = keyType === 'object' && key && key.key && key.passphrase\n\n  if (algorithm === 'none') {\n    if (key) {\n      throw new TokenError(\n        TokenError.codes.invalidOption,\n        'The key option must not be provided when the algorithm option is \"none\".'\n      )\n    }\n  } else if (\n    !key ||\n    (keyType !== 'string' && !(key instanceof Buffer) && keyType !== 'function' && !isKeyPasswordProtected)\n  ) {\n    throw new TokenError(\n      TokenError.codes.invalidOption,\n      'The key option must be a string, a buffer, an object containing key/passphrase properties or a function returning the algorithm secret or private key.'\n    )\n  } else if (isKeyPasswordProtected && !algorithm) {\n    throw new TokenError(\n      TokenError.codes.invalidAlgorithm,\n      'When using password protected key you must provide the algorithm option.'\n    )\n  }\n\n  // Convert the key to a string when not a function, in order to be able to detect\n  if (key && keyType !== 'function') {\n    // Detect the private key - If the algorithm was known, just verify they match, otherwise assign it\n    const availableAlgorithm = detectPrivateKeyAlgorithm(isKeyPasswordProtected ? key.key : key, algorithm)\n\n    if (algorithm) {\n      checkIsCompatibleAlgorithm(algorithm, availableAlgorithm)\n    } else {\n      algorithm = availableAlgorithm\n    }\n\n    key = prepareKeyOrSecret(key, algorithm)\n  }\n\n  if (expiresIn && (typeof expiresIn !== 'number' || expiresIn < 0)) {\n    throw new TokenError(TokenError.codes.invalidOption, 'The expiresIn option must be a positive number.')\n  }\n\n  if (notBefore && (typeof notBefore !== 'number' || notBefore < 0)) {\n    throw new TokenError(TokenError.codes.invalidOption, 'The notBefore option must be a positive number.')\n  }\n\n  if (clockTimestamp && (typeof clockTimestamp !== 'number' || clockTimestamp < 0)) {\n    throw new TokenError(TokenError.codes.invalidOption, 'The clockTimestamp option must be a positive number.')\n  }\n\n  if (jti && typeof jti !== 'string') {\n    throw new TokenError(TokenError.codes.invalidOption, 'The jti option must be a string.')\n  }\n\n  if (aud && typeof aud !== 'string' && !Array.isArray(aud)) {\n    throw new TokenError(TokenError.codes.invalidOption, 'The aud option must be a string or an array of strings.')\n  }\n\n  if (iss && typeof iss !== 'string') {\n    throw new TokenError(TokenError.codes.invalidOption, 'The iss option must be a string.')\n  }\n\n  if (sub && typeof sub !== 'string') {\n    throw new TokenError(TokenError.codes.invalidOption, 'The sub option must be a string.')\n  }\n\n  if (nonce && typeof nonce !== 'string') {\n    throw new TokenError(TokenError.codes.invalidOption, 'The nonce option must be a string.')\n  }\n\n  if (kid && typeof kid !== 'string') {\n    throw new TokenError(TokenError.codes.invalidOption, 'The kid option must be a string.')\n  }\n\n  if (additionalHeader && typeof additionalHeader !== 'object') {\n    throw new TokenError(TokenError.codes.invalidOption, 'The header option must be a object.')\n  }\n\n  const fpo = { jti, aud, iss, sub, nonce }\n  const fixedPayload = Object.keys(fpo).reduce((obj, key) => {\n    return fpo[key] !== undefined ? Object.assign(obj, { [key]: fpo[key] }) : obj\n  }, {})\n\n  // Return the signer\n  const context = {\n    key,\n    algorithm,\n    noTimestamp,\n    mutatePayload,\n    clockTimestamp,\n    expiresIn,\n    notBefore,\n    kid,\n    typ,\n    isAsync: keyType === 'function',\n    additionalHeader,\n    fixedPayload\n  }\n\n  return sign.bind(null, context)\n}\n", "'use strict'\n\nconst TokenError = require('./error')\nconst createDecoder = require('./decoder')\nconst createVerifier = require('./verifier')\nconst createSigner = require('./signer')\n\nmodule.exports = {\n  TokenError,\n  createDecoder,\n  createVerifier,\n  createSigner\n}\n", "const { format } = require('util');\n\nclass OPError extends Error {\n  constructor({ error_description, error, error_uri, session_state, state, scope }, response) {\n    super(!error_description ? error : `${error} (${error_description})`);\n\n    Object.assign(\n      this,\n      { error },\n      error_description && { error_description },\n      error_uri && { error_uri },\n      state && { state },\n      scope && { scope },\n      session_state && { session_state },\n    );\n\n    if (response) {\n      Object.defineProperty(this, 'response', {\n        value: response,\n      });\n    }\n\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nclass RPError extends Error {\n  constructor(...args) {\n    if (typeof args[0] === 'string') {\n      super(format(...args));\n    } else {\n      const { message, printf, response, ...rest } = args[0];\n      if (printf) {\n        super(format(...printf));\n      } else {\n        super(message);\n      }\n      Object.assign(this, rest);\n      if (response) {\n        Object.defineProperty(this, 'response', {\n          value: response,\n        });\n      }\n    }\n\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nmodule.exports = {\n  OPError,\n  RPError,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst digest = (algorithm, data) => (0, crypto_1.createHash)(algorithm).update(data).digest();\nexports.default = digest;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatKdf = exports.lengthAndInput = exports.uint32be = exports.uint64be = exports.p2s = exports.concat = exports.decoder = exports.encoder = void 0;\nconst digest_js_1 = require(\"../runtime/digest.js\");\nexports.encoder = new TextEncoder();\nexports.decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nfunction concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexports.concat = concat;\nfunction p2s(alg, p2sInput) {\n    return concat(exports.encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nexports.p2s = p2s;\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nfunction uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexports.uint64be = uint64be;\nfunction uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexports.uint32be = uint32be;\nfunction lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexports.lengthAndInput = lengthAndInput;\nasync function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await (0, digest_js_1.default)('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\nexports.concatKdf = concatKdf;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = exports.encodeBase64 = exports.decodeBase64 = void 0;\nconst buffer_1 = require(\"buffer\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nlet encode;\nexports.encode = encode;\nfunction normalize(input) {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = buffer_utils_js_1.decoder.decode(encoded);\n    }\n    return encoded;\n}\nif (buffer_1.Buffer.isEncoding('base64url')) {\n    exports.encode = encode = (input) => buffer_1.Buffer.from(input).toString('base64url');\n}\nelse {\n    exports.encode = encode = (input) => buffer_1.Buffer.from(input).toString('base64').replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nconst decodeBase64 = (input) => buffer_1.Buffer.from(input, 'base64');\nexports.decodeBase64 = decodeBase64;\nconst encodeBase64 = (input) => buffer_1.Buffer.from(input).toString('base64');\nexports.encodeBase64 = encodeBase64;\nconst decode = (input) => buffer_1.Buffer.from(normalize(input), 'base64');\nexports.decode = decode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JWSSignatureVerificationFailed = exports.JWKSTimeout = exports.JWKSMultipleMatchingKeys = exports.JWKSNoMatchingKey = exports.JWKSInvalid = exports.JWKInvalid = exports.JWTInvalid = exports.JWSInvalid = exports.JWEInvalid = exports.JWEDecryptionFailed = exports.JOSENotSupported = exports.JOSEAlgNotAllowed = exports.JWTExpired = exports.JWTClaimValidationFailed = exports.JOSEError = void 0;\nclass JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexports.JOSEError = JOSEError;\nclass JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexports.JWTClaimValidationFailed = JWTClaimValidationFailed;\nclass JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexports.JWTExpired = JWTExpired;\nclass JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexports.JOSEAlgNotAllowed = JOSEAlgNotAllowed;\nclass JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexports.JOSENotSupported = JOSENotSupported;\nclass JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexports.JWEDecryptionFailed = JWEDecryptionFailed;\nclass JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexports.JWEInvalid = JWEInvalid;\nclass JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexports.JWSInvalid = JWSInvalid;\nclass JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexports.JWTInvalid = JWTInvalid;\nclass JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexports.JWKInvalid = JWKInvalid;\nclass JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexports.JWKSInvalid = JWKSInvalid;\nclass JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexports.JWKSNoMatchingKey = JWKSNoMatchingKey;\nclass JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nexports.JWKSMultipleMatchingKeys = JWKSMultipleMatchingKeys;\nSymbol.asyncIterator;\nclass JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexports.JWKSTimeout = JWKSTimeout;\nclass JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\nexports.JWSSignatureVerificationFailed = JWSSignatureVerificationFailed;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = void 0;\nvar crypto_1 = require(\"crypto\");\nObject.defineProperty(exports, \"default\", { enumerable: true, get: function () { return crypto_1.randomFillSync; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitLength = void 0;\nconst errors_js_1 = require(\"../util/errors.js\");\nconst random_js_1 = require(\"../runtime/random.js\");\nfunction bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexports.bitLength = bitLength;\nexports.default = (alg) => (0, random_js_1.default)(new Uint8Array(bitLength(alg) >> 3));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nconst iv_js_1 = require(\"./iv.js\");\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== (0, iv_js_1.bitLength)(enc)) {\n        throw new errors_js_1.JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexports.default = checkIvLength;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst util = require(\"util\");\nexports.default = util.types.isKeyObject\n    ? (obj) => util.types.isKeyObject(obj)\n    : (obj) => obj != null && obj instanceof crypto_1.KeyObject;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst checkCekLength = (enc, cek) => {\n    let expected;\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            expected = parseInt(enc.slice(-3), 10);\n            break;\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            expected = parseInt(enc.slice(1, 4), 10);\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Content Encryption Algorithm ${enc} is not supported either by JOSE or your javascript runtime`);\n    }\n    if (cek instanceof Uint8Array) {\n        const actual = cek.byteLength << 3;\n        if (actual !== expected) {\n            throw new errors_js_1.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n        }\n        return;\n    }\n    if ((0, is_key_object_js_1.default)(cek) && cek.type === 'secret') {\n        const actual = cek.symmetricKeySize << 3;\n        if (actual !== expected) {\n            throw new errors_js_1.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n        }\n        return;\n    }\n    throw new TypeError('Invalid Content Encryption Key type');\n};\nexports.default = checkCekLength;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst timingSafeEqual = crypto_1.timingSafeEqual;\nexports.default = timingSafeEqual;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nfunction cbcTag(aad, iv, ciphertext, macSize, macKey, keySize) {\n    const macData = (0, buffer_utils_js_1.concat)(aad, iv, ciphertext, (0, buffer_utils_js_1.uint64be)(aad.length << 3));\n    const hmac = (0, crypto_1.createHmac)(`sha${macSize}`, macKey);\n    hmac.update(macData);\n    return hmac.digest().slice(0, keySize >> 3);\n}\nexports.default = cbcTag;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCryptoKey = void 0;\nconst crypto = require(\"crypto\");\nconst util = require(\"util\");\nconst webcrypto = crypto.webcrypto;\nexports.default = webcrypto;\nexports.isCryptoKey = util.types.isCryptoKey\n    ? (key) => util.types.isCryptoKey(key)\n    :\n        (key) => false;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkEncCryptoKey = exports.checkSigCryptoKey = void 0;\nfunction unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nfunction checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexports.checkSigCryptoKey = checkSigCryptoKey;\nfunction checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexports.checkEncCryptoKey = checkEncCryptoKey;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withAlg = void 0;\nfunction message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexports.default = (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nfunction withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\nexports.withAlg = withAlg;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nlet ciphers;\nexports.default = (algorithm) => {\n    ciphers || (ciphers = new Set((0, crypto_1.getCiphers)()));\n    return ciphers.has(algorithm);\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.types = void 0;\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nexports.default = (key) => (0, is_key_object_js_1.default)(key) || (0, webcrypto_js_1.isCryptoKey)(key);\nconst types = ['KeyObject'];\nexports.types = types;\nif (globalThis.CryptoKey || (webcrypto_js_1.default === null || webcrypto_js_1.default === void 0 ? void 0 : webcrypto_js_1.default.CryptoKey)) {\n    types.push('CryptoKey');\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst check_iv_length_js_1 = require(\"../lib/check_iv_length.js\");\nconst check_cek_length_js_1 = require(\"./check_cek_length.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst timing_safe_equal_js_1 = require(\"./timing_safe_equal.js\");\nconst cbc_tag_js_1 = require(\"./cbc_tag.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst ciphers_js_1 = require(\"./ciphers.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nfunction cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    if ((0, is_key_object_js_1.default)(cek)) {\n        cek = cek.export();\n    }\n    const encKey = cek.subarray(keySize >> 3);\n    const macKey = cek.subarray(0, keySize >> 3);\n    const macSize = parseInt(enc.slice(-3), 10);\n    const algorithm = `aes-${keySize}-cbc`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const expectedTag = (0, cbc_tag_js_1.default)(aad, iv, ciphertext, macSize, macKey, keySize);\n    let macCheckPassed;\n    try {\n        macCheckPassed = (0, timing_safe_equal_js_1.default)(tag, expectedTag);\n    }\n    catch {\n    }\n    if (!macCheckPassed) {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        const decipher = (0, crypto_1.createDecipheriv)(algorithm, encKey, iv);\n        plaintext = (0, buffer_utils_js_1.concat)(decipher.update(ciphertext), decipher.final());\n    }\n    catch {\n    }\n    if (!plaintext) {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nfunction gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const algorithm = `aes-${keySize}-gcm`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    try {\n        const decipher = (0, crypto_1.createDecipheriv)(algorithm, cek, iv, { authTagLength: 16 });\n        decipher.setAuthTag(tag);\n        if (aad.byteLength) {\n            decipher.setAAD(aad, { plaintextLength: ciphertext.length });\n        }\n        const plaintext = decipher.update(ciphertext);\n        decipher.final();\n        return plaintext;\n    }\n    catch {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n}\nconst decrypt = (enc, cek, ciphertext, iv, tag, aad) => {\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(cek)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(cek, enc, 'decrypt');\n        key = crypto_1.KeyObject.from(cek);\n    }\n    else if (cek instanceof Uint8Array || (0, is_key_object_js_1.default)(cek)) {\n        key = cek;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(cek, ...is_key_like_js_1.types, 'Uint8Array'));\n    }\n    (0, check_cek_length_js_1.default)(enc, key);\n    (0, check_iv_length_js_1.default)(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return cbcDecrypt(enc, key, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            return gcmDecrypt(enc, key, ciphertext, iv, tag, aad);\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexports.default = decrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deflate = exports.inflate = void 0;\nconst util_1 = require(\"util\");\nconst zlib_1 = require(\"zlib\");\nconst inflateRaw = (0, util_1.promisify)(zlib_1.inflateRaw);\nconst deflateRaw = (0, util_1.promisify)(zlib_1.deflateRaw);\nconst inflate = (input) => inflateRaw(input);\nexports.inflate = inflate;\nconst deflate = (input) => deflateRaw(input);\nexports.deflate = deflate;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexports.default = isDisjoint;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\nexports.default = isObject;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unwrap = exports.wrap = void 0;\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst ciphers_js_1 = require(\"./ciphers.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nfunction checkKeySize(key, alg) {\n    if (key.symmetricKeySize << 3 !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction ensureKeyObject(key, alg, usage) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return (0, crypto_1.createSecretKey)(key);\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, usage);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n}\nconst wrap = (alg, key, cek) => {\n    const size = parseInt(alg.slice(1, 4), 10);\n    const algorithm = `aes${size}-wrap`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    const keyObject = ensureKeyObject(key, alg, 'wrapKey');\n    checkKeySize(keyObject, alg);\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, keyObject, buffer_1.Buffer.alloc(8, 0xa6));\n    return (0, buffer_utils_js_1.concat)(cipher.update(cek), cipher.final());\n};\nexports.wrap = wrap;\nconst unwrap = (alg, key, encryptedKey) => {\n    const size = parseInt(alg.slice(1, 4), 10);\n    const algorithm = `aes${size}-wrap`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    const keyObject = ensureKeyObject(key, alg, 'unwrapKey');\n    checkKeySize(keyObject, alg);\n    const cipher = (0, crypto_1.createDecipheriv)(algorithm, keyObject, buffer_1.Buffer.alloc(8, 0xa6));\n    return (0, buffer_utils_js_1.concat)(cipher.update(encryptedKey), cipher.final());\n};\nexports.unwrap = unwrap;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setCurve = exports.weakMap = void 0;\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst p256 = buffer_1.Buffer.from([42, 134, 72, 206, 61, 3, 1, 7]);\nconst p384 = buffer_1.Buffer.from([43, 129, 4, 0, 34]);\nconst p521 = buffer_1.Buffer.from([43, 129, 4, 0, 35]);\nconst secp256k1 = buffer_1.Buffer.from([43, 129, 4, 0, 10]);\nexports.weakMap = new WeakMap();\nconst namedCurveToJOSE = (namedCurve) => {\n    switch (namedCurve) {\n        case 'prime256v1':\n            return 'P-256';\n        case 'secp384r1':\n            return 'P-384';\n        case 'secp521r1':\n            return 'P-521';\n        case 'secp256k1':\n            return 'secp256k1';\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported key curve for this operation');\n    }\n};\nconst getNamedCurve = (kee, raw) => {\n    var _a;\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(kee)) {\n        key = crypto_1.KeyObject.from(kee);\n    }\n    else if ((0, is_key_object_js_1.default)(kee)) {\n        key = kee;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(kee, ...is_key_like_js_1.types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError('only \"private\" or \"public\" type keys can be used for this operation');\n    }\n    switch (key.asymmetricKeyType) {\n        case 'ed25519':\n        case 'ed448':\n            return `Ed${key.asymmetricKeyType.slice(2)}`;\n        case 'x25519':\n        case 'x448':\n            return `X${key.asymmetricKeyType.slice(1)}`;\n        case 'ec': {\n            if (exports.weakMap.has(key)) {\n                return exports.weakMap.get(key);\n            }\n            let namedCurve = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.namedCurve;\n            if (!namedCurve && key.type === 'private') {\n                namedCurve = getNamedCurve((0, crypto_1.createPublicKey)(key), true);\n            }\n            else if (!namedCurve) {\n                const buf = key.export({ format: 'der', type: 'spki' });\n                const i = buf[1] < 128 ? 14 : 15;\n                const len = buf[i];\n                const curveOid = buf.slice(i + 1, i + 1 + len);\n                if (curveOid.equals(p256)) {\n                    namedCurve = 'prime256v1';\n                }\n                else if (curveOid.equals(p384)) {\n                    namedCurve = 'secp384r1';\n                }\n                else if (curveOid.equals(p521)) {\n                    namedCurve = 'secp521r1';\n                }\n                else if (curveOid.equals(secp256k1)) {\n                    namedCurve = 'secp256k1';\n                }\n                else {\n                    throw new errors_js_1.JOSENotSupported('Unsupported key curve for this operation');\n                }\n            }\n            if (raw)\n                return namedCurve;\n            const curve = namedCurveToJOSE(namedCurve);\n            exports.weakMap.set(key, curve);\n            return curve;\n        }\n        default:\n            throw new TypeError('Invalid asymmetric key type for this operation');\n    }\n};\nfunction setCurve(keyObject, curve) {\n    exports.weakMap.set(keyObject, curve);\n}\nexports.setCurve = setCurve;\nexports.default = getNamedCurve;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ecdhAllowed = exports.generateEpk = exports.deriveKey = void 0;\nconst crypto_1 = require(\"crypto\");\nconst util_1 = require(\"util\");\nconst get_named_curve_js_1 = require(\"./get_named_curve.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst generateKeyPair = (0, util_1.promisify)(crypto_1.generateKeyPair);\nasync function deriveKey(publicKee, privateKee, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    let publicKey;\n    if ((0, webcrypto_js_1.isCryptoKey)(publicKee)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(publicKee, 'ECDH');\n        publicKey = crypto_1.KeyObject.from(publicKee);\n    }\n    else if ((0, is_key_object_js_1.default)(publicKee)) {\n        publicKey = publicKee;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(publicKee, ...is_key_like_js_1.types));\n    }\n    let privateKey;\n    if ((0, webcrypto_js_1.isCryptoKey)(privateKee)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(privateKee, 'ECDH', 'deriveBits');\n        privateKey = crypto_1.KeyObject.from(privateKee);\n    }\n    else if ((0, is_key_object_js_1.default)(privateKee)) {\n        privateKey = privateKee;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(privateKee, ...is_key_like_js_1.types));\n    }\n    const value = (0, buffer_utils_js_1.concat)((0, buffer_utils_js_1.lengthAndInput)(buffer_utils_js_1.encoder.encode(algorithm)), (0, buffer_utils_js_1.lengthAndInput)(apu), (0, buffer_utils_js_1.lengthAndInput)(apv), (0, buffer_utils_js_1.uint32be)(keyLength));\n    const sharedSecret = (0, crypto_1.diffieHellman)({ privateKey, publicKey });\n    return (0, buffer_utils_js_1.concatKdf)(sharedSecret, keyLength, value);\n}\nexports.deriveKey = deriveKey;\nasync function generateEpk(kee) {\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(kee)) {\n        key = crypto_1.KeyObject.from(kee);\n    }\n    else if ((0, is_key_object_js_1.default)(kee)) {\n        key = kee;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(kee, ...is_key_like_js_1.types));\n    }\n    switch (key.asymmetricKeyType) {\n        case 'x25519':\n            return generateKeyPair('x25519');\n        case 'x448': {\n            return generateKeyPair('x448');\n        }\n        case 'ec': {\n            const namedCurve = (0, get_named_curve_js_1.default)(key);\n            return generateKeyPair('ec', { namedCurve });\n        }\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported EPK');\n    }\n}\nexports.generateEpk = generateEpk;\nconst ecdhAllowed = (key) => ['P-256', 'P-384', 'P-521', 'X25519', 'X448'].includes((0, get_named_curve_js_1.default)(key));\nexports.ecdhAllowed = ecdhAllowed;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nfunction checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new errors_js_1.JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\nexports.default = checkP2s;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decrypt = exports.encrypt = void 0;\nconst util_1 = require(\"util\");\nconst crypto_1 = require(\"crypto\");\nconst random_js_1 = require(\"./random.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst base64url_js_1 = require(\"./base64url.js\");\nconst aeskw_js_1 = require(\"./aeskw.js\");\nconst check_p2s_js_1 = require(\"../lib/check_p2s.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst pbkdf2 = (0, util_1.promisify)(crypto_1.pbkdf2);\nfunction getPassword(key, alg) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key.export();\n    }\n    if (key instanceof Uint8Array) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, 'deriveBits', 'deriveKey');\n        return crypto_1.KeyObject.from(key).export();\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n}\nconst encrypt = async (alg, key, cek, p2c = 2048, p2s = (0, random_js_1.default)(new Uint8Array(16))) => {\n    (0, check_p2s_js_1.default)(p2s);\n    const salt = (0, buffer_utils_js_1.p2s)(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n    const password = getPassword(key, alg);\n    const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n    const encryptedKey = await (0, aeskw_js_1.wrap)(alg.slice(-6), derivedKey, cek);\n    return { encryptedKey, p2c, p2s: (0, base64url_js_1.encode)(p2s) };\n};\nexports.encrypt = encrypt;\nconst decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    (0, check_p2s_js_1.default)(p2s);\n    const salt = (0, buffer_utils_js_1.p2s)(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n    const password = getPassword(key, alg);\n    const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n    return (0, aeskw_js_1.unwrap)(alg.slice(-6), derivedKey, encryptedKey);\n};\nexports.decrypt = decrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setModulusLength = exports.weakMap = void 0;\nexports.weakMap = new WeakMap();\nconst getLength = (buf, index) => {\n    let len = buf.readUInt8(1);\n    if ((len & 0x80) === 0) {\n        if (index === 0) {\n            return len;\n        }\n        return getLength(buf.subarray(2 + len), index - 1);\n    }\n    const num = len & 0x7f;\n    len = 0;\n    for (let i = 0; i < num; i++) {\n        len <<= 8;\n        const j = buf.readUInt8(2 + i);\n        len |= j;\n    }\n    if (index === 0) {\n        return len;\n    }\n    return getLength(buf.subarray(2 + len), index - 1);\n};\nconst getLengthOfSeqIndex = (sequence, index) => {\n    const len = sequence.readUInt8(1);\n    if ((len & 0x80) === 0) {\n        return getLength(sequence.subarray(2), index);\n    }\n    const num = len & 0x7f;\n    return getLength(sequence.subarray(2 + num), index);\n};\nconst getModulusLength = (key) => {\n    var _a, _b;\n    if (exports.weakMap.has(key)) {\n        return exports.weakMap.get(key);\n    }\n    const modulusLength = (_b = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.modulusLength) !== null && _b !== void 0 ? _b : (getLengthOfSeqIndex(key.export({ format: 'der', type: 'pkcs1' }), key.type === 'private' ? 1 : 0) -\n        1) <<\n        3;\n    exports.weakMap.set(key, modulusLength);\n    return modulusLength;\n};\nconst setModulusLength = (keyObject, modulusLength) => {\n    exports.weakMap.set(keyObject, modulusLength);\n};\nexports.setModulusLength = setModulusLength;\nexports.default = (key, alg) => {\n    if (getModulusLength(key) < 2048) {\n        throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n    }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decrypt = exports.encrypt = void 0;\nconst crypto_1 = require(\"crypto\");\nconst check_modulus_length_js_1 = require(\"./check_modulus_length.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst checkKey = (key, alg) => {\n    if (key.asymmetricKeyType !== 'rsa') {\n        throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n    }\n    (0, check_modulus_length_js_1.default)(key, alg);\n};\nconst resolvePadding = (alg) => {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return crypto_1.constants.RSA_PKCS1_OAEP_PADDING;\n        case 'RSA1_5':\n            return crypto_1.constants.RSA_PKCS1_PADDING;\n        default:\n            return undefined;\n    }\n};\nconst resolveOaepHash = (alg) => {\n    switch (alg) {\n        case 'RSA-OAEP':\n            return 'sha1';\n        case 'RSA-OAEP-256':\n            return 'sha256';\n        case 'RSA-OAEP-384':\n            return 'sha384';\n        case 'RSA-OAEP-512':\n            return 'sha512';\n        default:\n            return undefined;\n    }\n};\nfunction ensureKeyObject(key, alg, ...usages) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, ...usages);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n}\nconst encrypt = (alg, key, cek) => {\n    const padding = resolvePadding(alg);\n    const oaepHash = resolveOaepHash(alg);\n    const keyObject = ensureKeyObject(key, alg, 'wrapKey', 'encrypt');\n    checkKey(keyObject, alg);\n    return (0, crypto_1.publicEncrypt)({ key: keyObject, oaepHash, padding }, cek);\n};\nexports.encrypt = encrypt;\nconst decrypt = (alg, key, encryptedKey) => {\n    const padding = resolvePadding(alg);\n    const oaepHash = resolveOaepHash(alg);\n    const keyObject = ensureKeyObject(key, alg, 'unwrapKey', 'decrypt');\n    checkKey(keyObject, alg);\n    return (0, crypto_1.privateDecrypt)({ key: keyObject, oaepHash, padding }, encryptedKey);\n};\nexports.decrypt = decrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitLength = void 0;\nconst errors_js_1 = require(\"../util/errors.js\");\nconst random_js_1 = require(\"../runtime/random.js\");\nfunction bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexports.bitLength = bitLength;\nexports.default = (alg) => (0, random_js_1.default)(new Uint8Array(bitLength(alg) >> 3));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromX509 = exports.fromSPKI = exports.fromPKCS8 = exports.toPKCS8 = exports.toSPKI = void 0;\nconst crypto_1 = require(\"crypto\");\nconst buffer_1 = require(\"buffer\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst genericExport = (keyType, keyFormat, key) => {\n    let keyObject;\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        if (!key.extractable) {\n            throw new TypeError('CryptoKey is not extractable');\n        }\n        keyObject = crypto_1.KeyObject.from(key);\n    }\n    else if ((0, is_key_object_js_1.default)(key)) {\n        keyObject = key;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n    }\n    if (keyObject.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return keyObject.export({ format: 'pem', type: keyFormat });\n};\nconst toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexports.toSPKI = toSPKI;\nconst toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nexports.toPKCS8 = toPKCS8;\nconst fromPKCS8 = (pem) => (0, crypto_1.createPrivateKey)({\n    key: buffer_1.Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, ''), 'base64'),\n    type: 'pkcs8',\n    format: 'der',\n});\nexports.fromPKCS8 = fromPKCS8;\nconst fromSPKI = (pem) => (0, crypto_1.createPublicKey)({\n    key: buffer_1.Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, ''), 'base64'),\n    type: 'spki',\n    format: 'der',\n});\nexports.fromSPKI = fromSPKI;\nconst fromX509 = (pem) => (0, crypto_1.createPublicKey)({\n    key: pem,\n    type: 'spki',\n    format: 'pem',\n});\nexports.fromX509 = fromX509;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"buffer\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst tagInteger = 0x02;\nconst tagBitStr = 0x03;\nconst tagOctStr = 0x04;\nconst tagSequence = 0x30;\nconst bZero = buffer_1.Buffer.from([0x00]);\nconst bTagInteger = buffer_1.Buffer.from([tagInteger]);\nconst bTagBitStr = buffer_1.Buffer.from([tagBitStr]);\nconst bTagSequence = buffer_1.Buffer.from([tagSequence]);\nconst bTagOctStr = buffer_1.Buffer.from([tagOctStr]);\nconst encodeLength = (len) => {\n    if (len < 128)\n        return buffer_1.Buffer.from([len]);\n    const buffer = buffer_1.Buffer.alloc(5);\n    buffer.writeUInt32BE(len, 1);\n    let offset = 1;\n    while (buffer[offset] === 0)\n        offset++;\n    buffer[offset - 1] = 0x80 | (5 - offset);\n    return buffer.slice(offset - 1);\n};\nconst oids = new Map([\n    ['P-256', buffer_1.Buffer.from('06 08 2A 86 48 CE 3D 03 01 07'.replace(/ /g, ''), 'hex')],\n    ['secp256k1', buffer_1.Buffer.from('06 05 2B 81 04 00 0A'.replace(/ /g, ''), 'hex')],\n    ['P-384', buffer_1.Buffer.from('06 05 2B 81 04 00 22'.replace(/ /g, ''), 'hex')],\n    ['P-521', buffer_1.Buffer.from('06 05 2B 81 04 00 23'.replace(/ /g, ''), 'hex')],\n    ['ecPublicKey', buffer_1.Buffer.from('06 07 2A 86 48 CE 3D 02 01'.replace(/ /g, ''), 'hex')],\n    ['X25519', buffer_1.Buffer.from('06 03 2B 65 6E'.replace(/ /g, ''), 'hex')],\n    ['X448', buffer_1.Buffer.from('06 03 2B 65 6F'.replace(/ /g, ''), 'hex')],\n    ['Ed25519', buffer_1.Buffer.from('06 03 2B 65 70'.replace(/ /g, ''), 'hex')],\n    ['Ed448', buffer_1.Buffer.from('06 03 2B 65 71'.replace(/ /g, ''), 'hex')],\n]);\nclass DumbAsn1Encoder {\n    constructor() {\n        this.length = 0;\n        this.elements = [];\n    }\n    oidFor(oid) {\n        const bOid = oids.get(oid);\n        if (!bOid) {\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported OID');\n        }\n        this.elements.push(bOid);\n        this.length += bOid.length;\n    }\n    zero() {\n        this.elements.push(bTagInteger, buffer_1.Buffer.from([0x01]), bZero);\n        this.length += 3;\n    }\n    one() {\n        this.elements.push(bTagInteger, buffer_1.Buffer.from([0x01]), buffer_1.Buffer.from([0x01]));\n        this.length += 3;\n    }\n    unsignedInteger(integer) {\n        if (integer[0] & 0x80) {\n            const len = encodeLength(integer.length + 1);\n            this.elements.push(bTagInteger, len, bZero, integer);\n            this.length += 2 + len.length + integer.length;\n        }\n        else {\n            let i = 0;\n            while (integer[i] === 0 && (integer[i + 1] & 0x80) === 0)\n                i++;\n            const len = encodeLength(integer.length - i);\n            this.elements.push(bTagInteger, encodeLength(integer.length - i), integer.slice(i));\n            this.length += 1 + len.length + integer.length - i;\n        }\n    }\n    octStr(octStr) {\n        const len = encodeLength(octStr.length);\n        this.elements.push(bTagOctStr, encodeLength(octStr.length), octStr);\n        this.length += 1 + len.length + octStr.length;\n    }\n    bitStr(bitS) {\n        const len = encodeLength(bitS.length + 1);\n        this.elements.push(bTagBitStr, encodeLength(bitS.length + 1), bZero, bitS);\n        this.length += 1 + len.length + bitS.length + 1;\n    }\n    add(seq) {\n        this.elements.push(seq);\n        this.length += seq.length;\n    }\n    end(tag = bTagSequence) {\n        const len = encodeLength(this.length);\n        return buffer_1.Buffer.concat([tag, len, ...this.elements], 1 + len.length + this.length);\n    }\n}\nexports.default = DumbAsn1Encoder;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jwkImport = exports.jwkExport = exports.rsaPssParams = exports.oneShotCallback = void 0;\nconst [major, minor] = process.versions.node.split('.').map((str) => parseInt(str, 10));\nexports.oneShotCallback = major >= 16 || (major === 15 && minor >= 13);\nexports.rsaPssParams = !('electron' in process.versions) && (major >= 17 || (major === 16 && minor >= 9));\nexports.jwkExport = major >= 16 || (major === 15 && minor >= 9);\nexports.jwkImport = major >= 16 || (major === 15 && minor >= 12);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nconst base64url_js_1 = require(\"./base64url.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst get_named_curve_js_1 = require(\"./get_named_curve.js\");\nconst check_modulus_length_js_1 = require(\"./check_modulus_length.js\");\nconst asn1_sequence_encoder_js_1 = require(\"./asn1_sequence_encoder.js\");\nconst flags_js_1 = require(\"./flags.js\");\nconst parse = (jwk) => {\n    if (flags_js_1.jwkImport && jwk.kty !== 'oct') {\n        return jwk.d\n            ? (0, crypto_1.createPrivateKey)({ format: 'jwk', key: jwk })\n            : (0, crypto_1.createPublicKey)({ format: 'jwk', key: jwk });\n    }\n    switch (jwk.kty) {\n        case 'oct': {\n            return (0, crypto_1.createSecretKey)((0, base64url_js_1.decode)(jwk.k));\n        }\n        case 'RSA': {\n            const enc = new asn1_sequence_encoder_js_1.default();\n            const isPrivate = jwk.d !== undefined;\n            const modulus = buffer_1.Buffer.from(jwk.n, 'base64');\n            const exponent = buffer_1.Buffer.from(jwk.e, 'base64');\n            if (isPrivate) {\n                enc.zero();\n                enc.unsignedInteger(modulus);\n                enc.unsignedInteger(exponent);\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.d, 'base64'));\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.p, 'base64'));\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.q, 'base64'));\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.dp, 'base64'));\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.dq, 'base64'));\n                enc.unsignedInteger(buffer_1.Buffer.from(jwk.qi, 'base64'));\n            }\n            else {\n                enc.unsignedInteger(modulus);\n                enc.unsignedInteger(exponent);\n            }\n            const der = enc.end();\n            const createInput = {\n                key: der,\n                format: 'der',\n                type: 'pkcs1',\n            };\n            const keyObject = isPrivate ? (0, crypto_1.createPrivateKey)(createInput) : (0, crypto_1.createPublicKey)(createInput);\n            (0, check_modulus_length_js_1.setModulusLength)(keyObject, modulus.length << 3);\n            return keyObject;\n        }\n        case 'EC': {\n            const enc = new asn1_sequence_encoder_js_1.default();\n            const isPrivate = jwk.d !== undefined;\n            const pub = buffer_1.Buffer.concat([\n                buffer_1.Buffer.alloc(1, 4),\n                buffer_1.Buffer.from(jwk.x, 'base64'),\n                buffer_1.Buffer.from(jwk.y, 'base64'),\n            ]);\n            if (isPrivate) {\n                enc.zero();\n                const enc$1 = new asn1_sequence_encoder_js_1.default();\n                enc$1.oidFor('ecPublicKey');\n                enc$1.oidFor(jwk.crv);\n                enc.add(enc$1.end());\n                const enc$2 = new asn1_sequence_encoder_js_1.default();\n                enc$2.one();\n                enc$2.octStr(buffer_1.Buffer.from(jwk.d, 'base64'));\n                const enc$3 = new asn1_sequence_encoder_js_1.default();\n                enc$3.bitStr(pub);\n                const f2 = enc$3.end(buffer_1.Buffer.from([0xa1]));\n                enc$2.add(f2);\n                const f = enc$2.end();\n                const enc$4 = new asn1_sequence_encoder_js_1.default();\n                enc$4.add(f);\n                const f3 = enc$4.end(buffer_1.Buffer.from([0x04]));\n                enc.add(f3);\n                const der = enc.end();\n                const keyObject = (0, crypto_1.createPrivateKey)({ key: der, format: 'der', type: 'pkcs8' });\n                (0, get_named_curve_js_1.setCurve)(keyObject, jwk.crv);\n                return keyObject;\n            }\n            const enc$1 = new asn1_sequence_encoder_js_1.default();\n            enc$1.oidFor('ecPublicKey');\n            enc$1.oidFor(jwk.crv);\n            enc.add(enc$1.end());\n            enc.bitStr(pub);\n            const der = enc.end();\n            const keyObject = (0, crypto_1.createPublicKey)({ key: der, format: 'der', type: 'spki' });\n            (0, get_named_curve_js_1.setCurve)(keyObject, jwk.crv);\n            return keyObject;\n        }\n        case 'OKP': {\n            const enc = new asn1_sequence_encoder_js_1.default();\n            const isPrivate = jwk.d !== undefined;\n            if (isPrivate) {\n                enc.zero();\n                const enc$1 = new asn1_sequence_encoder_js_1.default();\n                enc$1.oidFor(jwk.crv);\n                enc.add(enc$1.end());\n                const enc$2 = new asn1_sequence_encoder_js_1.default();\n                enc$2.octStr(buffer_1.Buffer.from(jwk.d, 'base64'));\n                const f = enc$2.end(buffer_1.Buffer.from([0x04]));\n                enc.add(f);\n                const der = enc.end();\n                return (0, crypto_1.createPrivateKey)({ key: der, format: 'der', type: 'pkcs8' });\n            }\n            const enc$1 = new asn1_sequence_encoder_js_1.default();\n            enc$1.oidFor(jwk.crv);\n            enc.add(enc$1.end());\n            enc.bitStr(buffer_1.Buffer.from(jwk.x, 'base64'));\n            const der = enc.end();\n            return (0, crypto_1.createPublicKey)({ key: der, format: 'der', type: 'spki' });\n        }\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n};\nexports.default = parse;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.importJWK = exports.importPKCS8 = exports.importX509 = exports.importSPKI = void 0;\nconst base64url_js_1 = require(\"../runtime/base64url.js\");\nconst asn1_js_1 = require(\"../runtime/asn1.js\");\nconst jwk_to_key_js_1 = require(\"../runtime/jwk_to_key.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nasync function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return (0, asn1_js_1.fromSPKI)(spki, alg, options);\n}\nexports.importSPKI = importSPKI;\nasync function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return (0, asn1_js_1.fromX509)(x509, alg, options);\n}\nexports.importX509 = importX509;\nasync function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return (0, asn1_js_1.fromPKCS8)(pkcs8, alg, options);\n}\nexports.importPKCS8 = importPKCS8;\nasync function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return (0, jwk_to_key_js_1.default)({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\n            }\n            return (0, base64url_js_1.decode)(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new errors_js_1.JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return (0, jwk_to_key_js_1.default)({ ...jwk, alg });\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\nexports.importJWK = importJWK;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst invalid_key_input_js_1 = require(\"./invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"../runtime/is_key_like.js\");\nconst symmetricTypeCheck = (alg, key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!(0, is_key_like_js_1.default)(key)) {\n        throw new TypeError((0, invalid_key_input_js_1.withAlg)(alg, key, ...is_key_like_js_1.types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (!(0, is_key_like_js_1.default)(key)) {\n        throw new TypeError((0, invalid_key_input_js_1.withAlg)(alg, key, ...is_key_like_js_1.types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexports.default = checkKeyType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst check_iv_length_js_1 = require(\"../lib/check_iv_length.js\");\nconst check_cek_length_js_1 = require(\"./check_cek_length.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst cbc_tag_js_1 = require(\"./cbc_tag.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst ciphers_js_1 = require(\"./ciphers.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nfunction cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    if ((0, is_key_object_js_1.default)(cek)) {\n        cek = cek.export();\n    }\n    const encKey = cek.subarray(keySize >> 3);\n    const macKey = cek.subarray(0, keySize >> 3);\n    const algorithm = `aes-${keySize}-cbc`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, encKey, iv);\n    const ciphertext = (0, buffer_utils_js_1.concat)(cipher.update(plaintext), cipher.final());\n    const macSize = parseInt(enc.slice(-3), 10);\n    const tag = (0, cbc_tag_js_1.default)(aad, iv, ciphertext, macSize, macKey, keySize);\n    return { ciphertext, tag };\n}\nfunction gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const algorithm = `aes-${keySize}-gcm`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, cek, iv, { authTagLength: 16 });\n    if (aad.byteLength) {\n        cipher.setAAD(aad, { plaintextLength: plaintext.length });\n    }\n    const ciphertext = cipher.update(plaintext);\n    cipher.final();\n    const tag = cipher.getAuthTag();\n    return { ciphertext, tag };\n}\nconst encrypt = (enc, plaintext, cek, iv, aad) => {\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(cek)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(cek, enc, 'encrypt');\n        key = crypto_1.KeyObject.from(cek);\n    }\n    else if (cek instanceof Uint8Array || (0, is_key_object_js_1.default)(cek)) {\n        key = cek;\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(cek, ...is_key_like_js_1.types, 'Uint8Array'));\n    }\n    (0, check_cek_length_js_1.default)(enc, key);\n    (0, check_iv_length_js_1.default)(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return cbcEncrypt(enc, plaintext, key, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            return gcmEncrypt(enc, plaintext, key, iv, aad);\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexports.default = encrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unwrap = exports.wrap = void 0;\nconst encrypt_js_1 = require(\"../runtime/encrypt.js\");\nconst decrypt_js_1 = require(\"../runtime/decrypt.js\");\nconst iv_js_1 = require(\"./iv.js\");\nconst base64url_js_1 = require(\"../runtime/base64url.js\");\nasync function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = (0, iv_js_1.default)(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await (0, encrypt_js_1.default)(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return { encryptedKey, iv: (0, base64url_js_1.encode)(iv), tag: (0, base64url_js_1.encode)(tag) };\n}\nexports.wrap = wrap;\nasync function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return (0, decrypt_js_1.default)(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\nexports.unwrap = unwrap;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aeskw_js_1 = require(\"../runtime/aeskw.js\");\nconst ECDH = require(\"../runtime/ecdhes.js\");\nconst pbes2kw_js_1 = require(\"../runtime/pbes2kw.js\");\nconst rsaes_js_1 = require(\"../runtime/rsaes.js\");\nconst base64url_js_1 = require(\"../runtime/base64url.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst cek_js_1 = require(\"../lib/cek.js\");\nconst import_js_1 = require(\"../key/import.js\");\nconst check_key_type_js_1 = require(\"./check_key_type.js\");\nconst is_object_js_1 = require(\"./is_object.js\");\nconst aesgcmkw_js_1 = require(\"./aesgcmkw.js\");\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    (0, check_key_type_js_1.default)(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new errors_js_1.JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new errors_js_1.JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!(0, is_object_js_1.default)(joseHeader.epk))\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new errors_js_1.JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await (0, import_js_1.importJWK)(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new errors_js_1.JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                partyUInfo = (0, base64url_js_1.decode)(joseHeader.apu);\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new errors_js_1.JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                partyVInfo = (0, base64url_js_1.decode)(joseHeader.apv);\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? (0, cek_js_1.bitLength)(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n            return (0, aeskw_js_1.unwrap)(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n            return (0, rsaes_js_1.decrypt)(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            return (0, pbes2kw_js_1.decrypt)(alg, key, encryptedKey, joseHeader.p2c, (0, base64url_js_1.decode)(joseHeader.p2s));\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n            return (0, aeskw_js_1.unwrap)(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new errors_js_1.JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            const iv = (0, base64url_js_1.decode)(joseHeader.iv);\n            const tag = (0, base64url_js_1.decode)(joseHeader.tag);\n            return (0, aesgcmkw_js_1.unwrap)(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexports.default = decryptKeyManagement;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new errors_js_1.JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexports.default = validateCrit;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexports.default = validateAlgorithms;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flattenedDecrypt = void 0;\nconst base64url_js_1 = require(\"../../runtime/base64url.js\");\nconst decrypt_js_1 = require(\"../../runtime/decrypt.js\");\nconst zlib_js_1 = require(\"../../runtime/zlib.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst is_disjoint_js_1 = require(\"../../lib/is_disjoint.js\");\nconst is_object_js_1 = require(\"../../lib/is_object.js\");\nconst decrypt_key_management_js_1 = require(\"../../lib/decrypt_key_management.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nconst cek_js_1 = require(\"../../lib/cek.js\");\nconst validate_crit_js_1 = require(\"../../lib/validate_crit.js\");\nconst validate_algorithms_js_1 = require(\"../../lib/validate_algorithms.js\");\nasync function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jwe)) {\n        throw new errors_js_1.JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new errors_js_1.JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new errors_js_1.JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !(0, is_object_js_1.default)(jwe.header)) {\n        throw new errors_js_1.JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !(0, is_object_js_1.default)(jwe.unprotected)) {\n        throw new errors_js_1.JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = (0, base64url_js_1.decode)(jwe.protected);\n            parsedProt = JSON.parse(buffer_utils_js_1.decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new errors_js_1.JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!(0, is_disjoint_js_1.default)(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new errors_js_1.JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new errors_js_1.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new errors_js_1.JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new errors_js_1.JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && (0, validate_algorithms_js_1.default)('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        (0, validate_algorithms_js_1.default)('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        encryptedKey = (0, base64url_js_1.decode)(jwe.encrypted_key);\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await (0, decrypt_key_management_js_1.default)(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof errors_js_1.JWEInvalid || err instanceof errors_js_1.JOSENotSupported) {\n            throw err;\n        }\n        cek = (0, cek_js_1.default)(enc);\n    }\n    const iv = (0, base64url_js_1.decode)(jwe.iv);\n    const tag = (0, base64url_js_1.decode)(jwe.tag);\n    const protectedHeader = buffer_utils_js_1.encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode('.'), buffer_utils_js_1.encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let plaintext = await (0, decrypt_js_1.default)(enc, cek, (0, base64url_js_1.decode)(jwe.ciphertext), iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || zlib_js_1.inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        result.additionalAuthenticatedData = (0, base64url_js_1.decode)(jwe.aad);\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\nexports.flattenedDecrypt = flattenedDecrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compactDecrypt = void 0;\nconst decrypt_js_1 = require(\"../flattened/decrypt.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nasync function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = buffer_utils_js_1.decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new errors_js_1.JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new errors_js_1.JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await (0, decrypt_js_1.flattenedDecrypt)({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\nexports.compactDecrypt = compactDecrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generalDecrypt = void 0;\nconst decrypt_js_1 = require(\"../flattened/decrypt.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst is_object_js_1 = require(\"../../lib/is_object.js\");\nasync function generalDecrypt(jwe, key, options) {\n    if (!(0, is_object_js_1.default)(jwe)) {\n        throw new errors_js_1.JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(is_object_js_1.default)) {\n        throw new errors_js_1.JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new errors_js_1.JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await (0, decrypt_js_1.flattenedDecrypt)({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch {\n        }\n    }\n    throw new errors_js_1.JWEDecryptionFailed();\n}\nexports.generalDecrypt = generalDecrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tagInteger = 0x02;\nconst tagSequence = 0x30;\nclass Asn1SequenceDecoder {\n    constructor(buffer) {\n        if (buffer[0] !== tagSequence) {\n            throw new TypeError();\n        }\n        this.buffer = buffer;\n        this.offset = 1;\n        const len = this.decodeLength();\n        if (len !== buffer.length - this.offset) {\n            throw new TypeError();\n        }\n    }\n    decodeLength() {\n        let length = this.buffer[this.offset++];\n        if (length & 0x80) {\n            const nBytes = length & ~0x80;\n            length = 0;\n            for (let i = 0; i < nBytes; i++)\n                length = (length << 8) | this.buffer[this.offset + i];\n            this.offset += nBytes;\n        }\n        return length;\n    }\n    unsignedInteger() {\n        if (this.buffer[this.offset++] !== tagInteger) {\n            throw new TypeError();\n        }\n        let length = this.decodeLength();\n        if (this.buffer[this.offset] === 0) {\n            this.offset++;\n            length--;\n        }\n        const result = this.buffer.slice(this.offset, this.offset + length);\n        this.offset += length;\n        return result;\n    }\n    end() {\n        if (this.offset !== this.buffer.length) {\n            throw new TypeError();\n        }\n    }\n}\nexports.default = Asn1SequenceDecoder;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst base64url_js_1 = require(\"./base64url.js\");\nconst asn1_sequence_decoder_js_1 = require(\"./asn1_sequence_decoder.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst get_named_curve_js_1 = require(\"./get_named_curve.js\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst is_key_object_js_1 = require(\"./is_key_object.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nconst flags_js_1 = require(\"./flags.js\");\nconst keyToJWK = (key) => {\n    let keyObject;\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        if (!key.extractable) {\n            throw new TypeError('CryptoKey is not extractable');\n        }\n        keyObject = crypto_1.KeyObject.from(key);\n    }\n    else if ((0, is_key_object_js_1.default)(key)) {\n        keyObject = key;\n    }\n    else if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: (0, base64url_js_1.encode)(key),\n        };\n    }\n    else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n    }\n    if (flags_js_1.jwkExport) {\n        if (keyObject.type !== 'secret' &&\n            !['rsa', 'ec', 'ed25519', 'x25519', 'ed448', 'x448'].includes(keyObject.asymmetricKeyType)) {\n            throw new errors_js_1.JOSENotSupported('Unsupported key asymmetricKeyType');\n        }\n        return keyObject.export({ format: 'jwk' });\n    }\n    switch (keyObject.type) {\n        case 'secret':\n            return {\n                kty: 'oct',\n                k: (0, base64url_js_1.encode)(keyObject.export()),\n            };\n        case 'private':\n        case 'public': {\n            switch (keyObject.asymmetricKeyType) {\n                case 'rsa': {\n                    const der = keyObject.export({ format: 'der', type: 'pkcs1' });\n                    const dec = new asn1_sequence_decoder_js_1.default(der);\n                    if (keyObject.type === 'private') {\n                        dec.unsignedInteger();\n                    }\n                    const n = (0, base64url_js_1.encode)(dec.unsignedInteger());\n                    const e = (0, base64url_js_1.encode)(dec.unsignedInteger());\n                    let jwk;\n                    if (keyObject.type === 'private') {\n                        jwk = {\n                            d: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                            p: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                            q: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                            dp: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                            dq: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                            qi: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                        };\n                    }\n                    dec.end();\n                    return { kty: 'RSA', n, e, ...jwk };\n                }\n                case 'ec': {\n                    const crv = (0, get_named_curve_js_1.default)(keyObject);\n                    let len;\n                    let offset;\n                    let correction;\n                    switch (crv) {\n                        case 'secp256k1':\n                            len = 64;\n                            offset = 31 + 2;\n                            correction = -1;\n                            break;\n                        case 'P-256':\n                            len = 64;\n                            offset = 34 + 2;\n                            correction = -1;\n                            break;\n                        case 'P-384':\n                            len = 96;\n                            offset = 33 + 2;\n                            correction = -3;\n                            break;\n                        case 'P-521':\n                            len = 132;\n                            offset = 33 + 2;\n                            correction = -3;\n                            break;\n                        default:\n                            throw new errors_js_1.JOSENotSupported('Unsupported curve');\n                    }\n                    if (keyObject.type === 'public') {\n                        const der = keyObject.export({ type: 'spki', format: 'der' });\n                        return {\n                            kty: 'EC',\n                            crv,\n                            x: (0, base64url_js_1.encode)(der.subarray(-len, -len / 2)),\n                            y: (0, base64url_js_1.encode)(der.subarray(-len / 2)),\n                        };\n                    }\n                    const der = keyObject.export({ type: 'pkcs8', format: 'der' });\n                    if (der.length < 100) {\n                        offset += correction;\n                    }\n                    return {\n                        ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                        d: (0, base64url_js_1.encode)(der.subarray(offset, offset + len / 2)),\n                    };\n                }\n                case 'ed25519':\n                case 'x25519': {\n                    const crv = (0, get_named_curve_js_1.default)(keyObject);\n                    if (keyObject.type === 'public') {\n                        const der = keyObject.export({ type: 'spki', format: 'der' });\n                        return {\n                            kty: 'OKP',\n                            crv,\n                            x: (0, base64url_js_1.encode)(der.subarray(-32)),\n                        };\n                    }\n                    const der = keyObject.export({ type: 'pkcs8', format: 'der' });\n                    return {\n                        ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                        d: (0, base64url_js_1.encode)(der.subarray(-32)),\n                    };\n                }\n                case 'ed448':\n                case 'x448': {\n                    const crv = (0, get_named_curve_js_1.default)(keyObject);\n                    if (keyObject.type === 'public') {\n                        const der = keyObject.export({ type: 'spki', format: 'der' });\n                        return {\n                            kty: 'OKP',\n                            crv,\n                            x: (0, base64url_js_1.encode)(der.subarray(crv === 'Ed448' ? -57 : -56)),\n                        };\n                    }\n                    const der = keyObject.export({ type: 'pkcs8', format: 'der' });\n                    return {\n                        ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                        d: (0, base64url_js_1.encode)(der.subarray(crv === 'Ed448' ? -57 : -56)),\n                    };\n                }\n                default:\n                    throw new errors_js_1.JOSENotSupported('Unsupported key asymmetricKeyType');\n            }\n        }\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported key type');\n    }\n};\nexports.default = keyToJWK;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exportJWK = exports.exportPKCS8 = exports.exportSPKI = void 0;\nconst asn1_js_1 = require(\"../runtime/asn1.js\");\nconst asn1_js_2 = require(\"../runtime/asn1.js\");\nconst key_to_jwk_js_1 = require(\"../runtime/key_to_jwk.js\");\nasync function exportSPKI(key) {\n    return (0, asn1_js_1.toSPKI)(key);\n}\nexports.exportSPKI = exportSPKI;\nasync function exportPKCS8(key) {\n    return (0, asn1_js_2.toPKCS8)(key);\n}\nexports.exportPKCS8 = exportPKCS8;\nasync function exportJWK(key) {\n    return (0, key_to_jwk_js_1.default)(key);\n}\nexports.exportJWK = exportJWK;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aeskw_js_1 = require(\"../runtime/aeskw.js\");\nconst ECDH = require(\"../runtime/ecdhes.js\");\nconst pbes2kw_js_1 = require(\"../runtime/pbes2kw.js\");\nconst rsaes_js_1 = require(\"../runtime/rsaes.js\");\nconst base64url_js_1 = require(\"../runtime/base64url.js\");\nconst cek_js_1 = require(\"../lib/cek.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst export_js_1 = require(\"../key/export.js\");\nconst check_key_type_js_1 = require(\"./check_key_type.js\");\nconst aesgcmkw_js_1 = require(\"./aesgcmkw.js\");\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    (0, check_key_type_js_1.default)(alg, key, 'encrypt');\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new errors_js_1.JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n            const { x, y, crv, kty } = await (0, export_js_1.exportJWK)(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? (0, cek_js_1.bitLength)(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = (0, base64url_js_1.encode)(apu);\n            if (apv)\n                parameters.apv = (0, base64url_js_1.encode)(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || (0, cek_js_1.default)(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await (0, aeskw_js_1.wrap)(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || (0, cek_js_1.default)(enc);\n            encryptedKey = await (0, rsaes_js_1.encrypt)(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || (0, cek_js_1.default)(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await (0, pbes2kw_js_1.encrypt)(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || (0, cek_js_1.default)(enc);\n            encryptedKey = await (0, aeskw_js_1.wrap)(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || (0, cek_js_1.default)(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await (0, aesgcmkw_js_1.wrap)(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexports.default = encryptKeyManagement;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FlattenedEncrypt = exports.unprotected = void 0;\nconst base64url_js_1 = require(\"../../runtime/base64url.js\");\nconst encrypt_js_1 = require(\"../../runtime/encrypt.js\");\nconst zlib_js_1 = require(\"../../runtime/zlib.js\");\nconst iv_js_1 = require(\"../../lib/iv.js\");\nconst encrypt_key_management_js_1 = require(\"../../lib/encrypt_key_management.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst is_disjoint_js_1 = require(\"../../lib/is_disjoint.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nconst validate_crit_js_1 = require(\"../../lib/validate_crit.js\");\nexports.unprotected = Symbol();\nclass FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new errors_js_1.JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new errors_js_1.JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new errors_js_1.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new errors_js_1.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await (0, encrypt_key_management_js_1.default)(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && exports.unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    }\n                    else {\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = (0, iv_js_1.default)(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = buffer_utils_js_1.encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = (0, base64url_js_1.encode)(this._aad);\n            additionalData = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode('.'), buffer_utils_js_1.encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || zlib_js_1.deflate)(this._plaintext);\n            ({ ciphertext, tag } = await (0, encrypt_js_1.default)(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ;\n            ({ ciphertext, tag } = await (0, encrypt_js_1.default)(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: (0, base64url_js_1.encode)(ciphertext),\n            iv: (0, base64url_js_1.encode)(this._iv),\n            tag: (0, base64url_js_1.encode)(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = (0, base64url_js_1.encode)(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = buffer_utils_js_1.decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\nexports.FlattenedEncrypt = FlattenedEncrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeneralEncrypt = void 0;\nconst encrypt_js_1 = require(\"../flattened/encrypt.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst cek_js_1 = require(\"../../lib/cek.js\");\nconst is_disjoint_js_1 = require(\"../../lib/is_disjoint.js\");\nconst encrypt_key_management_js_1 = require(\"../../lib/encrypt_key_management.js\");\nconst base64url_js_1 = require(\"../../runtime/base64url.js\");\nconst validate_crit_js_1 = require(\"../../lib/validate_crit.js\");\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nclass GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options === null || options === void 0 ? void 0 : options.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new errors_js_1.JWEInvalid('at least one recipient must be added');\n        }\n        options = { deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new encrypt_js_1.FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options, ...options });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new errors_js_1.JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new errors_js_1.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new errors_js_1.JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = (0, cek_js_1.default)(enc);\n        let jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new encrypt_js_1.FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [encrypt_js_1.unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await (0, encrypt_key_management_js_1.default)(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) ||\n                ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) ||\n                ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, { p2c });\n            target.encrypted_key = (0, base64url_js_1.encode)(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\nexports.GeneralEncrypt = GeneralEncrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nfunction dsaDigest(alg) {\n    switch (alg) {\n        case 'PS256':\n        case 'RS256':\n        case 'ES256':\n        case 'ES256K':\n            return 'sha256';\n        case 'PS384':\n        case 'RS384':\n        case 'ES384':\n            return 'sha384';\n        case 'PS512':\n        case 'RS512':\n        case 'ES512':\n            return 'sha512';\n        case 'EdDSA':\n            return undefined;\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports.default = dsaDigest;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst get_named_curve_js_1 = require(\"./get_named_curve.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst check_modulus_length_js_1 = require(\"./check_modulus_length.js\");\nconst flags_js_1 = require(\"./flags.js\");\nconst PSS = {\n    padding: crypto_1.constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: crypto_1.constants.RSA_PSS_SALTLEN_DIGEST,\n};\nconst ecCurveAlgMap = new Map([\n    ['ES256', 'P-256'],\n    ['ES256K', 'secp256k1'],\n    ['ES384', 'P-384'],\n    ['ES512', 'P-521'],\n]);\nfunction keyForCrypto(alg, key) {\n    switch (alg) {\n        case 'EdDSA':\n            if (!['ed25519', 'ed448'].includes(key.asymmetricKeyType)) {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ed25519 or ed448');\n            }\n            return key;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            if (key.asymmetricKeyType !== 'rsa') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return key;\n        case flags_js_1.rsaPssParams && 'PS256':\n        case flags_js_1.rsaPssParams && 'PS384':\n        case flags_js_1.rsaPssParams && 'PS512':\n            if (key.asymmetricKeyType === 'rsa-pss') {\n                const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;\n                const length = parseInt(alg.slice(-3), 10);\n                if (hashAlgorithm !== undefined &&\n                    (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm)) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${alg}`);\n                }\n                if (saltLength !== undefined && saltLength > length >> 3) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${alg}`);\n                }\n            }\n            else if (key.asymmetricKeyType !== 'rsa') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa or rsa-pss');\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return { key, ...PSS };\n        case !flags_js_1.rsaPssParams && 'PS256':\n        case !flags_js_1.rsaPssParams && 'PS384':\n        case !flags_js_1.rsaPssParams && 'PS512':\n            if (key.asymmetricKeyType !== 'rsa') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return { key, ...PSS };\n        case 'ES256':\n        case 'ES256K':\n        case 'ES384':\n        case 'ES512': {\n            if (key.asymmetricKeyType !== 'ec') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ec');\n            }\n            const actual = (0, get_named_curve_js_1.default)(key);\n            const expected = ecCurveAlgMap.get(alg);\n            if (actual !== expected) {\n                throw new TypeError(`Invalid key curve for the algorithm, its curve must be ${expected}, got ${actual}`);\n            }\n            return { dsaEncoding: 'ieee-p1363', key };\n        }\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports.default = keyForCrypto;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nfunction hmacDigest(alg) {\n    switch (alg) {\n        case 'HS256':\n            return 'sha256';\n        case 'HS384':\n            return 'sha384';\n        case 'HS512':\n            return 'sha512';\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports.default = hmacDigest;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto_1 = require(\"crypto\");\nconst webcrypto_js_1 = require(\"./webcrypto.js\");\nconst crypto_key_js_1 = require(\"../lib/crypto_key.js\");\nconst invalid_key_input_js_1 = require(\"../lib/invalid_key_input.js\");\nconst is_key_like_js_1 = require(\"./is_key_like.js\");\nfunction getSignVerifyKey(alg, key, usage) {\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n        }\n        return (0, crypto_1.createSecretKey)(key);\n    }\n    if (key instanceof crypto_1.KeyObject) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkSigCryptoKey)(key, alg, usage);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n}\nexports.default = getSignVerifyKey;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto = require(\"crypto\");\nconst util_1 = require(\"util\");\nconst dsa_digest_js_1 = require(\"./dsa_digest.js\");\nconst hmac_digest_js_1 = require(\"./hmac_digest.js\");\nconst node_key_js_1 = require(\"./node_key.js\");\nconst get_sign_verify_key_js_1 = require(\"./get_sign_verify_key.js\");\nlet oneShotSign;\nif (crypto.sign.length > 3) {\n    oneShotSign = (0, util_1.promisify)(crypto.sign);\n}\nelse {\n    oneShotSign = crypto.sign;\n}\nconst sign = async (alg, key, data) => {\n    const keyObject = (0, get_sign_verify_key_js_1.default)(alg, key, 'sign');\n    if (alg.startsWith('HS')) {\n        const hmac = crypto.createHmac((0, hmac_digest_js_1.default)(alg), keyObject);\n        hmac.update(data);\n        return hmac.digest();\n    }\n    return oneShotSign((0, dsa_digest_js_1.default)(alg), data, (0, node_key_js_1.default)(alg, keyObject));\n};\nexports.default = sign;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto = require(\"crypto\");\nconst util_1 = require(\"util\");\nconst dsa_digest_js_1 = require(\"./dsa_digest.js\");\nconst node_key_js_1 = require(\"./node_key.js\");\nconst sign_js_1 = require(\"./sign.js\");\nconst get_sign_verify_key_js_1 = require(\"./get_sign_verify_key.js\");\nconst flags_js_1 = require(\"./flags.js\");\nlet oneShotVerify;\nif (crypto.verify.length > 4 && flags_js_1.oneShotCallback) {\n    oneShotVerify = (0, util_1.promisify)(crypto.verify);\n}\nelse {\n    oneShotVerify = crypto.verify;\n}\nconst verify = async (alg, key, signature, data) => {\n    const keyObject = (0, get_sign_verify_key_js_1.default)(alg, key, 'verify');\n    if (alg.startsWith('HS')) {\n        const expected = await (0, sign_js_1.default)(alg, keyObject, data);\n        const actual = signature;\n        try {\n            return crypto.timingSafeEqual(actual, expected);\n        }\n        catch {\n            return false;\n        }\n    }\n    const algorithm = (0, dsa_digest_js_1.default)(alg);\n    const keyInput = (0, node_key_js_1.default)(alg, keyObject);\n    try {\n        return await oneShotVerify(algorithm, data, keyInput, signature);\n    }\n    catch {\n        return false;\n    }\n};\nexports.default = verify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flattenedVerify = void 0;\nconst base64url_js_1 = require(\"../../runtime/base64url.js\");\nconst verify_js_1 = require(\"../../runtime/verify.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nconst is_disjoint_js_1 = require(\"../../lib/is_disjoint.js\");\nconst is_object_js_1 = require(\"../../lib/is_object.js\");\nconst check_key_type_js_1 = require(\"../../lib/check_key_type.js\");\nconst validate_crit_js_1 = require(\"../../lib/validate_crit.js\");\nconst validate_algorithms_js_1 = require(\"../../lib/validate_algorithms.js\");\nasync function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jws)) {\n        throw new errors_js_1.JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new errors_js_1.JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new errors_js_1.JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new errors_js_1.JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new errors_js_1.JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !(0, is_object_js_1.default)(jws.header)) {\n        throw new errors_js_1.JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = (0, base64url_js_1.decode)(jws.protected);\n            parsedProt = JSON.parse(buffer_utils_js_1.decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new errors_js_1.JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!(0, is_disjoint_js_1.default)(parsedProt, jws.header)) {\n        throw new errors_js_1.JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = (0, validate_crit_js_1.default)(errors_js_1.JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new errors_js_1.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new errors_js_1.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && (0, validate_algorithms_js_1.default)('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new errors_js_1.JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new errors_js_1.JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    (0, check_key_type_js_1.default)(alg, key, 'verify');\n    const data = (0, buffer_utils_js_1.concat)(buffer_utils_js_1.encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), buffer_utils_js_1.encoder.encode('.'), typeof jws.payload === 'string' ? buffer_utils_js_1.encoder.encode(jws.payload) : jws.payload);\n    const signature = (0, base64url_js_1.decode)(jws.signature);\n    const verified = await (0, verify_js_1.default)(alg, key, signature, data);\n    if (!verified) {\n        throw new errors_js_1.JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        payload = (0, base64url_js_1.decode)(jws.payload);\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = buffer_utils_js_1.encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\nexports.flattenedVerify = flattenedVerify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compactVerify = void 0;\nconst verify_js_1 = require(\"../flattened/verify.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nasync function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = buffer_utils_js_1.decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new errors_js_1.JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new errors_js_1.JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await (0, verify_js_1.flattenedVerify)({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\nexports.compactVerify = compactVerify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generalVerify = void 0;\nconst verify_js_1 = require(\"../flattened/verify.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst is_object_js_1 = require(\"../../lib/is_object.js\");\nasync function generalVerify(jws, key, options) {\n    if (!(0, is_object_js_1.default)(jws)) {\n        throw new errors_js_1.JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(is_object_js_1.default)) {\n        throw new errors_js_1.JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await (0, verify_js_1.flattenedVerify)({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch {\n        }\n    }\n    throw new errors_js_1.JWSSignatureVerificationFailed();\n}\nexports.generalVerify = generalVerify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = (date) => Math.floor(date.getTime() / 1000);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexports.default = (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_js_1 = require(\"../util/errors.js\");\nconst buffer_utils_js_1 = require(\"./buffer_utils.js\");\nconst epoch_js_1 = require(\"./epoch.js\");\nconst secs_js_1 = require(\"./secs.js\");\nconst is_object_js_1 = require(\"./is_object.js\");\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexports.default = (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(buffer_utils_js_1.decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!(0, is_object_js_1.default)(payload)) {\n        throw new errors_js_1.JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    if (maxTokenAge !== undefined)\n        requiredClaims.push('iat');\n    if (audience !== undefined)\n        requiredClaims.push('aud');\n    if (subject !== undefined)\n        requiredClaims.push('sub');\n    if (issuer !== undefined)\n        requiredClaims.push('iss');\n    for (const claim of new Set(requiredClaims.reverse())) {\n        if (!(claim in payload)) {\n            throw new errors_js_1.JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = (0, secs_js_1.default)(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = (0, epoch_js_1.default)(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new errors_js_1.JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new errors_js_1.JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new errors_js_1.JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new errors_js_1.JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new errors_js_1.JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : (0, secs_js_1.default)(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new errors_js_1.JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new errors_js_1.JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jwtVerify = void 0;\nconst verify_js_1 = require(\"../jws/compact/verify.js\");\nconst jwt_claims_set_js_1 = require(\"../lib/jwt_claims_set.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nasync function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await (0, verify_js_1.compactVerify)(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new errors_js_1.JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = (0, jwt_claims_set_js_1.default)(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\nexports.jwtVerify = jwtVerify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jwtDecrypt = void 0;\nconst decrypt_js_1 = require(\"../jwe/compact/decrypt.js\");\nconst jwt_claims_set_js_1 = require(\"../lib/jwt_claims_set.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nasync function jwtDecrypt(jwt, key, options) {\n    const decrypted = await (0, decrypt_js_1.compactDecrypt)(jwt, key, options);\n    const payload = (0, jwt_claims_set_js_1.default)(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\nexports.jwtDecrypt = jwtDecrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompactEncrypt = void 0;\nconst encrypt_js_1 = require(\"../flattened/encrypt.js\");\nclass CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new encrypt_js_1.FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\nexports.CompactEncrypt = CompactEncrypt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FlattenedSign = void 0;\nconst base64url_js_1 = require(\"../../runtime/base64url.js\");\nconst sign_js_1 = require(\"../../runtime/sign.js\");\nconst is_disjoint_js_1 = require(\"../../lib/is_disjoint.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../../lib/buffer_utils.js\");\nconst check_key_type_js_1 = require(\"../../lib/check_key_type.js\");\nconst validate_crit_js_1 = require(\"../../lib/validate_crit.js\");\nclass FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new errors_js_1.JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader)) {\n            throw new errors_js_1.JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = (0, validate_crit_js_1.default)(errors_js_1.JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new errors_js_1.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new errors_js_1.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        (0, check_key_type_js_1.default)(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = buffer_utils_js_1.encoder.encode('');\n        }\n        const data = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode('.'), payload);\n        const signature = await (0, sign_js_1.default)(alg, key, data);\n        const jws = {\n            signature: (0, base64url_js_1.encode)(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = buffer_utils_js_1.decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = buffer_utils_js_1.decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\nexports.FlattenedSign = FlattenedSign;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompactSign = void 0;\nconst sign_js_1 = require(\"../flattened/sign.js\");\nclass CompactSign {\n    constructor(payload) {\n        this._flattened = new sign_js_1.FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\nexports.CompactSign = CompactSign;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeneralSign = void 0;\nconst sign_js_1 = require(\"../flattened/sign.js\");\nconst errors_js_1 = require(\"../../util/errors.js\");\nclass IndividualSignature {\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nclass GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new errors_js_1.JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new sign_js_1.FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new errors_js_1.JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\nexports.GeneralSign = GeneralSign;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProduceJWT = void 0;\nconst epoch_js_1 = require(\"../lib/epoch.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nconst secs_js_1 = require(\"../lib/secs.js\");\nclass ProduceJWT {\n    constructor(payload) {\n        if (!(0, is_object_js_1.default)(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: input };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: (0, epoch_js_1.default)(new Date()) + (0, secs_js_1.default)(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: input };\n        }\n        else {\n            this._payload = { ...this._payload, exp: (0, epoch_js_1.default)(new Date()) + (0, secs_js_1.default)(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: (0, epoch_js_1.default)(new Date()) };\n        }\n        else {\n            this._payload = { ...this._payload, iat: input };\n        }\n        return this;\n    }\n}\nexports.ProduceJWT = ProduceJWT;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignJWT = void 0;\nconst sign_js_1 = require(\"../jws/compact/sign.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst produce_js_1 = require(\"./produce.js\");\nclass SignJWT extends produce_js_1.ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new sign_js_1.CompactSign(buffer_utils_js_1.encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new errors_js_1.JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\nexports.SignJWT = SignJWT;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EncryptJWT = void 0;\nconst encrypt_js_1 = require(\"../jwe/compact/encrypt.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst produce_js_1 = require(\"./produce.js\");\nclass EncryptJWT extends produce_js_1.ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new encrypt_js_1.CompactEncrypt(buffer_utils_js_1.encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\nexports.EncryptJWT = EncryptJWT;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateJwkThumbprintUri = exports.calculateJwkThumbprint = void 0;\nconst digest_js_1 = require(\"../runtime/digest.js\");\nconst base64url_js_1 = require(\"../runtime/base64url.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new errors_js_1.JWKInvalid(`${description} missing or invalid`);\n    }\n};\nasync function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!(0, is_object_js_1.default)(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = buffer_utils_js_1.encoder.encode(JSON.stringify(components));\n    return (0, base64url_js_1.encode)(await (0, digest_js_1.default)(digestAlgorithm, data));\n}\nexports.calculateJwkThumbprint = calculateJwkThumbprint;\nasync function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\nexports.calculateJwkThumbprintUri = calculateJwkThumbprintUri;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmbeddedJWK = void 0;\nconst import_js_1 = require(\"../key/import.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nasync function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token === null || token === void 0 ? void 0 : token.header,\n    };\n    if (!(0, is_object_js_1.default)(joseHeader.jwk)) {\n        throw new errors_js_1.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await (0, import_js_1.importJWK)({ ...joseHeader.jwk, ext: true }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new errors_js_1.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\nexports.EmbeddedJWK = EmbeddedJWK;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLocalJWKSet = exports.LocalJWKSet = exports.isJWKSLike = void 0;\nconst import_js_1 = require(\"../key/import.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nexports.isJWKSLike = isJWKSLike;\nfunction isJWKLike(key) {\n    return (0, is_object_js_1.default)(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new errors_js_1.JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token === null || token === void 0 ? void 0 : token.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new errors_js_1.JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            const error = new errors_js_1.JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch {\n                        continue;\n                    }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nexports.LocalJWKSet = LocalJWKSet;\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await (0, import_js_1.importJWK)({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new errors_js_1.JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nfunction createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\nexports.createLocalJWKSet = createLocalJWKSet;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst events_1 = require(\"events\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst fetchJwks = async (url, timeout, options) => {\n    let get;\n    switch (url.protocol) {\n        case 'https:':\n            get = https.get;\n            break;\n        case 'http:':\n            get = http.get;\n            break;\n        default:\n            throw new TypeError('Unsupported URL protocol.');\n    }\n    const { agent, headers } = options;\n    const req = get(url.href, {\n        agent,\n        timeout,\n        headers,\n    });\n    const [response] = (await Promise.race([(0, events_1.once)(req, 'response'), (0, events_1.once)(req, 'timeout')]));\n    if (!response) {\n        req.destroy();\n        throw new errors_js_1.JWKSTimeout();\n    }\n    if (response.statusCode !== 200) {\n        throw new errors_js_1.JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    const parts = [];\n    for await (const part of response) {\n        parts.push(part);\n    }\n    try {\n        return JSON.parse(buffer_utils_js_1.decoder.decode((0, buffer_utils_js_1.concat)(...parts)));\n    }\n    catch {\n        throw new errors_js_1.JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexports.default = fetchJwks;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRemoteJWKSet = void 0;\nconst fetch_jwks_js_1 = require(\"../runtime/fetch_jwks.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst local_js_1 = require(\"./local.js\");\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nclass RemoteJWKSet extends local_js_1.LocalJWKSet {\n    constructor(url, options) {\n        super({ keys: [] });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent, headers: options === null || options === void 0 ? void 0 : options.headers };\n        this._timeoutDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === 'number' ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof errors_js_1.JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        this._pendingFetch || (this._pendingFetch = (0, fetch_jwks_js_1.default)(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            if (!(0, local_js_1.isJWKSLike)(json)) {\n                throw new errors_js_1.JWKSInvalid('JSON Web Key Set malformed');\n            }\n            this._jwks = { keys: json.keys };\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nfunction createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\nexports.createRemoteJWKSet = createRemoteJWKSet;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnsecuredJWT = void 0;\nconst base64url = require(\"../runtime/base64url.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst jwt_claims_set_js_1 = require(\"../lib/jwt_claims_set.js\");\nconst produce_js_1 = require(\"./produce.js\");\nclass UnsecuredJWT extends produce_js_1.ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new errors_js_1.JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new errors_js_1.JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(buffer_utils_js_1.decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch {\n            throw new errors_js_1.JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = (0, jwt_claims_set_js_1.default)(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\nexports.UnsecuredJWT = UnsecuredJWT;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst base64url = require(\"../runtime/base64url.js\");\nexports.encode = base64url.encode;\nexports.decode = base64url.decode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeProtectedHeader = void 0;\nconst base64url_js_1 = require(\"./base64url.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nfunction decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(buffer_utils_js_1.decoder.decode((0, base64url_js_1.decode)(protectedB64u)));\n        if (!(0, is_object_js_1.default)(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\nexports.decodeProtectedHeader = decodeProtectedHeader;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeJwt = void 0;\nconst base64url_js_1 = require(\"./base64url.js\");\nconst buffer_utils_js_1 = require(\"../lib/buffer_utils.js\");\nconst is_object_js_1 = require(\"../lib/is_object.js\");\nconst errors_js_1 = require(\"./errors.js\");\nfunction decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new errors_js_1.JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new errors_js_1.JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new errors_js_1.JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new errors_js_1.JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = (0, base64url_js_1.decode)(payload);\n    }\n    catch {\n        throw new errors_js_1.JWTInvalid('Failed to parse the base64url encoded payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(buffer_utils_js_1.decoder.decode(decoded));\n    }\n    catch {\n        throw new errors_js_1.JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!(0, is_object_js_1.default)(result))\n        throw new errors_js_1.JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\nexports.decodeJwt = decodeJwt;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateKeyPair = exports.generateSecret = void 0;\nconst crypto_1 = require(\"crypto\");\nconst util_1 = require(\"util\");\nconst random_js_1 = require(\"./random.js\");\nconst check_modulus_length_js_1 = require(\"./check_modulus_length.js\");\nconst errors_js_1 = require(\"../util/errors.js\");\nconst generate = (0, util_1.promisify)(crypto_1.generateKeyPair);\nasync function generateSecret(alg, options) {\n    let length;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            break;\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (0, crypto_1.createSecretKey)((0, random_js_1.default)(new Uint8Array(length >> 3)));\n}\nexports.generateSecret = generateSecret;\nasync function generateKeyPair(alg, options) {\n    var _a, _b;\n    switch (alg) {\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n        case 'RSA1_5': {\n            const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n            if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n                throw new errors_js_1.JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n            }\n            const keypair = await generate('rsa', {\n                modulusLength,\n                publicExponent: 0x10001,\n            });\n            (0, check_modulus_length_js_1.setModulusLength)(keypair.privateKey, modulusLength);\n            (0, check_modulus_length_js_1.setModulusLength)(keypair.publicKey, modulusLength);\n            return keypair;\n        }\n        case 'ES256':\n            return generate('ec', { namedCurve: 'P-256' });\n        case 'ES256K':\n            return generate('ec', { namedCurve: 'secp256k1' });\n        case 'ES384':\n            return generate('ec', { namedCurve: 'P-384' });\n        case 'ES512':\n            return generate('ec', { namedCurve: 'P-521' });\n        case 'EdDSA': {\n            switch (options === null || options === void 0 ? void 0 : options.crv) {\n                case undefined:\n                case 'Ed25519':\n                    return generate('ed25519');\n                case 'Ed448':\n                    return generate('ed448');\n                default:\n                    throw new errors_js_1.JOSENotSupported('Invalid or unsupported crv option provided, supported values are Ed25519 and Ed448');\n            }\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW':\n            const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : 'P-256';\n            switch (crv) {\n                case undefined:\n                case 'P-256':\n                case 'P-384':\n                case 'P-521':\n                    return generate('ec', { namedCurve: crv });\n                case 'X25519':\n                    return generate('x25519');\n                case 'X448':\n                    return generate('x448');\n                default:\n                    throw new errors_js_1.JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n}\nexports.generateKeyPair = generateKeyPair;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateKeyPair = void 0;\nconst generate_js_1 = require(\"../runtime/generate.js\");\nasync function generateKeyPair(alg, options) {\n    return (0, generate_js_1.generateKeyPair)(alg, options);\n}\nexports.generateKeyPair = generateKeyPair;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateSecret = void 0;\nconst generate_js_1 = require(\"../runtime/generate.js\");\nasync function generateSecret(alg, options) {\n    return (0, generate_js_1.generateSecret)(alg, options);\n}\nexports.generateSecret = generateSecret;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64url = exports.generateSecret = exports.generateKeyPair = exports.errors = exports.decodeJwt = exports.decodeProtectedHeader = exports.importJWK = exports.importX509 = exports.importPKCS8 = exports.importSPKI = exports.exportJWK = exports.exportSPKI = exports.exportPKCS8 = exports.UnsecuredJWT = exports.createRemoteJWKSet = exports.createLocalJWKSet = exports.EmbeddedJWK = exports.calculateJwkThumbprintUri = exports.calculateJwkThumbprint = exports.EncryptJWT = exports.SignJWT = exports.GeneralSign = exports.FlattenedSign = exports.CompactSign = exports.FlattenedEncrypt = exports.CompactEncrypt = exports.jwtDecrypt = exports.jwtVerify = exports.generalVerify = exports.flattenedVerify = exports.compactVerify = exports.GeneralEncrypt = exports.generalDecrypt = exports.flattenedDecrypt = exports.compactDecrypt = void 0;\nvar decrypt_js_1 = require(\"./jwe/compact/decrypt.js\");\nObject.defineProperty(exports, \"compactDecrypt\", { enumerable: true, get: function () { return decrypt_js_1.compactDecrypt; } });\nvar decrypt_js_2 = require(\"./jwe/flattened/decrypt.js\");\nObject.defineProperty(exports, \"flattenedDecrypt\", { enumerable: true, get: function () { return decrypt_js_2.flattenedDecrypt; } });\nvar decrypt_js_3 = require(\"./jwe/general/decrypt.js\");\nObject.defineProperty(exports, \"generalDecrypt\", { enumerable: true, get: function () { return decrypt_js_3.generalDecrypt; } });\nvar encrypt_js_1 = require(\"./jwe/general/encrypt.js\");\nObject.defineProperty(exports, \"GeneralEncrypt\", { enumerable: true, get: function () { return encrypt_js_1.GeneralEncrypt; } });\nvar verify_js_1 = require(\"./jws/compact/verify.js\");\nObject.defineProperty(exports, \"compactVerify\", { enumerable: true, get: function () { return verify_js_1.compactVerify; } });\nvar verify_js_2 = require(\"./jws/flattened/verify.js\");\nObject.defineProperty(exports, \"flattenedVerify\", { enumerable: true, get: function () { return verify_js_2.flattenedVerify; } });\nvar verify_js_3 = require(\"./jws/general/verify.js\");\nObject.defineProperty(exports, \"generalVerify\", { enumerable: true, get: function () { return verify_js_3.generalVerify; } });\nvar verify_js_4 = require(\"./jwt/verify.js\");\nObject.defineProperty(exports, \"jwtVerify\", { enumerable: true, get: function () { return verify_js_4.jwtVerify; } });\nvar decrypt_js_4 = require(\"./jwt/decrypt.js\");\nObject.defineProperty(exports, \"jwtDecrypt\", { enumerable: true, get: function () { return decrypt_js_4.jwtDecrypt; } });\nvar encrypt_js_2 = require(\"./jwe/compact/encrypt.js\");\nObject.defineProperty(exports, \"CompactEncrypt\", { enumerable: true, get: function () { return encrypt_js_2.CompactEncrypt; } });\nvar encrypt_js_3 = require(\"./jwe/flattened/encrypt.js\");\nObject.defineProperty(exports, \"FlattenedEncrypt\", { enumerable: true, get: function () { return encrypt_js_3.FlattenedEncrypt; } });\nvar sign_js_1 = require(\"./jws/compact/sign.js\");\nObject.defineProperty(exports, \"CompactSign\", { enumerable: true, get: function () { return sign_js_1.CompactSign; } });\nvar sign_js_2 = require(\"./jws/flattened/sign.js\");\nObject.defineProperty(exports, \"FlattenedSign\", { enumerable: true, get: function () { return sign_js_2.FlattenedSign; } });\nvar sign_js_3 = require(\"./jws/general/sign.js\");\nObject.defineProperty(exports, \"GeneralSign\", { enumerable: true, get: function () { return sign_js_3.GeneralSign; } });\nvar sign_js_4 = require(\"./jwt/sign.js\");\nObject.defineProperty(exports, \"SignJWT\", { enumerable: true, get: function () { return sign_js_4.SignJWT; } });\nvar encrypt_js_4 = require(\"./jwt/encrypt.js\");\nObject.defineProperty(exports, \"EncryptJWT\", { enumerable: true, get: function () { return encrypt_js_4.EncryptJWT; } });\nvar thumbprint_js_1 = require(\"./jwk/thumbprint.js\");\nObject.defineProperty(exports, \"calculateJwkThumbprint\", { enumerable: true, get: function () { return thumbprint_js_1.calculateJwkThumbprint; } });\nObject.defineProperty(exports, \"calculateJwkThumbprintUri\", { enumerable: true, get: function () { return thumbprint_js_1.calculateJwkThumbprintUri; } });\nvar embedded_js_1 = require(\"./jwk/embedded.js\");\nObject.defineProperty(exports, \"EmbeddedJWK\", { enumerable: true, get: function () { return embedded_js_1.EmbeddedJWK; } });\nvar local_js_1 = require(\"./jwks/local.js\");\nObject.defineProperty(exports, \"createLocalJWKSet\", { enumerable: true, get: function () { return local_js_1.createLocalJWKSet; } });\nvar remote_js_1 = require(\"./jwks/remote.js\");\nObject.defineProperty(exports, \"createRemoteJWKSet\", { enumerable: true, get: function () { return remote_js_1.createRemoteJWKSet; } });\nvar unsecured_js_1 = require(\"./jwt/unsecured.js\");\nObject.defineProperty(exports, \"UnsecuredJWT\", { enumerable: true, get: function () { return unsecured_js_1.UnsecuredJWT; } });\nvar export_js_1 = require(\"./key/export.js\");\nObject.defineProperty(exports, \"exportPKCS8\", { enumerable: true, get: function () { return export_js_1.exportPKCS8; } });\nObject.defineProperty(exports, \"exportSPKI\", { enumerable: true, get: function () { return export_js_1.exportSPKI; } });\nObject.defineProperty(exports, \"exportJWK\", { enumerable: true, get: function () { return export_js_1.exportJWK; } });\nvar import_js_1 = require(\"./key/import.js\");\nObject.defineProperty(exports, \"importSPKI\", { enumerable: true, get: function () { return import_js_1.importSPKI; } });\nObject.defineProperty(exports, \"importPKCS8\", { enumerable: true, get: function () { return import_js_1.importPKCS8; } });\nObject.defineProperty(exports, \"importX509\", { enumerable: true, get: function () { return import_js_1.importX509; } });\nObject.defineProperty(exports, \"importJWK\", { enumerable: true, get: function () { return import_js_1.importJWK; } });\nvar decode_protected_header_js_1 = require(\"./util/decode_protected_header.js\");\nObject.defineProperty(exports, \"decodeProtectedHeader\", { enumerable: true, get: function () { return decode_protected_header_js_1.decodeProtectedHeader; } });\nvar decode_jwt_js_1 = require(\"./util/decode_jwt.js\");\nObject.defineProperty(exports, \"decodeJwt\", { enumerable: true, get: function () { return decode_jwt_js_1.decodeJwt; } });\nexports.errors = require(\"./util/errors.js\");\nvar generate_key_pair_js_1 = require(\"./key/generate_key_pair.js\");\nObject.defineProperty(exports, \"generateKeyPair\", { enumerable: true, get: function () { return generate_key_pair_js_1.generateKeyPair; } });\nvar generate_secret_js_1 = require(\"./key/generate_secret.js\");\nObject.defineProperty(exports, \"generateSecret\", { enumerable: true, get: function () { return generate_secret_js_1.generateSecret; } });\nexports.base64url = require(\"./util/base64url.js\");\n", "const crypto = require('crypto');\n\nconst [major, minor] = process.version.substring(1).split('.').map((x) => parseInt(x, 10));\nconst xofOutputLength = major > 12 || (major === 12 && minor >= 8);\nconst shake256 = xofOutputLength && crypto.getHashes().includes('shake256');\n\nmodule.exports = shake256;\n", "const { strict: assert } = require('assert');\nconst { createHash } = require('crypto');\nconst { format } = require('util');\n\nconst shake256 = require('./shake256');\n\nlet encode;\nif (Buffer.isEncoding('base64url')) {\n  encode = (input) => input.toString('base64url');\n} else {\n  const fromBase64 = (base64) => base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n  encode = (input) => fromBase64(input.toString('base64'));\n}\n\n/** SPECIFICATION\n * Its (_hash) value is the base64url encoding of the left-most half of the hash of the octets of\n * the ASCII representation of the token value, where the hash algorithm used is the hash algorithm\n * used in the alg Header Parameter of the ID Token's JOSE Header. For instance, if the alg is\n * RS256, hash the token value with SHA-256, then take the left-most 128 bits and base64url encode\n * them. The _hash value is a case sensitive string.\n */\n\n/**\n * @name getHash\n * @api private\n *\n * returns the sha length based off the JOSE alg heade value, defaults to sha256\n *\n * @param token {String} token value to generate the hash from\n * @param alg {String} ID Token JOSE header alg value (i.e. RS256, HS384, ES512, PS256)\n * @param [crv] {String} For EdDSA the curve decides what hash algorithm is used. Required for EdDSA\n */\nfunction getHash(alg, crv) {\n  switch (alg) {\n    case 'HS256':\n    case 'RS256':\n    case 'PS256':\n    case 'ES256':\n    case 'ES256K':\n      return createHash('sha256');\n\n    case 'HS384':\n    case 'RS384':\n    case 'PS384':\n    case 'ES384':\n      return createHash('sha384');\n\n    case 'HS512':\n    case 'RS512':\n    case 'PS512':\n    case 'ES512':\n      return createHash('sha512');\n\n    case 'EdDSA':\n      switch (crv) {\n        case 'Ed25519':\n          return createHash('sha512');\n        case 'Ed448':\n          if (!shake256) {\n            throw new TypeError('Ed448 *_hash calculation is not supported in your Node.js runtime version');\n          }\n\n          return createHash('shake256', { outputLength: 114 });\n        default:\n          throw new TypeError('unrecognized or invalid EdDSA curve provided');\n      }\n\n    default:\n      throw new TypeError('unrecognized or invalid JWS algorithm provided');\n  }\n}\n\nfunction generate(token, alg, crv) {\n  const digest = getHash(alg, crv).update(token).digest();\n  return encode(digest.slice(0, digest.length / 2));\n}\n\nfunction validate(names, actual, source, alg, crv) {\n  if (typeof names.claim !== 'string' || !names.claim) {\n    throw new TypeError('names.claim must be a non-empty string');\n  }\n\n  if (typeof names.source !== 'string' || !names.source) {\n    throw new TypeError('names.source must be a non-empty string');\n  }\n\n  assert(typeof actual === 'string' && actual, `${names.claim} must be a non-empty string`);\n  assert(typeof source === 'string' && source, `${names.source} must be a non-empty string`);\n\n  let expected;\n  let msg;\n  try {\n    expected = generate(source, alg, crv);\n  } catch (err) {\n    msg = format('%s could not be validated (%s)', names.claim, err.message);\n  }\n\n  msg = msg || format('%s mismatch, expected %s, got: %s', names.claim, expected, actual);\n\n  assert.equal(expected, actual, msg);\n}\n\nmodule.exports = {\n  validate,\n  generate,\n};\n", "const util = require('util');\nconst crypto = require('crypto');\n\nmodule.exports = util.types.isKeyObject || ((obj) => obj && obj instanceof crypto.KeyObject);\n", "let encode;\nif (Buffer.isEncoding('base64url')) {\n  encode = (input, encoding = 'utf8') => Buffer.from(input, encoding).toString('base64url');\n} else {\n  const fromBase64 = (base64) => base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n  encode = (input, encoding = 'utf8') =>\n    fromBase64(Buffer.from(input, encoding).toString('base64'));\n}\n\nconst decode = (input) => Buffer.from(input, 'base64');\n\nmodule.exports.decode = decode;\nmodule.exports.encode = encode;\n", "const base64url = require('./base64url');\n\nmodule.exports = (token) => {\n  if (typeof token !== 'string' || !token) {\n    throw new TypeError('JWT must be a string');\n  }\n\n  const { 0: header, 1: payload, 2: signature, length } = token.split('.');\n\n  if (length === 5) {\n    throw new TypeError('encrypted JWTs cannot be decoded');\n  }\n\n  if (length !== 3) {\n    throw new Error('JWTs must have three components');\n  }\n\n  try {\n    return {\n      header: JSON.parse(base64url.decode(header)),\n      payload: JSON.parse(base64url.decode(payload)),\n      signature,\n    };\n  } catch (err) {\n    throw new Error('JWT is malformed');\n  }\n};\n", "module.exports = (a) => !!a && a.constructor === Object;\n", "const isPlainObject = require('./is_plain_object');\n\nfunction defaults(deep, target, ...sources) {\n  for (const source of sources) {\n    if (!isPlainObject(source)) {\n      continue;\n    }\n    for (const [key, value] of Object.entries(source)) {\n      /* istanbul ignore if */\n      if (key === '__proto__' || key === 'constructor') {\n        continue;\n      }\n      if (typeof target[key] === 'undefined' && typeof value !== 'undefined') {\n        target[key] = value;\n      }\n\n      if (deep && isPlainObject(target[key]) && isPlainObject(value)) {\n        defaults(true, target[key], value);\n      }\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = defaults.bind(undefined, false);\nmodule.exports.deep = defaults.bind(undefined, true);\n", "const REGEXP = /(\\w+)=(\"[^\"]*\")/g;\n\nmodule.exports = (wwwAuthenticate) => {\n  const params = {};\n  try {\n    while (REGEXP.exec(wwwAuthenticate) !== null) {\n      if (RegExp.$1 && RegExp.$2) {\n        params[RegExp.$1] = RegExp.$2.slice(1, -1);\n      }\n    }\n  } catch (err) {}\n\n  return params;\n};\n", "function assertSigningAlgValuesSupport(endpoint, issuer, properties) {\n  if (!issuer[`${endpoint}_endpoint`]) return;\n\n  const eam = `${endpoint}_endpoint_auth_method`;\n  const easa = `${endpoint}_endpoint_auth_signing_alg`;\n  const easavs = `${endpoint}_endpoint_auth_signing_alg_values_supported`;\n\n  if (properties[eam] && properties[eam].endsWith('_jwt') && !properties[easa] && !issuer[easavs]) {\n    throw new TypeError(\n      `${easavs} must be configured on the issuer if ${easa} is not defined on a client`,\n    );\n  }\n}\n\nfunction assertIssuerConfiguration(issuer, endpoint) {\n  if (!issuer[endpoint]) {\n    throw new TypeError(`${endpoint} must be configured on the issuer`);\n  }\n}\n\nmodule.exports = {\n  assertSigningAlgValuesSupport,\n  assertIssuerConfiguration,\n};\n", "module.exports = function pick(object, ...paths) {\n  const obj = {};\n  for (const path of paths) {\n    if (object[path] !== undefined) {\n      obj[path] = object[path];\n    }\n  }\n  return obj;\n};\n", "const { STATUS_CODES } = require('http');\nconst { format } = require('util');\n\nconst { OPError } = require('../errors');\nconst parseWwwAuthenticate = require('./www_authenticate_parser');\n\nconst throwAuthenticateErrors = (response) => {\n  const params = parseWwwAuthenticate(response.headers['www-authenticate']);\n\n  if (params.error) {\n    throw new OPError(params, response);\n  }\n};\n\nconst isStandardBodyError = (response) => {\n  let result = false;\n  try {\n    let jsonbody;\n    if (typeof response.body !== 'object' || Buffer.isBuffer(response.body)) {\n      jsonbody = JSON.parse(response.body);\n    } else {\n      jsonbody = response.body;\n    }\n    result = typeof jsonbody.error === 'string' && jsonbody.error.length;\n    if (result) Object.defineProperty(response, 'body', { value: jsonbody, configurable: true });\n  } catch (err) {}\n\n  return result;\n};\n\nfunction processResponse(response, { statusCode = 200, body = true, bearer = false } = {}) {\n  if (response.statusCode !== statusCode) {\n    if (bearer) {\n      throwAuthenticateErrors(response);\n    }\n\n    if (isStandardBodyError(response)) {\n      throw new OPError(response.body, response);\n    }\n\n    throw new OPError(\n      {\n        error: format(\n          'expected %i %s, got: %i %s',\n          statusCode,\n          STATUS_CODES[statusCode],\n          response.statusCode,\n          STATUS_CODES[response.statusCode],\n        ),\n      },\n      response,\n    );\n  }\n\n  if (body && !response.body) {\n    throw new OPError(\n      {\n        error: format(\n          'expected %i %s with body but no body was returned',\n          statusCode,\n          STATUS_CODES[statusCode],\n        ),\n      },\n      response,\n    );\n  }\n\n  return response.body;\n}\n\nmodule.exports = processResponse;\n", "module.exports = () => Math.floor(Date.now() / 1000);\n", "const base64url = require('./helpers/base64url');\nconst now = require('./helpers/unix_timestamp');\n\nclass TokenSet {\n  constructor(values) {\n    Object.assign(this, values);\n    const { constructor, ...properties } = Object.getOwnPropertyDescriptors(\n      this.constructor.prototype,\n    );\n\n    Object.defineProperties(this, properties);\n  }\n\n  set expires_in(value) {\n    this.expires_at = now() + Number(value);\n  }\n\n  get expires_in() {\n    return Math.max.apply(null, [this.expires_at - now(), 0]);\n  }\n\n  expired() {\n    return this.expires_in === 0;\n  }\n\n  claims() {\n    if (!this.id_token) {\n      throw new TypeError('id_token not present in TokenSet');\n    }\n\n    return JSON.parse(base64url.decode(this.id_token.split('.')[1]));\n  }\n}\n\nmodule.exports = TokenSet;\n", "const { createHash, randomBytes } = require('crypto');\n\nconst base64url = require('./base64url');\n\nconst random = (bytes = 32) => base64url.encode(randomBytes(bytes));\n\nmodule.exports = {\n  random,\n  state: random,\n  nonce: random,\n  codeVerifier: random,\n  codeChallenge: (codeVerifier) =>\n    base64url.encode(createHash('sha256').update(codeVerifier).digest()),\n};\n", "'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n", "'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n", "'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n", "{\n  \"name\": \"openid-client\",\n  \"version\": \"5.4.2\",\n  \"description\": \"OpenID Connect Relying Party (RP, Client) implementation for Node.js runtime, supports passportjs\",\n  \"keywords\": [\n    \"auth\",\n    \"authentication\",\n    \"basic\",\n    \"certified\",\n    \"client\",\n    \"connect\",\n    \"dynamic\",\n    \"electron\",\n    \"hybrid\",\n    \"identity\",\n    \"implicit\",\n    \"oauth\",\n    \"oauth2\",\n    \"oidc\",\n    \"openid\",\n    \"passport\",\n    \"relying party\",\n    \"strategy\"\n  ],\n  \"homepage\": \"https://github.com/panva/node-openid-client\",\n  \"repository\": \"panva/node-openid-client\",\n  \"funding\": {\n    \"url\": \"https://github.com/sponsors/panva\"\n  },\n  \"license\": \"MIT\",\n  \"author\": \"Filip Skokan <panva.ip@gmail.com>\",\n  \"exports\": {\n    \"types\": \"./types/index.d.ts\",\n    \"import\": \"./lib/index.mjs\",\n    \"require\": \"./lib/index.js\"\n  },\n  \"main\": \"./lib/index.js\",\n  \"types\": \"./types/index.d.ts\",\n  \"files\": [\n    \"lib\",\n    \"types/index.d.ts\"\n  ],\n  \"scripts\": {\n    \"format\": \"npx prettier --loglevel silent --write ./lib ./test ./certification ./types\",\n    \"test\": \"mocha test/**/*.test.js\"\n  },\n  \"dependencies\": {\n    \"jose\": \"^4.14.1\",\n    \"lru-cache\": \"^6.0.0\",\n    \"object-hash\": \"^2.2.0\",\n    \"oidc-token-hash\": \"^5.0.3\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^16.18.24\",\n    \"@types/passport\": \"^1.0.12\",\n    \"base64url\": \"^3.0.1\",\n    \"chai\": \"^4.3.7\",\n    \"jose2\": \"npm:jose@^2.0.6\",\n    \"mocha\": \"^10.2.0\",\n    \"nock\": \"^13.3.0\",\n    \"prettier\": \"^2.8.8\",\n    \"readable-mock-req\": \"^0.2.2\",\n    \"sinon\": \"^9.2.4\",\n    \"timekeeper\": \"^2.2.0\"\n  },\n  \"standard-version\": {\n    \"scripts\": {\n      \"postchangelog\": \"sed -i '' -e 's/### \\\\[/## [/g' CHANGELOG.md\"\n    },\n    \"types\": [\n      {\n        \"type\": \"feat\",\n        \"section\": \"Features\"\n      },\n      {\n        \"type\": \"fix\",\n        \"section\": \"Fixes\"\n      },\n      {\n        \"type\": \"chore\",\n        \"hidden\": true\n      },\n      {\n        \"type\": \"docs\",\n        \"hidden\": true\n      },\n      {\n        \"type\": \"style\",\n        \"hidden\": true\n      },\n      {\n        \"type\": \"refactor\",\n        \"section\": \"Refactor\",\n        \"hidden\": false\n      },\n      {\n        \"type\": \"perf\",\n        \"section\": \"Performance\",\n        \"hidden\": false\n      },\n      {\n        \"type\": \"test\",\n        \"hidden\": true\n      }\n    ]\n  }\n}\n", "const HTTP_OPTIONS = Symbol();\nconst CLOCK_TOLERANCE = Symbol();\n\nmodule.exports = {\n  CLOCK_TOLERANCE,\n  HTTP_OPTIONS,\n};\n", "const assert = require('assert');\nconst querystring = require('querystring');\nconst http = require('http');\nconst https = require('https');\nconst { once } = require('events');\nconst { URL } = require('url');\n\nconst LRU = require('lru-cache');\n\nconst pkg = require('../../package.json');\nconst { RPError } = require('../errors');\n\nconst pick = require('./pick');\nconst { deep: defaultsDeep } = require('./defaults');\nconst { HTTP_OPTIONS } = require('./consts');\n\nlet DEFAULT_HTTP_OPTIONS;\nconst NQCHAR = /^[\\x21\\x23-\\x5B\\x5D-\\x7E]+$/;\n\nconst allowed = [\n  'agent',\n  'ca',\n  'cert',\n  'crl',\n  'headers',\n  'key',\n  'lookup',\n  'passphrase',\n  'pfx',\n  'timeout',\n];\n\nconst setDefaults = (props, options) => {\n  DEFAULT_HTTP_OPTIONS = defaultsDeep(\n    {},\n    props.length ? pick(options, ...props) : options,\n    DEFAULT_HTTP_OPTIONS,\n  );\n};\n\nsetDefaults([], {\n  headers: { 'User-Agent': `${pkg.name}/${pkg.version} (${pkg.homepage})` },\n  timeout: 3500,\n});\n\nfunction send(req, body, contentType) {\n  if (contentType) {\n    req.removeHeader('content-type');\n    req.setHeader('content-type', contentType);\n  }\n  if (body) {\n    req.removeHeader('content-length');\n    req.setHeader('content-length', Buffer.byteLength(body));\n    req.write(body);\n  }\n  req.end();\n}\n\nconst nonces = new LRU({ max: 100 });\n\nmodule.exports = async function request(options, { accessToken, mTLS = false, DPoP } = {}) {\n  let url;\n  try {\n    url = new URL(options.url);\n    delete options.url;\n    assert(/^(https?:)$/.test(url.protocol));\n  } catch (err) {\n    throw new TypeError('only valid absolute URLs can be requested');\n  }\n  const optsFn = this[HTTP_OPTIONS];\n  let opts = options;\n\n  const nonceKey = `${url.origin}${url.pathname}`;\n  if (DPoP && 'dpopProof' in this) {\n    opts.headers = opts.headers || {};\n    opts.headers.DPoP = await this.dpopProof(\n      {\n        htu: `${url.origin}${url.pathname}`,\n        htm: options.method,\n        nonce: nonces.get(nonceKey),\n      },\n      DPoP,\n      accessToken,\n    );\n  }\n\n  let userOptions;\n  if (optsFn) {\n    userOptions = pick(\n      optsFn.call(this, url, defaultsDeep({}, opts, DEFAULT_HTTP_OPTIONS)),\n      ...allowed,\n    );\n  }\n  opts = defaultsDeep({}, userOptions, opts, DEFAULT_HTTP_OPTIONS);\n\n  if (mTLS && !opts.pfx && !(opts.key && opts.cert)) {\n    throw new TypeError('mutual-TLS certificate and key not set');\n  }\n\n  if (opts.searchParams) {\n    for (const [key, value] of Object.entries(opts.searchParams)) {\n      url.searchParams.delete(key);\n      url.searchParams.set(key, value);\n    }\n  }\n\n  let responseType;\n  let form;\n  let json;\n  let body;\n  ({ form, responseType, json, body, ...opts } = opts);\n\n  for (const [key, value] of Object.entries(opts.headers || {})) {\n    if (value === undefined) {\n      delete opts.headers[key];\n    }\n  }\n\n  let response;\n  const req = (url.protocol === 'https:' ? https.request : http.request)(url.href, opts);\n  return (async () => {\n    if (json) {\n      send(req, JSON.stringify(json), 'application/json');\n    } else if (form) {\n      send(req, querystring.stringify(form), 'application/x-www-form-urlencoded');\n    } else if (body) {\n      send(req, body);\n    } else {\n      send(req);\n    }\n\n    [response] = await Promise.race([once(req, 'response'), once(req, 'timeout')]);\n\n    // timeout reached\n    if (!response) {\n      req.destroy();\n      throw new RPError(`outgoing request timed out after ${opts.timeout}ms`);\n    }\n\n    const parts = [];\n\n    for await (const part of response) {\n      parts.push(part);\n    }\n\n    if (parts.length) {\n      switch (responseType) {\n        case 'json': {\n          Object.defineProperty(response, 'body', {\n            get() {\n              let value = Buffer.concat(parts);\n              try {\n                value = JSON.parse(value);\n              } catch (err) {\n                Object.defineProperty(err, 'response', { value: response });\n                throw err;\n              } finally {\n                Object.defineProperty(response, 'body', { value, configurable: true });\n              }\n              return value;\n            },\n            configurable: true,\n          });\n          break;\n        }\n        case undefined:\n        case 'buffer': {\n          Object.defineProperty(response, 'body', {\n            get() {\n              const value = Buffer.concat(parts);\n              Object.defineProperty(response, 'body', { value, configurable: true });\n              return value;\n            },\n            configurable: true,\n          });\n          break;\n        }\n        default:\n          throw new TypeError('unsupported responseType request option');\n      }\n    }\n\n    return response;\n  })()\n    .catch((err) => {\n      if (response) Object.defineProperty(err, 'response', { value: response });\n      throw err;\n    })\n    .finally(() => {\n      const dpopNonce = response && response.headers['dpop-nonce'];\n      if (dpopNonce && NQCHAR.test(dpopNonce)) {\n        nonces.set(nonceKey, dpopNonce);\n      }\n    });\n};\n\nmodule.exports.setDefaults = setDefaults.bind(undefined, allowed);\n", "module.exports.keystores = new WeakMap();\n", "module.exports = globalThis.structuredClone || ((obj) => JSON.parse(JSON.stringify(obj)));\n", "const jose = require('jose');\n\nconst clone = require('./deep_clone');\nconst isPlainObject = require('./is_plain_object');\nconst isKeyObject = require('./is_key_object');\n\nconst internal = Symbol();\n\nfunction fauxAlg(kty) {\n  switch (kty) {\n    case 'RSA':\n      return 'RSA-OAEP';\n    case 'EC':\n      return 'ECDH-ES';\n    case 'OKP':\n      return 'ECDH-ES';\n    case 'oct':\n      return 'HS256';\n    default:\n      return undefined;\n  }\n}\n\nconst keyscore = (key, { alg, use }) => {\n  let score = 0;\n\n  if (alg && key.alg) {\n    score++;\n  }\n\n  if (use && key.use) {\n    score++;\n  }\n\n  return score;\n};\n\nfunction getKtyFromAlg(alg) {\n  switch (typeof alg === 'string' && alg.slice(0, 2)) {\n    case 'RS':\n    case 'PS':\n      return 'RSA';\n    case 'ES':\n      return 'EC';\n    case 'Ed':\n      return 'OKP';\n    default:\n      return undefined;\n  }\n}\n\nfunction getAlgorithms(use, alg, kty, crv) {\n  // Ed25519, Ed448, and secp256k1 always have \"alg\"\n  // OKP always has use\n  if (alg) {\n    return new Set([alg]);\n  }\n\n  switch (kty) {\n    case 'EC': {\n      let algs = [];\n\n      if (use === 'enc' || use === undefined) {\n        algs = algs.concat(['ECDH-ES', 'ECDH-ES+A128KW', 'ECDH-ES+A192KW', 'ECDH-ES+A256KW']);\n      }\n\n      if (use === 'sig' || use === undefined) {\n        algs = algs.concat([`ES${crv.slice(-3)}`.replace('21', '12')]);\n      }\n\n      return new Set(algs);\n    }\n    case 'OKP': {\n      return new Set(['ECDH-ES', 'ECDH-ES+A128KW', 'ECDH-ES+A192KW', 'ECDH-ES+A256KW']);\n    }\n    case 'RSA': {\n      let algs = [];\n\n      if (use === 'enc' || use === undefined) {\n        algs = algs.concat(['RSA-OAEP', 'RSA-OAEP-256', 'RSA-OAEP-384', 'RSA-OAEP-512', 'RSA1_5']);\n      }\n\n      if (use === 'sig' || use === undefined) {\n        algs = algs.concat(['PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512']);\n      }\n\n      return new Set(algs);\n    }\n    default:\n      throw new Error('unreachable');\n  }\n}\n\nmodule.exports = class KeyStore {\n  #keys;\n\n  constructor(i, keys) {\n    if (i !== internal) throw new Error('invalid constructor call');\n    this.#keys = keys;\n  }\n\n  toJWKS() {\n    return {\n      keys: this.map(({ jwk: { d, p, q, dp, dq, qi, ...jwk } }) => jwk),\n    };\n  }\n\n  all({ alg, kid, use } = {}) {\n    if (!use || !alg) {\n      throw new Error();\n    }\n\n    const kty = getKtyFromAlg(alg);\n\n    const search = { alg, use };\n    return this.filter((key) => {\n      let candidate = true;\n\n      if (candidate && kty !== undefined && key.jwk.kty !== kty) {\n        candidate = false;\n      }\n\n      if (candidate && kid !== undefined && key.jwk.kid !== kid) {\n        candidate = false;\n      }\n\n      if (candidate && use !== undefined && key.jwk.use !== undefined && key.jwk.use !== use) {\n        candidate = false;\n      }\n\n      if (candidate && key.jwk.alg && key.jwk.alg !== alg) {\n        candidate = false;\n      } else if (!key.algorithms.has(alg)) {\n        candidate = false;\n      }\n\n      return candidate;\n    }).sort((first, second) => keyscore(second, search) - keyscore(first, search));\n  }\n\n  get(...args) {\n    return this.all(...args)[0];\n  }\n\n  static async fromJWKS(jwks, { onlyPublic = false, onlyPrivate = false } = {}) {\n    if (\n      !isPlainObject(jwks) ||\n      !Array.isArray(jwks.keys) ||\n      jwks.keys.some((k) => !isPlainObject(k) || !('kty' in k))\n    ) {\n      throw new TypeError('jwks must be a JSON Web Key Set formatted object');\n    }\n\n    const keys = [];\n\n    for (let jwk of jwks.keys) {\n      jwk = clone(jwk);\n      const { kty, kid, crv } = jwk;\n\n      let { alg, use } = jwk;\n\n      if (typeof kty !== 'string' || !kty) {\n        continue;\n      }\n\n      if (use !== undefined && use !== 'sig' && use !== 'enc') {\n        continue;\n      }\n\n      if (typeof alg !== 'string' && alg !== undefined) {\n        continue;\n      }\n\n      if (typeof kid !== 'string' && kid !== undefined) {\n        continue;\n      }\n\n      if (kty === 'EC' && use === 'sig') {\n        switch (crv) {\n          case 'P-256':\n            alg = 'ES256';\n            break;\n          case 'P-384':\n            alg = 'ES384';\n            break;\n          case 'P-521':\n            alg = 'ES512';\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (crv === 'secp256k1') {\n        use = 'sig';\n        alg = 'ES256K';\n      }\n\n      if (kty === 'OKP') {\n        switch (crv) {\n          case 'Ed25519':\n          case 'Ed448':\n            use = 'sig';\n            alg = 'EdDSA';\n            break;\n          case 'X25519':\n          case 'X448':\n            use = 'enc';\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (alg && !use) {\n        switch (true) {\n          case alg.startsWith('ECDH'):\n            use = 'enc';\n            break;\n          case alg.startsWith('RSA'):\n            use = 'enc';\n            break;\n          default:\n            break;\n        }\n      }\n\n      const keyObject = await jose.importJWK(jwk, alg || fauxAlg(jwk.kty)).catch(() => {});\n\n      if (!keyObject) continue;\n\n      if (keyObject instanceof Uint8Array || keyObject.type === 'secret') {\n        if (onlyPrivate) {\n          throw new Error('jwks must only contain private keys');\n        }\n        continue;\n      }\n\n      if (!isKeyObject(keyObject)) {\n        throw new Error('what?!');\n      }\n\n      if (onlyPrivate && keyObject.type !== 'private') {\n        throw new Error('jwks must only contain private keys');\n      }\n\n      if (onlyPublic && keyObject.type !== 'public') {\n        continue;\n      }\n\n      if (kty === 'RSA' && keyObject.asymmetricKeySize < 2048) {\n        continue;\n      }\n\n      keys.push({\n        jwk: { ...jwk, alg, use },\n        keyObject,\n        get algorithms() {\n          Object.defineProperty(this, 'algorithms', {\n            value: getAlgorithms(this.jwk.use, this.jwk.alg, this.jwk.kty, this.jwk.crv),\n            enumerable: true,\n            configurable: false,\n          });\n          return this.algorithms;\n        },\n      });\n    }\n\n    return new this(internal, keys);\n  }\n\n  filter(...args) {\n    return this.#keys.filter(...args);\n  }\n\n  find(...args) {\n    return this.#keys.find(...args);\n  }\n\n  every(...args) {\n    return this.#keys.every(...args);\n  }\n\n  some(...args) {\n    return this.#keys.some(...args);\n  }\n\n  map(...args) {\n    return this.#keys.map(...args);\n  }\n\n  forEach(...args) {\n    return this.#keys.forEach(...args);\n  }\n\n  reduce(...args) {\n    return this.#keys.reduce(...args);\n  }\n\n  sort(...args) {\n    return this.#keys.sort(...args);\n  }\n\n  *[Symbol.iterator]() {\n    for (const key of this.#keys) {\n      yield key;\n    }\n  }\n};\n", "const isPlainObject = require('./is_plain_object');\n\nfunction merge(target, ...sources) {\n  for (const source of sources) {\n    if (!isPlainObject(source)) {\n      continue;\n    }\n    for (const [key, value] of Object.entries(source)) {\n      /* istanbul ignore if */\n      if (key === '__proto__' || key === 'constructor') {\n        continue;\n      }\n      if (isPlainObject(target[key]) && isPlainObject(value)) {\n        target[key] = merge(target[key], value);\n      } else if (typeof value !== 'undefined') {\n        target[key] = value;\n      }\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = merge;\n", "const jose = require('jose');\n\nconst { RPError } = require('../errors');\n\nconst { assertIssuerConfiguration } = require('./assert');\nconst { random } = require('./generators');\nconst now = require('./unix_timestamp');\nconst request = require('./request');\nconst { keystores } = require('./weak_cache');\nconst merge = require('./merge');\n\nconst formUrlEncode = (value) => encodeURIComponent(value).replace(/%20/g, '+');\n\nasync function clientAssertion(endpoint, payload) {\n  let alg = this[`${endpoint}_endpoint_auth_signing_alg`];\n  if (!alg) {\n    assertIssuerConfiguration(\n      this.issuer,\n      `${endpoint}_endpoint_auth_signing_alg_values_supported`,\n    );\n  }\n\n  if (this[`${endpoint}_endpoint_auth_method`] === 'client_secret_jwt') {\n    if (!alg) {\n      const supported = this.issuer[`${endpoint}_endpoint_auth_signing_alg_values_supported`];\n      alg =\n        Array.isArray(supported) && supported.find((signAlg) => /^HS(?:256|384|512)/.test(signAlg));\n    }\n\n    if (!alg) {\n      throw new RPError(\n        `failed to determine a JWS Algorithm to use for ${\n          this[`${endpoint}_endpoint_auth_method`]\n        } Client Assertion`,\n      );\n    }\n\n    return new jose.CompactSign(Buffer.from(JSON.stringify(payload)))\n      .setProtectedHeader({ alg })\n      .sign(this.secretForAlg(alg));\n  }\n\n  const keystore = await keystores.get(this);\n\n  if (!keystore) {\n    throw new TypeError('no client jwks provided for signing a client assertion with');\n  }\n\n  if (!alg) {\n    const supported = this.issuer[`${endpoint}_endpoint_auth_signing_alg_values_supported`];\n    alg =\n      Array.isArray(supported) &&\n      supported.find((signAlg) => keystore.get({ alg: signAlg, use: 'sig' }));\n  }\n\n  if (!alg) {\n    throw new RPError(\n      `failed to determine a JWS Algorithm to use for ${\n        this[`${endpoint}_endpoint_auth_method`]\n      } Client Assertion`,\n    );\n  }\n\n  const key = keystore.get({ alg, use: 'sig' });\n  if (!key) {\n    throw new RPError(\n      `no key found in client jwks to sign a client assertion with using alg ${alg}`,\n    );\n  }\n\n  return new jose.CompactSign(Buffer.from(JSON.stringify(payload)))\n    .setProtectedHeader({ alg, kid: key.jwk && key.jwk.kid })\n    .sign(key.keyObject);\n}\n\nasync function authFor(endpoint, { clientAssertionPayload } = {}) {\n  const authMethod = this[`${endpoint}_endpoint_auth_method`];\n  switch (authMethod) {\n    case 'self_signed_tls_client_auth':\n    case 'tls_client_auth':\n    case 'none':\n      return { form: { client_id: this.client_id } };\n    case 'client_secret_post':\n      if (!this.client_secret) {\n        throw new TypeError(\n          'client_secret_post client authentication method requires a client_secret',\n        );\n      }\n      return { form: { client_id: this.client_id, client_secret: this.client_secret } };\n    case 'private_key_jwt':\n    case 'client_secret_jwt': {\n      const timestamp = now();\n      const audience = [\n        ...new Set([this.issuer.issuer, this.issuer.token_endpoint].filter(Boolean)),\n      ];\n\n      const assertion = await clientAssertion.call(this, endpoint, {\n        iat: timestamp,\n        exp: timestamp + 60,\n        jti: random(),\n        iss: this.client_id,\n        sub: this.client_id,\n        aud: audience,\n        ...clientAssertionPayload,\n      });\n\n      return {\n        form: {\n          client_id: this.client_id,\n          client_assertion: assertion,\n          client_assertion_type: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n        },\n      };\n    }\n    case 'client_secret_basic': {\n      // This is correct behaviour, see https://tools.ietf.org/html/rfc6749#section-2.3.1 and the\n      // related appendix. (also https://github.com/panva/node-openid-client/pull/91)\n      // > The client identifier is encoded using the\n      // > \"application/x-www-form-urlencoded\" encoding algorithm per\n      // > Appendix B, and the encoded value is used as the username; the client\n      // > password is encoded using the same algorithm and used as the\n      // > password.\n      if (!this.client_secret) {\n        throw new TypeError(\n          'client_secret_basic client authentication method requires a client_secret',\n        );\n      }\n      const encoded = `${formUrlEncode(this.client_id)}:${formUrlEncode(this.client_secret)}`;\n      const value = Buffer.from(encoded).toString('base64');\n      return { headers: { Authorization: `Basic ${value}` } };\n    }\n    default: {\n      throw new TypeError(`missing, or unsupported, ${endpoint}_endpoint_auth_method`);\n    }\n  }\n}\n\nfunction resolveResponseType() {\n  const { length, 0: value } = this.response_types;\n\n  if (length === 1) {\n    return value;\n  }\n\n  return undefined;\n}\n\nfunction resolveRedirectUri() {\n  const { length, 0: value } = this.redirect_uris || [];\n\n  if (length === 1) {\n    return value;\n  }\n\n  return undefined;\n}\n\nasync function authenticatedPost(\n  endpoint,\n  opts,\n  { clientAssertionPayload, endpointAuthMethod = endpoint, DPoP } = {},\n) {\n  const auth = await authFor.call(this, endpointAuthMethod, { clientAssertionPayload });\n  const requestOpts = merge(opts, auth);\n\n  const mTLS =\n    this[`${endpointAuthMethod}_endpoint_auth_method`].includes('tls_client_auth') ||\n    (endpoint === 'token' && this.tls_client_certificate_bound_access_tokens);\n\n  let targetUrl;\n  if (mTLS && this.issuer.mtls_endpoint_aliases) {\n    targetUrl = this.issuer.mtls_endpoint_aliases[`${endpoint}_endpoint`];\n  }\n\n  targetUrl = targetUrl || this.issuer[`${endpoint}_endpoint`];\n\n  if ('form' in requestOpts) {\n    for (const [key, value] of Object.entries(requestOpts.form)) {\n      if (typeof value === 'undefined') {\n        delete requestOpts.form[key];\n      }\n    }\n  }\n\n  return request.call(\n    this,\n    {\n      ...requestOpts,\n      method: 'POST',\n      url: targetUrl,\n      headers: {\n        ...(endpoint !== 'revocation'\n          ? {\n              Accept: 'application/json',\n            }\n          : undefined),\n        ...requestOpts.headers,\n      },\n    },\n    { mTLS, DPoP },\n  );\n}\n\nmodule.exports = {\n  resolveResponseType,\n  resolveRedirectUri,\n  authFor,\n  authenticatedPost,\n};\n", "'use strict';\n\nvar crypto = require('crypto');\n\n/**\n * Exported function\n *\n * Options:\n *\n *  - `algorithm` hash algo to be used by this instance: *'sha1', 'md5'\n *  - `excludeValues` {true|*false} hash object keys, values ignored\n *  - `encoding` hash encoding, supports 'buffer', '*hex', 'binary', 'base64'\n *  - `ignoreUnknown` {true|*false} ignore unknown object types\n *  - `replacer` optional function that replaces values before hashing\n *  - `respectFunctionProperties` {*true|false} consider function properties when hashing\n *  - `respectFunctionNames` {*true|false} consider 'name' property of functions for hashing\n *  - `respectType` {*true|false} Respect special properties (prototype, constructor)\n *    when hashing to distinguish between types\n *  - `unorderedArrays` {true|*false} Sort all arrays before hashing\n *  - `unorderedSets` {*true|false} Sort `Set` and `Map` instances before hashing\n *  * = default\n *\n * @param {object} object value to hash\n * @param {object} options hashing options\n * @return {string} hash value\n * @api public\n */\nexports = module.exports = objectHash;\n\nfunction objectHash(object, options){\n  options = applyDefaults(object, options);\n\n  return hash(object, options);\n}\n\n/**\n * Exported sugar methods\n *\n * @param {object} object value to hash\n * @return {string} hash value\n * @api public\n */\nexports.sha1 = function(object){\n  return objectHash(object);\n};\nexports.keys = function(object){\n  return objectHash(object, {excludeValues: true, algorithm: 'sha1', encoding: 'hex'});\n};\nexports.MD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex'});\n};\nexports.keysMD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex', excludeValues: true});\n};\n\n// Internals\nvar hashes = crypto.getHashes ? crypto.getHashes().slice() : ['sha1', 'md5'];\nhashes.push('passthrough');\nvar encodings = ['buffer', 'hex', 'binary', 'base64'];\n\nfunction applyDefaults(object, sourceOptions){\n  sourceOptions = sourceOptions || {};\n\n  // create a copy rather than mutating\n  var options = {};\n  options.algorithm = sourceOptions.algorithm || 'sha1';\n  options.encoding = sourceOptions.encoding || 'hex';\n  options.excludeValues = sourceOptions.excludeValues ? true : false;\n  options.algorithm = options.algorithm.toLowerCase();\n  options.encoding = options.encoding.toLowerCase();\n  options.ignoreUnknown = sourceOptions.ignoreUnknown !== true ? false : true; // default to false\n  options.respectType = sourceOptions.respectType === false ? false : true; // default to true\n  options.respectFunctionNames = sourceOptions.respectFunctionNames === false ? false : true;\n  options.respectFunctionProperties = sourceOptions.respectFunctionProperties === false ? false : true;\n  options.unorderedArrays = sourceOptions.unorderedArrays !== true ? false : true; // default to false\n  options.unorderedSets = sourceOptions.unorderedSets === false ? false : true; // default to false\n  options.unorderedObjects = sourceOptions.unorderedObjects === false ? false : true; // default to true\n  options.replacer = sourceOptions.replacer || undefined;\n  options.excludeKeys = sourceOptions.excludeKeys || undefined;\n\n  if(typeof object === 'undefined') {\n    throw new Error('Object argument required.');\n  }\n\n  // if there is a case-insensitive match in the hashes list, accept it\n  // (i.e. SHA256 for sha256)\n  for (var i = 0; i < hashes.length; ++i) {\n    if (hashes[i].toLowerCase() === options.algorithm.toLowerCase()) {\n      options.algorithm = hashes[i];\n    }\n  }\n\n  if(hashes.indexOf(options.algorithm) === -1){\n    throw new Error('Algorithm \"' + options.algorithm + '\"  not supported. ' +\n      'supported values: ' + hashes.join(', '));\n  }\n\n  if(encodings.indexOf(options.encoding) === -1 &&\n     options.algorithm !== 'passthrough'){\n    throw new Error('Encoding \"' + options.encoding + '\"  not supported. ' +\n      'supported values: ' + encodings.join(', '));\n  }\n\n  return options;\n}\n\n/** Check if the given function is a native function */\nfunction isNativeFunction(f) {\n  if ((typeof f) !== 'function') {\n    return false;\n  }\n  var exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n  return exp.exec(Function.prototype.toString.call(f)) != null;\n}\n\nfunction hash(object, options) {\n  var hashingStream;\n\n  if (options.algorithm !== 'passthrough') {\n    hashingStream = crypto.createHash(options.algorithm);\n  } else {\n    hashingStream = new PassThrough();\n  }\n\n  if (typeof hashingStream.write === 'undefined') {\n    hashingStream.write = hashingStream.update;\n    hashingStream.end   = hashingStream.update;\n  }\n\n  var hasher = typeHasher(options, hashingStream);\n  hasher.dispatch(object);\n  if (!hashingStream.update) {\n    hashingStream.end('');\n  }\n\n  if (hashingStream.digest) {\n    return hashingStream.digest(options.encoding === 'buffer' ? undefined : options.encoding);\n  }\n\n  var buf = hashingStream.read();\n  if (options.encoding === 'buffer') {\n    return buf;\n  }\n\n  return buf.toString(options.encoding);\n}\n\n/**\n * Expose streaming API\n *\n * @param {object} object  Value to serialize\n * @param {object} options  Options, as for hash()\n * @param {object} stream  A stream to write the serializiation to\n * @api public\n */\nexports.writeToStream = function(object, options, stream) {\n  if (typeof stream === 'undefined') {\n    stream = options;\n    options = {};\n  }\n\n  options = applyDefaults(object, options);\n\n  return typeHasher(options, stream).dispatch(object);\n};\n\nfunction typeHasher(options, writeTo, context){\n  context = context || [];\n  var write = function(str) {\n    if (writeTo.update) {\n      return writeTo.update(str, 'utf8');\n    } else {\n      return writeTo.write(str, 'utf8');\n    }\n  };\n\n  return {\n    dispatch: function(value){\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n\n      var type = typeof value;\n      if (value === null) {\n        type = 'null';\n      }\n\n      //console.log(\"[DEBUG] Dispatch: \", value, \"->\", type, \" -> \", \"_\" + type);\n\n      return this['_' + type](value);\n    },\n    _object: function(object) {\n      var pattern = (/\\[object (.*)\\]/i);\n      var objString = Object.prototype.toString.call(object);\n      var objType = pattern.exec(objString);\n      if (!objType) { // object type did not match [object ...]\n        objType = 'unknown:[' + objString + ']';\n      } else {\n        objType = objType[1]; // take only the class name\n      }\n\n      objType = objType.toLowerCase();\n\n      var objectNumber = null;\n\n      if ((objectNumber = context.indexOf(object)) >= 0) {\n        return this.dispatch('[CIRCULAR:' + objectNumber + ']');\n      } else {\n        context.push(object);\n      }\n\n      if (typeof Buffer !== 'undefined' && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write('buffer:');\n        return write(object);\n      }\n\n      if(objType !== 'object' && objType !== 'function' && objType !== 'asyncfunction') {\n        if(this['_' + objType]) {\n          this['_' + objType](object);\n        } else if (options.ignoreUnknown) {\n          return write('[' + objType + ']');\n        } else {\n          throw new Error('Unknown object type \"' + objType + '\"');\n        }\n      }else{\n        var keys = Object.keys(object);\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        }\n        // Make sure to incorporate special properties, so\n        // Types with different prototypes will produce\n        // a different hash and objects derived from\n        // different functions (`new Foo`, `new Bar`) will\n        // produce different hashes.\n        // We never do this for native functions since some\n        // seem to break because of that.\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          keys.splice(0, 0, 'prototype', '__proto__', 'constructor');\n        }\n\n        if (options.excludeKeys) {\n          keys = keys.filter(function(key) { return !options.excludeKeys(key); });\n        }\n\n        write('object:' + keys.length + ':');\n        var self = this;\n        return keys.forEach(function(key){\n          self.dispatch(key);\n          write(':');\n          if(!options.excludeValues) {\n            self.dispatch(object[key]);\n          }\n          write(',');\n        });\n      }\n    },\n    _array: function(arr, unordered){\n      unordered = typeof unordered !== 'undefined' ? unordered :\n        options.unorderedArrays !== false; // default to options.unorderedArrays\n\n      var self = this;\n      write('array:' + arr.length + ':');\n      if (!unordered || arr.length <= 1) {\n        return arr.forEach(function(entry) {\n          return self.dispatch(entry);\n        });\n      }\n\n      // the unordered case is a little more complicated:\n      // since there is no canonical ordering on objects,\n      // i.e. {a:1} < {a:2} and {a:1} > {a:2} are both false,\n      // we first serialize each entry using a PassThrough stream\n      // before sorting.\n      // also: we can\u2019t use the same context array for all entries\n      // since the order of hashing should *not* matter. instead,\n      // we keep track of the additions to a copy of the context array\n      // and add all of them to the global context array when we\u2019re done\n      var contextAdditions = [];\n      var entries = arr.map(function(entry) {\n        var strm = new PassThrough();\n        var localContext = context.slice(); // make copy\n        var hasher = typeHasher(options, strm, localContext);\n        hasher.dispatch(entry);\n        // take only what was added to localContext and append it to contextAdditions\n        contextAdditions = contextAdditions.concat(localContext.slice(context.length));\n        return strm.read().toString();\n      });\n      context = context.concat(contextAdditions);\n      entries.sort();\n      return this._array(entries, false);\n    },\n    _date: function(date){\n      return write('date:' + date.toJSON());\n    },\n    _symbol: function(sym){\n      return write('symbol:' + sym.toString());\n    },\n    _error: function(err){\n      return write('error:' + err.toString());\n    },\n    _boolean: function(bool){\n      return write('bool:' + bool.toString());\n    },\n    _string: function(string){\n      write('string:' + string.length + ':');\n      write(string.toString());\n    },\n    _function: function(fn){\n      write('fn:');\n      if (isNativeFunction(fn)) {\n        this.dispatch('[native]');\n      } else {\n        this.dispatch(fn.toString());\n      }\n\n      if (options.respectFunctionNames !== false) {\n        // Make sure we can still distinguish native functions\n        // by their name, otherwise String and Function will\n        // have the same hash\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n\n      if (options.respectFunctionProperties) {\n        this._object(fn);\n      }\n    },\n    _number: function(number){\n      return write('number:' + number.toString());\n    },\n    _xml: function(xml){\n      return write('xml:' + xml.toString());\n    },\n    _null: function() {\n      return write('Null');\n    },\n    _undefined: function() {\n      return write('Undefined');\n    },\n    _regexp: function(regex){\n      return write('regex:' + regex.toString());\n    },\n    _uint8array: function(arr){\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint8clampedarray: function(arr){\n      write('uint8clampedarray:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int8array: function(arr){\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint16array: function(arr){\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int16array: function(arr){\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint32array: function(arr){\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int32array: function(arr){\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float32array: function(arr){\n      write('float32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float64array: function(arr){\n      write('float64array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _arraybuffer: function(arr){\n      write('arraybuffer:');\n      return this.dispatch(new Uint8Array(arr));\n    },\n    _url: function(url) {\n      return write('url:' + url.toString(), 'utf8');\n    },\n    _map: function(map) {\n      write('map:');\n      var arr = Array.from(map);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _set: function(set) {\n      write('set:');\n      var arr = Array.from(set);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _file: function(file) {\n      write('file:');\n      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);\n    },\n    _blob: function() {\n      if (options.ignoreUnknown) {\n        return write('[blob]');\n      }\n\n      throw Error('Hashing Blob objects is currently not supported\\n' +\n        '(see https://github.com/puleos/object-hash/issues/26)\\n' +\n        'Use \"options.replacer\" or \"options.ignoreUnknown\"\\n');\n    },\n    _domwindow: function() { return write('domwindow'); },\n    _bigint: function(number){\n      return write('bigint:' + number.toString());\n    },\n    /* Node.js standard native objects */\n    _process: function() { return write('process'); },\n    _timer: function() { return write('timer'); },\n    _pipe: function() { return write('pipe'); },\n    _tcp: function() { return write('tcp'); },\n    _udp: function() { return write('udp'); },\n    _tty: function() { return write('tty'); },\n    _statwatcher: function() { return write('statwatcher'); },\n    _securecontext: function() { return write('securecontext'); },\n    _connection: function() { return write('connection'); },\n    _zlib: function() { return write('zlib'); },\n    _context: function() { return write('context'); },\n    _nodescript: function() { return write('nodescript'); },\n    _httpparser: function() { return write('httpparser'); },\n    _dataview: function() { return write('dataview'); },\n    _signal: function() { return write('signal'); },\n    _fsevent: function() { return write('fsevent'); },\n    _tlswrap: function() { return write('tlswrap'); },\n  };\n}\n\n// Mini-implementation of stream.PassThrough\n// We are far from having need for the full implementation, and we can\n// make assumptions like \"many writes, then only one final read\"\n// and we can ignore encoding specifics\nfunction PassThrough() {\n  return {\n    buf: '',\n\n    write: function(b) {\n      this.buf += b;\n    },\n\n    end: function(b) {\n      this.buf += b;\n    },\n\n    read: function() {\n      return this.buf;\n    }\n  };\n}\n", "const objectHash = require('object-hash');\nconst LRU = require('lru-cache');\n\nconst { RPError } = require('../errors');\n\nconst { assertIssuerConfiguration } = require('./assert');\nconst KeyStore = require('./keystore');\nconst { keystores } = require('./weak_cache');\nconst processResponse = require('./process_response');\nconst request = require('./request');\n\nconst inFlight = new WeakMap();\nconst caches = new WeakMap();\nconst lrus = (ctx) => {\n  if (!caches.has(ctx)) {\n    caches.set(ctx, new LRU({ max: 100 }));\n  }\n  return caches.get(ctx);\n};\n\nasync function getKeyStore(reload = false) {\n  assertIssuerConfiguration(this, 'jwks_uri');\n\n  const keystore = keystores.get(this);\n  const cache = lrus(this);\n\n  if (reload || !keystore) {\n    if (inFlight.has(this)) {\n      return inFlight.get(this);\n    }\n    cache.reset();\n    inFlight.set(\n      this,\n      (async () => {\n        const response = await request\n          .call(this, {\n            method: 'GET',\n            responseType: 'json',\n            url: this.jwks_uri,\n            headers: {\n              Accept: 'application/json, application/jwk-set+json',\n            },\n          })\n          .finally(() => {\n            inFlight.delete(this);\n          });\n        const jwks = processResponse(response);\n\n        const joseKeyStore = KeyStore.fromJWKS(jwks, { onlyPublic: true });\n        cache.set('throttle', true, 60 * 1000);\n        keystores.set(this, joseKeyStore);\n\n        return joseKeyStore;\n      })(),\n    );\n\n    return inFlight.get(this);\n  }\n\n  return keystore;\n}\n\nasync function queryKeyStore({ kid, kty, alg, use }, { allowMulti = false } = {}) {\n  const cache = lrus(this);\n\n  const def = {\n    kid,\n    kty,\n    alg,\n    use,\n  };\n\n  const defHash = objectHash(def, {\n    algorithm: 'sha256',\n    ignoreUnknown: true,\n    unorderedArrays: true,\n    unorderedSets: true,\n  });\n\n  // refresh keystore on every unknown key but also only upto once every minute\n  const freshJwksUri = cache.get(defHash) || cache.get('throttle');\n\n  const keystore = await getKeyStore.call(this, !freshJwksUri);\n  const keys = keystore.all(def);\n\n  delete def.use;\n  if (keys.length === 0) {\n    throw new RPError({\n      printf: [\"no valid key found in issuer's jwks_uri for key parameters %j\", def],\n      jwks: keystore,\n    });\n  }\n\n  if (!allowMulti && keys.length > 1 && !kid) {\n    throw new RPError({\n      printf: [\n        \"multiple matching keys found in issuer's jwks_uri for key parameters %j, kid must be provided in this case\",\n        def,\n      ],\n      jwks: keystore,\n    });\n  }\n\n  cache.set(defHash, true);\n\n  return keys;\n}\n\nmodule.exports.queryKeyStore = queryKeyStore;\nmodule.exports.keystore = getKeyStore;\n", "const { inspect } = require('util');\n\nconst { RPError, OPError } = require('./errors');\nconst now = require('./helpers/unix_timestamp');\n\nclass DeviceFlowHandle {\n  #aborted;\n  #client;\n  #clientAssertionPayload;\n  #DPoP;\n  #exchangeBody;\n  #expires_at;\n  #interval;\n  #maxAge;\n  #response;\n  constructor({ client, exchangeBody, clientAssertionPayload, response, maxAge, DPoP }) {\n    ['verification_uri', 'user_code', 'device_code'].forEach((prop) => {\n      if (typeof response[prop] !== 'string' || !response[prop]) {\n        throw new RPError(\n          `expected ${prop} string to be returned by Device Authorization Response, got %j`,\n          response[prop],\n        );\n      }\n    });\n\n    if (!Number.isSafeInteger(response.expires_in)) {\n      throw new RPError(\n        'expected expires_in number to be returned by Device Authorization Response, got %j',\n        response.expires_in,\n      );\n    }\n\n    this.#expires_at = now() + response.expires_in;\n    this.#client = client;\n    this.#DPoP = DPoP;\n    this.#maxAge = maxAge;\n    this.#exchangeBody = exchangeBody;\n    this.#clientAssertionPayload = clientAssertionPayload;\n    this.#response = response;\n    this.#interval = response.interval * 1000 || 5000;\n  }\n\n  abort() {\n    this.#aborted = true;\n  }\n\n  async poll({ signal } = {}) {\n    if ((signal && signal.aborted) || this.#aborted) {\n      throw new RPError('polling aborted');\n    }\n\n    if (this.expired()) {\n      throw new RPError(\n        'the device code %j has expired and the device authorization session has concluded',\n        this.device_code,\n      );\n    }\n\n    await new Promise((resolve) => setTimeout(resolve, this.#interval));\n\n    let tokenset;\n    try {\n      tokenset = await this.#client.grant(\n        {\n          ...this.#exchangeBody,\n          grant_type: 'urn:ietf:params:oauth:grant-type:device_code',\n          device_code: this.device_code,\n        },\n        { clientAssertionPayload: this.#clientAssertionPayload, DPoP: this.#DPoP },\n      );\n    } catch (err) {\n      switch (err instanceof OPError && err.error) {\n        case 'slow_down':\n          this.#interval += 5000;\n        case 'authorization_pending':\n          return this.poll({ signal });\n        default:\n          throw err;\n      }\n    }\n\n    if ('id_token' in tokenset) {\n      await this.#client.decryptIdToken(tokenset);\n      await this.#client.validateIdToken(tokenset, undefined, 'token', this.#maxAge);\n    }\n\n    return tokenset;\n  }\n\n  get device_code() {\n    return this.#response.device_code;\n  }\n\n  get user_code() {\n    return this.#response.user_code;\n  }\n\n  get verification_uri() {\n    return this.#response.verification_uri;\n  }\n\n  get verification_uri_complete() {\n    return this.#response.verification_uri_complete;\n  }\n\n  get expires_in() {\n    return Math.max.apply(null, [this.#expires_at - now(), 0]);\n  }\n\n  expired() {\n    return this.expires_in === 0;\n  }\n\n  /* istanbul ignore next */\n  [inspect.custom]() {\n    return `${this.constructor.name} ${inspect(this.#response, {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true,\n    })}`;\n  }\n}\n\nmodule.exports = DeviceFlowHandle;\n", "const { inspect } = require('util');\nconst stdhttp = require('http');\nconst crypto = require('crypto');\nconst { strict: assert } = require('assert');\nconst querystring = require('querystring');\nconst url = require('url');\n\nconst jose = require('jose');\nconst tokenHash = require('oidc-token-hash');\n\nconst isKeyObject = require('./helpers/is_key_object');\nconst decodeJWT = require('./helpers/decode_jwt');\nconst base64url = require('./helpers/base64url');\nconst defaults = require('./helpers/defaults');\nconst parseWwwAuthenticate = require('./helpers/www_authenticate_parser');\nconst { assertSigningAlgValuesSupport, assertIssuerConfiguration } = require('./helpers/assert');\nconst pick = require('./helpers/pick');\nconst isPlainObject = require('./helpers/is_plain_object');\nconst processResponse = require('./helpers/process_response');\nconst TokenSet = require('./token_set');\nconst { OPError, RPError } = require('./errors');\nconst now = require('./helpers/unix_timestamp');\nconst { random } = require('./helpers/generators');\nconst request = require('./helpers/request');\nconst { CLOCK_TOLERANCE } = require('./helpers/consts');\nconst { keystores } = require('./helpers/weak_cache');\nconst KeyStore = require('./helpers/keystore');\nconst clone = require('./helpers/deep_clone');\nconst { authenticatedPost, resolveResponseType, resolveRedirectUri } = require('./helpers/client');\nconst { queryKeyStore } = require('./helpers/issuer');\nconst DeviceFlowHandle = require('./device_flow_handle');\n\nconst [major, minor] = process.version\n  .slice(1)\n  .split('.')\n  .map((str) => parseInt(str, 10));\n\nconst rsaPssParams = major >= 17 || (major === 16 && minor >= 9);\nconst retryAttempt = Symbol();\nconst skipNonceCheck = Symbol();\nconst skipMaxAgeCheck = Symbol();\n\nfunction pickCb(input) {\n  return pick(\n    input,\n    'access_token', // OAuth 2.0\n    'code', // OAuth 2.0\n    'error_description', // OAuth 2.0\n    'error_uri', // OAuth 2.0\n    'error', // OAuth 2.0\n    'expires_in', // OAuth 2.0\n    'id_token', // OIDC Core 1.0\n    'iss', // draft-ietf-oauth-iss-auth-resp\n    'response', // FAPI JARM\n    'session_state', // OIDC Session Management\n    'state', // OAuth 2.0\n    'token_type', // OAuth 2.0\n  );\n}\n\nfunction authorizationHeaderValue(token, tokenType = 'Bearer') {\n  return `${tokenType} ${token}`;\n}\n\nfunction verifyPresence(payload, jwt, prop) {\n  if (payload[prop] === undefined) {\n    throw new RPError({\n      message: `missing required JWT property ${prop}`,\n      jwt,\n    });\n  }\n}\n\nfunction authorizationParams(params) {\n  const authParams = {\n    client_id: this.client_id,\n    scope: 'openid',\n    response_type: resolveResponseType.call(this),\n    redirect_uri: resolveRedirectUri.call(this),\n    ...params,\n  };\n\n  Object.entries(authParams).forEach(([key, value]) => {\n    if (value === null || value === undefined) {\n      delete authParams[key];\n    } else if (key === 'claims' && typeof value === 'object') {\n      authParams[key] = JSON.stringify(value);\n    } else if (key === 'resource' && Array.isArray(value)) {\n      authParams[key] = value;\n    } else if (typeof value !== 'string') {\n      authParams[key] = String(value);\n    }\n  });\n\n  return authParams;\n}\n\nfunction getKeystore(jwks) {\n  if (\n    !isPlainObject(jwks) ||\n    !Array.isArray(jwks.keys) ||\n    jwks.keys.some((k) => !isPlainObject(k) || !('kty' in k))\n  ) {\n    throw new TypeError('jwks must be a JSON Web Key Set formatted object');\n  }\n\n  return KeyStore.fromJWKS(jwks, { onlyPrivate: true });\n}\n\n// if an OP doesnt support client_secret_basic but supports client_secret_post, use it instead\n// this is in place to take care of most common pitfalls when first using discovered Issuers without\n// the support for default values defined by Discovery 1.0\nfunction checkBasicSupport(client, properties) {\n  try {\n    const supported = client.issuer.token_endpoint_auth_methods_supported;\n    if (!supported.includes(properties.token_endpoint_auth_method)) {\n      if (supported.includes('client_secret_post')) {\n        properties.token_endpoint_auth_method = 'client_secret_post';\n      }\n    }\n  } catch (err) {}\n}\n\nfunction handleCommonMistakes(client, metadata, properties) {\n  if (!metadata.token_endpoint_auth_method) {\n    // if no explicit value was provided\n    checkBasicSupport(client, properties);\n  }\n\n  // :fp: c'mon people... RTFM\n  if (metadata.redirect_uri) {\n    if (metadata.redirect_uris) {\n      throw new TypeError('provide a redirect_uri or redirect_uris, not both');\n    }\n    properties.redirect_uris = [metadata.redirect_uri];\n    delete properties.redirect_uri;\n  }\n\n  if (metadata.response_type) {\n    if (metadata.response_types) {\n      throw new TypeError('provide a response_type or response_types, not both');\n    }\n    properties.response_types = [metadata.response_type];\n    delete properties.response_type;\n  }\n}\n\nfunction getDefaultsForEndpoint(endpoint, issuer, properties) {\n  if (!issuer[`${endpoint}_endpoint`]) return;\n\n  const tokenEndpointAuthMethod = properties.token_endpoint_auth_method;\n  const tokenEndpointAuthSigningAlg = properties.token_endpoint_auth_signing_alg;\n\n  const eam = `${endpoint}_endpoint_auth_method`;\n  const easa = `${endpoint}_endpoint_auth_signing_alg`;\n\n  if (properties[eam] === undefined && properties[easa] === undefined) {\n    if (tokenEndpointAuthMethod !== undefined) {\n      properties[eam] = tokenEndpointAuthMethod;\n    }\n    if (tokenEndpointAuthSigningAlg !== undefined) {\n      properties[easa] = tokenEndpointAuthSigningAlg;\n    }\n  }\n}\n\nclass BaseClient {\n  #metadata;\n  #issuer;\n  #aadIssValidation;\n  #additionalAuthorizedParties;\n  constructor(issuer, aadIssValidation, metadata = {}, jwks, options) {\n    this.#metadata = new Map();\n    this.#issuer = issuer;\n    this.#aadIssValidation = aadIssValidation;\n\n    if (typeof metadata.client_id !== 'string' || !metadata.client_id) {\n      throw new TypeError('client_id is required');\n    }\n\n    const properties = {\n      grant_types: ['authorization_code'],\n      id_token_signed_response_alg: 'RS256',\n      authorization_signed_response_alg: 'RS256',\n      response_types: ['code'],\n      token_endpoint_auth_method: 'client_secret_basic',\n      ...(this.fapi()\n        ? {\n            grant_types: ['authorization_code', 'implicit'],\n            id_token_signed_response_alg: 'PS256',\n            authorization_signed_response_alg: 'PS256',\n            response_types: ['code id_token'],\n            tls_client_certificate_bound_access_tokens: true,\n            token_endpoint_auth_method: undefined,\n          }\n        : undefined),\n      ...metadata,\n    };\n\n    if (this.fapi()) {\n      switch (properties.token_endpoint_auth_method) {\n        case 'self_signed_tls_client_auth':\n        case 'tls_client_auth':\n          break;\n        case 'private_key_jwt':\n          if (!jwks) {\n            throw new TypeError('jwks is required');\n          }\n          break;\n        case undefined:\n          throw new TypeError('token_endpoint_auth_method is required');\n        default:\n          throw new TypeError('invalid or unsupported token_endpoint_auth_method');\n      }\n    }\n\n    handleCommonMistakes(this, metadata, properties);\n\n    assertSigningAlgValuesSupport('token', this.issuer, properties);\n    ['introspection', 'revocation'].forEach((endpoint) => {\n      getDefaultsForEndpoint(endpoint, this.issuer, properties);\n      assertSigningAlgValuesSupport(endpoint, this.issuer, properties);\n    });\n\n    Object.entries(properties).forEach(([key, value]) => {\n      this.#metadata.set(key, value);\n      if (!this[key]) {\n        Object.defineProperty(this, key, {\n          get() {\n            return this.#metadata.get(key);\n          },\n          enumerable: true,\n        });\n      }\n    });\n\n    if (jwks !== undefined) {\n      const keystore = getKeystore.call(this, jwks);\n      keystores.set(this, keystore);\n    }\n\n    if (options != null && options.additionalAuthorizedParties) {\n      this.#additionalAuthorizedParties = clone(options.additionalAuthorizedParties);\n    }\n\n    this[CLOCK_TOLERANCE] = 0;\n  }\n\n  authorizationUrl(params = {}) {\n    if (!isPlainObject(params)) {\n      throw new TypeError('params must be a plain object');\n    }\n    assertIssuerConfiguration(this.issuer, 'authorization_endpoint');\n    const target = url.parse(this.issuer.authorization_endpoint, true);\n    target.search = null;\n    target.query = {\n      ...target.query,\n      ...authorizationParams.call(this, params),\n    };\n    return url.format(target);\n  }\n\n  authorizationPost(params = {}) {\n    if (!isPlainObject(params)) {\n      throw new TypeError('params must be a plain object');\n    }\n    const inputs = authorizationParams.call(this, params);\n    const formInputs = Object.keys(inputs)\n      .map((name) => `<input type=\"hidden\" name=\"${name}\" value=\"${inputs[name]}\"/>`)\n      .join('\\n');\n\n    return `<!DOCTYPE html>\n<head>\n<title>Requesting Authorization</title>\n</head>\n<body onload=\"javascript:document.forms[0].submit()\">\n<form method=\"post\" action=\"${this.issuer.authorization_endpoint}\">\n  ${formInputs}\n</form>\n</body>\n</html>`;\n  }\n\n  endSessionUrl(params = {}) {\n    assertIssuerConfiguration(this.issuer, 'end_session_endpoint');\n\n    const { 0: postLogout, length } = this.post_logout_redirect_uris || [];\n\n    const { post_logout_redirect_uri = length === 1 ? postLogout : undefined } = params;\n\n    let id_token_hint;\n    ({ id_token_hint, ...params } = params);\n    if (id_token_hint instanceof TokenSet) {\n      if (!id_token_hint.id_token) {\n        throw new TypeError('id_token not present in TokenSet');\n      }\n      id_token_hint = id_token_hint.id_token;\n    }\n\n    const target = url.parse(this.issuer.end_session_endpoint, true);\n    target.search = null;\n    defaults(\n      target.query,\n      params,\n      {\n        post_logout_redirect_uri,\n        client_id: this.client_id,\n      },\n      { id_token_hint },\n    );\n\n    Object.entries(target.query).forEach(([key, value]) => {\n      if (value === null || value === undefined) {\n        delete target.query[key];\n      }\n    });\n\n    return url.format(target);\n  }\n\n  callbackParams(input) {\n    const isIncomingMessage =\n      input instanceof stdhttp.IncomingMessage || (input && input.method && input.url);\n    const isString = typeof input === 'string';\n\n    if (!isString && !isIncomingMessage) {\n      throw new TypeError(\n        '#callbackParams only accepts string urls, http.IncomingMessage or a lookalike',\n      );\n    }\n    if (isIncomingMessage) {\n      switch (input.method) {\n        case 'GET':\n          return pickCb(url.parse(input.url, true).query);\n        case 'POST':\n          if (input.body === undefined) {\n            throw new TypeError(\n              'incoming message body missing, include a body parser prior to this method call',\n            );\n          }\n          switch (typeof input.body) {\n            case 'object':\n            case 'string':\n              if (Buffer.isBuffer(input.body)) {\n                return pickCb(querystring.parse(input.body.toString('utf-8')));\n              }\n              if (typeof input.body === 'string') {\n                return pickCb(querystring.parse(input.body));\n              }\n\n              return pickCb(input.body);\n            default:\n              throw new TypeError('invalid IncomingMessage body object');\n          }\n        default:\n          throw new TypeError('invalid IncomingMessage method');\n      }\n    } else {\n      return pickCb(url.parse(input, true).query);\n    }\n  }\n\n  async callback(\n    redirectUri,\n    parameters,\n    checks = {},\n    { exchangeBody, clientAssertionPayload, DPoP } = {},\n  ) {\n    let params = pickCb(parameters);\n\n    if (checks.jarm && !('response' in parameters)) {\n      throw new RPError({\n        message: 'expected a JARM response',\n        checks,\n        params,\n      });\n    } else if ('response' in parameters) {\n      const decrypted = await this.decryptJARM(params.response);\n      params = await this.validateJARM(decrypted);\n    }\n\n    if (this.default_max_age && !checks.max_age) {\n      checks.max_age = this.default_max_age;\n    }\n\n    if (params.state && !checks.state) {\n      throw new TypeError('checks.state argument is missing');\n    }\n\n    if (!params.state && checks.state) {\n      throw new RPError({\n        message: 'state missing from the response',\n        checks,\n        params,\n      });\n    }\n\n    if (checks.state !== params.state) {\n      throw new RPError({\n        printf: ['state mismatch, expected %s, got: %s', checks.state, params.state],\n        checks,\n        params,\n      });\n    }\n\n    if ('iss' in params) {\n      assertIssuerConfiguration(this.issuer, 'issuer');\n      if (params.iss !== this.issuer.issuer) {\n        throw new RPError({\n          printf: ['iss mismatch, expected %s, got: %s', this.issuer.issuer, params.iss],\n          params,\n        });\n      }\n    } else if (\n      this.issuer.authorization_response_iss_parameter_supported &&\n      !('id_token' in params) &&\n      !('response' in parameters)\n    ) {\n      throw new RPError({\n        message: 'iss missing from the response',\n        params,\n      });\n    }\n\n    if (params.error) {\n      throw new OPError(params);\n    }\n\n    const RESPONSE_TYPE_REQUIRED_PARAMS = {\n      code: ['code'],\n      id_token: ['id_token'],\n      token: ['access_token', 'token_type'],\n    };\n\n    if (checks.response_type) {\n      for (const type of checks.response_type.split(' ')) {\n        if (type === 'none') {\n          if (params.code || params.id_token || params.access_token) {\n            throw new RPError({\n              message: 'unexpected params encountered for \"none\" response',\n              checks,\n              params,\n            });\n          }\n        } else {\n          for (const param of RESPONSE_TYPE_REQUIRED_PARAMS[type]) {\n            if (!params[param]) {\n              throw new RPError({\n                message: `${param} missing from response`,\n                checks,\n                params,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    if (params.id_token) {\n      const tokenset = new TokenSet(params);\n      await this.decryptIdToken(tokenset);\n      await this.validateIdToken(\n        tokenset,\n        checks.nonce,\n        'authorization',\n        checks.max_age,\n        checks.state,\n      );\n\n      if (!params.code) {\n        return tokenset;\n      }\n    }\n\n    if (params.code) {\n      const tokenset = await this.grant(\n        {\n          ...exchangeBody,\n          grant_type: 'authorization_code',\n          code: params.code,\n          redirect_uri: redirectUri,\n          code_verifier: checks.code_verifier,\n        },\n        { clientAssertionPayload, DPoP },\n      );\n\n      await this.decryptIdToken(tokenset);\n      await this.validateIdToken(tokenset, checks.nonce, 'token', checks.max_age);\n\n      if (params.session_state) {\n        tokenset.session_state = params.session_state;\n      }\n\n      return tokenset;\n    }\n\n    return new TokenSet(params);\n  }\n\n  async oauthCallback(\n    redirectUri,\n    parameters,\n    checks = {},\n    { exchangeBody, clientAssertionPayload, DPoP } = {},\n  ) {\n    let params = pickCb(parameters);\n\n    if (checks.jarm && !('response' in parameters)) {\n      throw new RPError({\n        message: 'expected a JARM response',\n        checks,\n        params,\n      });\n    } else if ('response' in parameters) {\n      const decrypted = await this.decryptJARM(params.response);\n      params = await this.validateJARM(decrypted);\n    }\n\n    if (params.state && !checks.state) {\n      throw new TypeError('checks.state argument is missing');\n    }\n\n    if (!params.state && checks.state) {\n      throw new RPError({\n        message: 'state missing from the response',\n        checks,\n        params,\n      });\n    }\n\n    if (checks.state !== params.state) {\n      throw new RPError({\n        printf: ['state mismatch, expected %s, got: %s', checks.state, params.state],\n        checks,\n        params,\n      });\n    }\n\n    if ('iss' in params) {\n      assertIssuerConfiguration(this.issuer, 'issuer');\n      if (params.iss !== this.issuer.issuer) {\n        throw new RPError({\n          printf: ['iss mismatch, expected %s, got: %s', this.issuer.issuer, params.iss],\n          params,\n        });\n      }\n    } else if (\n      this.issuer.authorization_response_iss_parameter_supported &&\n      !('id_token' in params) &&\n      !('response' in parameters)\n    ) {\n      throw new RPError({\n        message: 'iss missing from the response',\n        params,\n      });\n    }\n\n    if (params.error) {\n      throw new OPError(params);\n    }\n\n    if (typeof params.id_token === 'string' && params.id_token.length) {\n      throw new RPError({\n        message:\n          'id_token detected in the response, you must use client.callback() instead of client.oauthCallback()',\n        params,\n      });\n    }\n    delete params.id_token;\n\n    const RESPONSE_TYPE_REQUIRED_PARAMS = {\n      code: ['code'],\n      token: ['access_token', 'token_type'],\n    };\n\n    if (checks.response_type) {\n      for (const type of checks.response_type.split(' ')) {\n        if (type === 'none') {\n          if (params.code || params.id_token || params.access_token) {\n            throw new RPError({\n              message: 'unexpected params encountered for \"none\" response',\n              checks,\n              params,\n            });\n          }\n        }\n\n        if (RESPONSE_TYPE_REQUIRED_PARAMS[type]) {\n          for (const param of RESPONSE_TYPE_REQUIRED_PARAMS[type]) {\n            if (!params[param]) {\n              throw new RPError({\n                message: `${param} missing from response`,\n                checks,\n                params,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    if (params.code) {\n      const tokenset = await this.grant(\n        {\n          ...exchangeBody,\n          grant_type: 'authorization_code',\n          code: params.code,\n          redirect_uri: redirectUri,\n          code_verifier: checks.code_verifier,\n        },\n        { clientAssertionPayload, DPoP },\n      );\n\n      if (typeof tokenset.id_token === 'string' && tokenset.id_token.length) {\n        throw new RPError({\n          message:\n            'id_token detected in the response, you must use client.callback() instead of client.oauthCallback()',\n          params,\n        });\n      }\n      delete tokenset.id_token;\n\n      return tokenset;\n    }\n\n    return new TokenSet(params);\n  }\n\n  async decryptIdToken(token) {\n    if (!this.id_token_encrypted_response_alg) {\n      return token;\n    }\n\n    let idToken = token;\n\n    if (idToken instanceof TokenSet) {\n      if (!idToken.id_token) {\n        throw new TypeError('id_token not present in TokenSet');\n      }\n      idToken = idToken.id_token;\n    }\n\n    const expectedAlg = this.id_token_encrypted_response_alg;\n    const expectedEnc = this.id_token_encrypted_response_enc;\n\n    const result = await this.decryptJWE(idToken, expectedAlg, expectedEnc);\n\n    if (token instanceof TokenSet) {\n      token.id_token = result;\n      return token;\n    }\n\n    return result;\n  }\n\n  async validateJWTUserinfo(body) {\n    const expectedAlg = this.userinfo_signed_response_alg;\n\n    return this.validateJWT(body, expectedAlg, []);\n  }\n\n  async decryptJARM(response) {\n    if (!this.authorization_encrypted_response_alg) {\n      return response;\n    }\n\n    const expectedAlg = this.authorization_encrypted_response_alg;\n    const expectedEnc = this.authorization_encrypted_response_enc;\n\n    return this.decryptJWE(response, expectedAlg, expectedEnc);\n  }\n\n  async decryptJWTUserinfo(body) {\n    if (!this.userinfo_encrypted_response_alg) {\n      return body;\n    }\n\n    const expectedAlg = this.userinfo_encrypted_response_alg;\n    const expectedEnc = this.userinfo_encrypted_response_enc;\n\n    return this.decryptJWE(body, expectedAlg, expectedEnc);\n  }\n\n  async decryptJWE(jwe, expectedAlg, expectedEnc = 'A128CBC-HS256') {\n    const header = JSON.parse(base64url.decode(jwe.split('.')[0]));\n\n    if (header.alg !== expectedAlg) {\n      throw new RPError({\n        printf: ['unexpected JWE alg received, expected %s, got: %s', expectedAlg, header.alg],\n        jwt: jwe,\n      });\n    }\n\n    if (header.enc !== expectedEnc) {\n      throw new RPError({\n        printf: ['unexpected JWE enc received, expected %s, got: %s', expectedEnc, header.enc],\n        jwt: jwe,\n      });\n    }\n\n    const getPlaintext = (result) => new TextDecoder().decode(result.plaintext);\n    let plaintext;\n    if (expectedAlg.match(/^(?:RSA|ECDH)/)) {\n      const keystore = await keystores.get(this);\n\n      for (const { keyObject: key } of keystore.all({\n        ...jose.decodeProtectedHeader(jwe),\n        use: 'enc',\n      })) {\n        plaintext = await jose.compactDecrypt(jwe, key).then(getPlaintext, () => {});\n        if (plaintext) break;\n      }\n    } else {\n      plaintext = await jose\n        .compactDecrypt(jwe, this.secretForAlg(expectedAlg === 'dir' ? expectedEnc : expectedAlg))\n        .then(getPlaintext, () => {});\n    }\n\n    if (!plaintext) {\n      throw new RPError({\n        message: 'failed to decrypt JWE',\n        jwt: jwe,\n      });\n    }\n    return plaintext;\n  }\n\n  async validateIdToken(tokenSet, nonce, returnedBy, maxAge, state) {\n    let idToken = tokenSet;\n\n    const expectedAlg = this.id_token_signed_response_alg;\n\n    const isTokenSet = idToken instanceof TokenSet;\n\n    if (isTokenSet) {\n      if (!idToken.id_token) {\n        throw new TypeError('id_token not present in TokenSet');\n      }\n      idToken = idToken.id_token;\n    }\n\n    idToken = String(idToken);\n\n    const timestamp = now();\n    const { protected: header, payload, key } = await this.validateJWT(idToken, expectedAlg);\n\n    if (typeof maxAge === 'number' || (maxAge !== skipMaxAgeCheck && this.require_auth_time)) {\n      if (!payload.auth_time) {\n        throw new RPError({\n          message: 'missing required JWT property auth_time',\n          jwt: idToken,\n        });\n      }\n      if (typeof payload.auth_time !== 'number') {\n        throw new RPError({\n          message: 'JWT auth_time claim must be a JSON numeric value',\n          jwt: idToken,\n        });\n      }\n    }\n\n    if (\n      typeof maxAge === 'number' &&\n      payload.auth_time + maxAge < timestamp - this[CLOCK_TOLERANCE]\n    ) {\n      throw new RPError({\n        printf: [\n          'too much time has elapsed since the last End-User authentication, max_age %i, auth_time: %i, now %i',\n          maxAge,\n          payload.auth_time,\n          timestamp - this[CLOCK_TOLERANCE],\n        ],\n        now: timestamp,\n        tolerance: this[CLOCK_TOLERANCE],\n        auth_time: payload.auth_time,\n        jwt: idToken,\n      });\n    }\n\n    if (\n      nonce !== skipNonceCheck &&\n      (payload.nonce || nonce !== undefined) &&\n      payload.nonce !== nonce\n    ) {\n      throw new RPError({\n        printf: ['nonce mismatch, expected %s, got: %s', nonce, payload.nonce],\n        jwt: idToken,\n      });\n    }\n\n    if (returnedBy === 'authorization') {\n      if (!payload.at_hash && tokenSet.access_token) {\n        throw new RPError({\n          message: 'missing required property at_hash',\n          jwt: idToken,\n        });\n      }\n\n      if (!payload.c_hash && tokenSet.code) {\n        throw new RPError({\n          message: 'missing required property c_hash',\n          jwt: idToken,\n        });\n      }\n\n      if (this.fapi()) {\n        if (!payload.s_hash && (tokenSet.state || state)) {\n          throw new RPError({\n            message: 'missing required property s_hash',\n            jwt: idToken,\n          });\n        }\n      }\n\n      if (payload.s_hash) {\n        if (!state) {\n          throw new TypeError('cannot verify s_hash, \"checks.state\" property not provided');\n        }\n\n        try {\n          tokenHash.validate(\n            { claim: 's_hash', source: 'state' },\n            payload.s_hash,\n            state,\n            header.alg,\n            key.jwk && key.jwk.crv,\n          );\n        } catch (err) {\n          throw new RPError({ message: err.message, jwt: idToken });\n        }\n      }\n    }\n\n    if (this.fapi() && payload.iat < timestamp - 3600) {\n      throw new RPError({\n        printf: ['JWT issued too far in the past, now %i, iat %i', timestamp, payload.iat],\n        now: timestamp,\n        tolerance: this[CLOCK_TOLERANCE],\n        iat: payload.iat,\n        jwt: idToken,\n      });\n    }\n\n    if (tokenSet.access_token && payload.at_hash !== undefined) {\n      try {\n        tokenHash.validate(\n          { claim: 'at_hash', source: 'access_token' },\n          payload.at_hash,\n          tokenSet.access_token,\n          header.alg,\n          key.jwk && key.jwk.crv,\n        );\n      } catch (err) {\n        throw new RPError({ message: err.message, jwt: idToken });\n      }\n    }\n\n    if (tokenSet.code && payload.c_hash !== undefined) {\n      try {\n        tokenHash.validate(\n          { claim: 'c_hash', source: 'code' },\n          payload.c_hash,\n          tokenSet.code,\n          header.alg,\n          key.jwk && key.jwk.crv,\n        );\n      } catch (err) {\n        throw new RPError({ message: err.message, jwt: idToken });\n      }\n    }\n\n    return tokenSet;\n  }\n\n  async validateJWT(jwt, expectedAlg, required = ['iss', 'sub', 'aud', 'exp', 'iat']) {\n    const isSelfIssued = this.issuer.issuer === 'https://self-issued.me';\n    const timestamp = now();\n    let header;\n    let payload;\n    try {\n      ({ header, payload } = decodeJWT(jwt, { complete: true }));\n    } catch (err) {\n      throw new RPError({\n        printf: ['failed to decode JWT (%s: %s)', err.name, err.message],\n        jwt,\n      });\n    }\n\n    if (header.alg !== expectedAlg) {\n      throw new RPError({\n        printf: ['unexpected JWT alg received, expected %s, got: %s', expectedAlg, header.alg],\n        jwt,\n      });\n    }\n\n    if (isSelfIssued) {\n      required = [...required, 'sub_jwk'];\n    }\n\n    required.forEach(verifyPresence.bind(undefined, payload, jwt));\n\n    if (payload.iss !== undefined) {\n      let expectedIss = this.issuer.issuer;\n\n      if (this.#aadIssValidation) {\n        expectedIss = this.issuer.issuer.replace('{tenantid}', payload.tid);\n      }\n\n      if (payload.iss !== expectedIss) {\n        throw new RPError({\n          printf: ['unexpected iss value, expected %s, got: %s', expectedIss, payload.iss],\n          jwt,\n        });\n      }\n    }\n\n    if (payload.iat !== undefined) {\n      if (typeof payload.iat !== 'number') {\n        throw new RPError({\n          message: 'JWT iat claim must be a JSON numeric value',\n          jwt,\n        });\n      }\n    }\n\n    if (payload.nbf !== undefined) {\n      if (typeof payload.nbf !== 'number') {\n        throw new RPError({\n          message: 'JWT nbf claim must be a JSON numeric value',\n          jwt,\n        });\n      }\n      if (payload.nbf > timestamp + this[CLOCK_TOLERANCE]) {\n        throw new RPError({\n          printf: [\n            'JWT not active yet, now %i, nbf %i',\n            timestamp + this[CLOCK_TOLERANCE],\n            payload.nbf,\n          ],\n          now: timestamp,\n          tolerance: this[CLOCK_TOLERANCE],\n          nbf: payload.nbf,\n          jwt,\n        });\n      }\n    }\n\n    if (payload.exp !== undefined) {\n      if (typeof payload.exp !== 'number') {\n        throw new RPError({\n          message: 'JWT exp claim must be a JSON numeric value',\n          jwt,\n        });\n      }\n      if (timestamp - this[CLOCK_TOLERANCE] >= payload.exp) {\n        throw new RPError({\n          printf: ['JWT expired, now %i, exp %i', timestamp - this[CLOCK_TOLERANCE], payload.exp],\n          now: timestamp,\n          tolerance: this[CLOCK_TOLERANCE],\n          exp: payload.exp,\n          jwt,\n        });\n      }\n    }\n\n    if (payload.aud !== undefined) {\n      if (Array.isArray(payload.aud)) {\n        if (payload.aud.length > 1 && !payload.azp) {\n          throw new RPError({\n            message: 'missing required JWT property azp',\n            jwt,\n          });\n        }\n\n        if (!payload.aud.includes(this.client_id)) {\n          throw new RPError({\n            printf: [\n              'aud is missing the client_id, expected %s to be included in %j',\n              this.client_id,\n              payload.aud,\n            ],\n            jwt,\n          });\n        }\n      } else if (payload.aud !== this.client_id) {\n        throw new RPError({\n          printf: ['aud mismatch, expected %s, got: %s', this.client_id, payload.aud],\n          jwt,\n        });\n      }\n    }\n\n    if (payload.azp !== undefined) {\n      let additionalAuthorizedParties = this.#additionalAuthorizedParties;\n\n      if (typeof additionalAuthorizedParties === 'string') {\n        additionalAuthorizedParties = [this.client_id, additionalAuthorizedParties];\n      } else if (Array.isArray(additionalAuthorizedParties)) {\n        additionalAuthorizedParties = [this.client_id, ...additionalAuthorizedParties];\n      } else {\n        additionalAuthorizedParties = [this.client_id];\n      }\n\n      if (!additionalAuthorizedParties.includes(payload.azp)) {\n        throw new RPError({\n          printf: ['azp mismatch, got: %s', payload.azp],\n          jwt,\n        });\n      }\n    }\n\n    let keys;\n\n    if (isSelfIssued) {\n      try {\n        assert(isPlainObject(payload.sub_jwk));\n        const key = await jose.importJWK(payload.sub_jwk, header.alg);\n        assert.equal(key.type, 'public');\n        keys = [{ keyObject: key }];\n      } catch (err) {\n        throw new RPError({\n          message: 'failed to use sub_jwk claim as an asymmetric JSON Web Key',\n          jwt,\n        });\n      }\n      if ((await jose.calculateJwkThumbprint(payload.sub_jwk)) !== payload.sub) {\n        throw new RPError({\n          message: 'failed to match the subject with sub_jwk',\n          jwt,\n        });\n      }\n    } else if (header.alg.startsWith('HS')) {\n      keys = [this.secretForAlg(header.alg)];\n    } else if (header.alg !== 'none') {\n      keys = await queryKeyStore.call(this.issuer, { ...header, use: 'sig' });\n    }\n\n    if (!keys && header.alg === 'none') {\n      return { protected: header, payload };\n    }\n\n    for (const key of keys) {\n      const verified = await jose\n        .compactVerify(jwt, key instanceof Uint8Array ? key : key.keyObject)\n        .catch(() => {});\n      if (verified) {\n        return {\n          payload,\n          protected: verified.protectedHeader,\n          key,\n        };\n      }\n    }\n\n    throw new RPError({\n      message: 'failed to validate JWT signature',\n      jwt,\n    });\n  }\n\n  async refresh(refreshToken, { exchangeBody, clientAssertionPayload, DPoP } = {}) {\n    let token = refreshToken;\n\n    if (token instanceof TokenSet) {\n      if (!token.refresh_token) {\n        throw new TypeError('refresh_token not present in TokenSet');\n      }\n      token = token.refresh_token;\n    }\n\n    const tokenset = await this.grant(\n      {\n        ...exchangeBody,\n        grant_type: 'refresh_token',\n        refresh_token: String(token),\n      },\n      { clientAssertionPayload, DPoP },\n    );\n\n    if (tokenset.id_token) {\n      await this.decryptIdToken(tokenset);\n      await this.validateIdToken(tokenset, skipNonceCheck, 'token', skipMaxAgeCheck);\n\n      if (refreshToken instanceof TokenSet && refreshToken.id_token) {\n        const expectedSub = refreshToken.claims().sub;\n        const actualSub = tokenset.claims().sub;\n        if (actualSub !== expectedSub) {\n          throw new RPError({\n            printf: ['sub mismatch, expected %s, got: %s', expectedSub, actualSub],\n            jwt: tokenset.id_token,\n          });\n        }\n      }\n    }\n\n    return tokenset;\n  }\n\n  async requestResource(\n    resourceUrl,\n    accessToken,\n    {\n      method,\n      headers,\n      body,\n      DPoP,\n      tokenType = DPoP\n        ? 'DPoP'\n        : accessToken instanceof TokenSet\n        ? accessToken.token_type\n        : 'Bearer',\n    } = {},\n    retry,\n  ) {\n    if (accessToken instanceof TokenSet) {\n      if (!accessToken.access_token) {\n        throw new TypeError('access_token not present in TokenSet');\n      }\n      accessToken = accessToken.access_token;\n    }\n\n    if (!accessToken) {\n      throw new TypeError('no access token provided');\n    } else if (typeof accessToken !== 'string') {\n      throw new TypeError('invalid access token provided');\n    }\n\n    const requestOpts = {\n      headers: {\n        Authorization: authorizationHeaderValue(accessToken, tokenType),\n        ...headers,\n      },\n      body,\n    };\n\n    const mTLS = !!this.tls_client_certificate_bound_access_tokens;\n\n    const response = await request.call(\n      this,\n      {\n        ...requestOpts,\n        responseType: 'buffer',\n        method,\n        url: resourceUrl,\n      },\n      { accessToken, mTLS, DPoP },\n    );\n\n    const wwwAuthenticate = response.headers['www-authenticate'];\n    if (\n      retry !== retryAttempt &&\n      wwwAuthenticate &&\n      wwwAuthenticate.toLowerCase().startsWith('dpop ') &&\n      parseWwwAuthenticate(wwwAuthenticate).error === 'use_dpop_nonce'\n    ) {\n      return this.requestResource(resourceUrl, accessToken, {\n        method,\n        headers,\n        body,\n        DPoP,\n        tokenType,\n      });\n    }\n\n    return response;\n  }\n\n  async userinfo(accessToken, { method = 'GET', via = 'header', tokenType, params, DPoP } = {}) {\n    assertIssuerConfiguration(this.issuer, 'userinfo_endpoint');\n    const options = {\n      tokenType,\n      method: String(method).toUpperCase(),\n      DPoP,\n    };\n\n    if (options.method !== 'GET' && options.method !== 'POST') {\n      throw new TypeError('#userinfo() method can only be POST or a GET');\n    }\n\n    if (via === 'body' && options.method !== 'POST') {\n      throw new TypeError('can only send body on POST');\n    }\n\n    const jwt = !!(this.userinfo_signed_response_alg || this.userinfo_encrypted_response_alg);\n\n    if (jwt) {\n      options.headers = { Accept: 'application/jwt' };\n    } else {\n      options.headers = { Accept: 'application/json' };\n    }\n    const mTLS = !!this.tls_client_certificate_bound_access_tokens;\n\n    let targetUrl;\n    if (mTLS && this.issuer.mtls_endpoint_aliases) {\n      targetUrl = this.issuer.mtls_endpoint_aliases.userinfo_endpoint;\n    }\n\n    targetUrl = new url.URL(targetUrl || this.issuer.userinfo_endpoint);\n\n    if (via === 'body') {\n      options.headers.Authorization = undefined;\n      options.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n      options.body = new url.URLSearchParams();\n      options.body.append(\n        'access_token',\n        accessToken instanceof TokenSet ? accessToken.access_token : accessToken,\n      );\n    }\n\n    // handle additional parameters, GET via querystring, POST via urlencoded body\n    if (params) {\n      if (options.method === 'GET') {\n        Object.entries(params).forEach(([key, value]) => {\n          targetUrl.searchParams.append(key, value);\n        });\n      } else if (options.body) {\n        // POST && via body\n        Object.entries(params).forEach(([key, value]) => {\n          options.body.append(key, value);\n        });\n      } else {\n        // POST && via header\n        options.body = new url.URLSearchParams();\n        options.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        Object.entries(params).forEach(([key, value]) => {\n          options.body.append(key, value);\n        });\n      }\n    }\n\n    if (options.body) {\n      options.body = options.body.toString();\n    }\n\n    const response = await this.requestResource(targetUrl, accessToken, options);\n\n    let parsed = processResponse(response, { bearer: true });\n\n    if (jwt) {\n      if (!/^application\\/jwt/.test(response.headers['content-type'])) {\n        throw new RPError({\n          message: 'expected application/jwt response from the userinfo_endpoint',\n          response,\n        });\n      }\n\n      const body = response.body.toString();\n      const userinfo = await this.decryptJWTUserinfo(body);\n      if (!this.userinfo_signed_response_alg) {\n        try {\n          parsed = JSON.parse(userinfo);\n          assert(isPlainObject(parsed));\n        } catch (err) {\n          throw new RPError({\n            message: 'failed to parse userinfo JWE payload as JSON',\n            jwt: userinfo,\n          });\n        }\n      } else {\n        ({ payload: parsed } = await this.validateJWTUserinfo(userinfo));\n      }\n    } else {\n      try {\n        parsed = JSON.parse(response.body);\n      } catch (err) {\n        Object.defineProperty(err, 'response', { value: response });\n        throw err;\n      }\n    }\n\n    if (accessToken instanceof TokenSet && accessToken.id_token) {\n      const expectedSub = accessToken.claims().sub;\n      if (parsed.sub !== expectedSub) {\n        throw new RPError({\n          printf: ['userinfo sub mismatch, expected %s, got: %s', expectedSub, parsed.sub],\n          body: parsed,\n          jwt: accessToken.id_token,\n        });\n      }\n    }\n\n    return parsed;\n  }\n\n  encryptionSecret(len) {\n    const hash = len <= 256 ? 'sha256' : len <= 384 ? 'sha384' : len <= 512 ? 'sha512' : false;\n    if (!hash) {\n      throw new Error('unsupported symmetric encryption key derivation');\n    }\n\n    return crypto\n      .createHash(hash)\n      .update(this.client_secret)\n      .digest()\n      .slice(0, len / 8);\n  }\n\n  secretForAlg(alg) {\n    if (!this.client_secret) {\n      throw new TypeError('client_secret is required');\n    }\n\n    if (/^A(\\d{3})(?:GCM)?KW$/.test(alg)) {\n      return this.encryptionSecret(parseInt(RegExp.$1, 10));\n    }\n\n    if (/^A(\\d{3})(?:GCM|CBC-HS(\\d{3}))$/.test(alg)) {\n      return this.encryptionSecret(parseInt(RegExp.$2 || RegExp.$1, 10));\n    }\n\n    return new TextEncoder().encode(this.client_secret);\n  }\n\n  async grant(body, { clientAssertionPayload, DPoP } = {}, retry) {\n    assertIssuerConfiguration(this.issuer, 'token_endpoint');\n    const response = await authenticatedPost.call(\n      this,\n      'token',\n      {\n        form: body,\n        responseType: 'json',\n      },\n      { clientAssertionPayload, DPoP },\n    );\n    let responseBody;\n    try {\n      responseBody = processResponse(response);\n    } catch (err) {\n      if (retry !== retryAttempt && err instanceof OPError && err.error === 'use_dpop_nonce') {\n        return this.grant(body, { clientAssertionPayload, DPoP }, retryAttempt);\n      }\n      throw err;\n    }\n\n    return new TokenSet(responseBody);\n  }\n\n  async deviceAuthorization(params = {}, { exchangeBody, clientAssertionPayload, DPoP } = {}) {\n    assertIssuerConfiguration(this.issuer, 'device_authorization_endpoint');\n    assertIssuerConfiguration(this.issuer, 'token_endpoint');\n\n    const body = authorizationParams.call(this, {\n      client_id: this.client_id,\n      redirect_uri: null,\n      response_type: null,\n      ...params,\n    });\n\n    const response = await authenticatedPost.call(\n      this,\n      'device_authorization',\n      {\n        responseType: 'json',\n        form: body,\n      },\n      { clientAssertionPayload, endpointAuthMethod: 'token' },\n    );\n    const responseBody = processResponse(response);\n\n    return new DeviceFlowHandle({\n      client: this,\n      exchangeBody,\n      clientAssertionPayload,\n      response: responseBody,\n      maxAge: params.max_age,\n      DPoP,\n    });\n  }\n\n  async revoke(token, hint, { revokeBody, clientAssertionPayload } = {}) {\n    assertIssuerConfiguration(this.issuer, 'revocation_endpoint');\n    if (hint !== undefined && typeof hint !== 'string') {\n      throw new TypeError('hint must be a string');\n    }\n\n    const form = { ...revokeBody, token };\n\n    if (hint) {\n      form.token_type_hint = hint;\n    }\n\n    const response = await authenticatedPost.call(\n      this,\n      'revocation',\n      {\n        form,\n      },\n      { clientAssertionPayload },\n    );\n    processResponse(response, { body: false });\n  }\n\n  async introspect(token, hint, { introspectBody, clientAssertionPayload } = {}) {\n    assertIssuerConfiguration(this.issuer, 'introspection_endpoint');\n    if (hint !== undefined && typeof hint !== 'string') {\n      throw new TypeError('hint must be a string');\n    }\n\n    const form = { ...introspectBody, token };\n    if (hint) {\n      form.token_type_hint = hint;\n    }\n\n    const response = await authenticatedPost.call(\n      this,\n      'introspection',\n      { form, responseType: 'json' },\n      { clientAssertionPayload },\n    );\n\n    const responseBody = processResponse(response);\n\n    return responseBody;\n  }\n\n  static async register(metadata, options = {}) {\n    const { initialAccessToken, jwks, ...clientOptions } = options;\n\n    assertIssuerConfiguration(this.issuer, 'registration_endpoint');\n\n    if (jwks !== undefined && !(metadata.jwks || metadata.jwks_uri)) {\n      const keystore = await getKeystore.call(this, jwks);\n      metadata.jwks = keystore.toJWKS();\n    }\n\n    const response = await request.call(this, {\n      headers: {\n        Accept: 'application/json',\n        ...(initialAccessToken\n          ? {\n              Authorization: authorizationHeaderValue(initialAccessToken),\n            }\n          : undefined),\n      },\n      responseType: 'json',\n      json: metadata,\n      url: this.issuer.registration_endpoint,\n      method: 'POST',\n    });\n    const responseBody = processResponse(response, { statusCode: 201, bearer: true });\n\n    return new this(responseBody, jwks, clientOptions);\n  }\n\n  get metadata() {\n    return clone(Object.fromEntries(this.#metadata.entries()));\n  }\n\n  static async fromUri(registrationClientUri, registrationAccessToken, jwks, clientOptions) {\n    const response = await request.call(this, {\n      method: 'GET',\n      url: registrationClientUri,\n      responseType: 'json',\n      headers: {\n        Authorization: authorizationHeaderValue(registrationAccessToken),\n        Accept: 'application/json',\n      },\n    });\n    const responseBody = processResponse(response, { bearer: true });\n\n    return new this(responseBody, jwks, clientOptions);\n  }\n\n  async requestObject(\n    requestObject = {},\n    {\n      sign: signingAlgorithm = this.request_object_signing_alg || 'none',\n      encrypt: {\n        alg: eKeyManagement = this.request_object_encryption_alg,\n        enc: eContentEncryption = this.request_object_encryption_enc || 'A128CBC-HS256',\n      } = {},\n    } = {},\n  ) {\n    if (!isPlainObject(requestObject)) {\n      throw new TypeError('requestObject must be a plain object');\n    }\n\n    let signed;\n    let key;\n    const unix = now();\n    const header = { alg: signingAlgorithm, typ: 'oauth-authz-req+jwt' };\n    const payload = JSON.stringify(\n      defaults({}, requestObject, {\n        iss: this.client_id,\n        aud: this.issuer.issuer,\n        client_id: this.client_id,\n        jti: random(),\n        iat: unix,\n        exp: unix + 300,\n        ...(this.fapi() ? { nbf: unix } : undefined),\n      }),\n    );\n    if (signingAlgorithm === 'none') {\n      signed = [base64url.encode(JSON.stringify(header)), base64url.encode(payload), ''].join('.');\n    } else {\n      const symmetric = signingAlgorithm.startsWith('HS');\n      if (symmetric) {\n        key = this.secretForAlg(signingAlgorithm);\n      } else {\n        const keystore = await keystores.get(this);\n\n        if (!keystore) {\n          throw new TypeError(\n            `no keystore present for client, cannot sign using alg ${signingAlgorithm}`,\n          );\n        }\n        key = keystore.get({ alg: signingAlgorithm, use: 'sig' });\n        if (!key) {\n          throw new TypeError(`no key to sign with found for alg ${signingAlgorithm}`);\n        }\n      }\n\n      signed = await new jose.CompactSign(new TextEncoder().encode(payload))\n        .setProtectedHeader({\n          ...header,\n          kid: symmetric ? undefined : key.jwk.kid,\n        })\n        .sign(symmetric ? key : key.keyObject);\n    }\n\n    if (!eKeyManagement) {\n      return signed;\n    }\n\n    const fields = { alg: eKeyManagement, enc: eContentEncryption, cty: 'oauth-authz-req+jwt' };\n\n    if (fields.alg.match(/^(RSA|ECDH)/)) {\n      [key] = await queryKeyStore.call(\n        this.issuer,\n        { alg: fields.alg, use: 'enc' },\n        { allowMulti: true },\n      );\n    } else {\n      key = this.secretForAlg(fields.alg === 'dir' ? fields.enc : fields.alg);\n    }\n\n    return new jose.CompactEncrypt(new TextEncoder().encode(signed))\n      .setProtectedHeader({\n        ...fields,\n        kid: key instanceof Uint8Array ? undefined : key.jwk.kid,\n      })\n      .encrypt(key instanceof Uint8Array ? key : key.keyObject);\n  }\n\n  async pushedAuthorizationRequest(params = {}, { clientAssertionPayload } = {}) {\n    assertIssuerConfiguration(this.issuer, 'pushed_authorization_request_endpoint');\n\n    const body = {\n      ...('request' in params ? params : authorizationParams.call(this, params)),\n      client_id: this.client_id,\n    };\n\n    const response = await authenticatedPost.call(\n      this,\n      'pushed_authorization_request',\n      {\n        responseType: 'json',\n        form: body,\n      },\n      { clientAssertionPayload, endpointAuthMethod: 'token' },\n    );\n    const responseBody = processResponse(response, { statusCode: 201 });\n\n    if (!('expires_in' in responseBody)) {\n      throw new RPError({\n        message: 'expected expires_in in Pushed Authorization Successful Response',\n        response,\n      });\n    }\n    if (typeof responseBody.expires_in !== 'number') {\n      throw new RPError({\n        message: 'invalid expires_in value in Pushed Authorization Successful Response',\n        response,\n      });\n    }\n    if (!('request_uri' in responseBody)) {\n      throw new RPError({\n        message: 'expected request_uri in Pushed Authorization Successful Response',\n        response,\n      });\n    }\n    if (typeof responseBody.request_uri !== 'string') {\n      throw new RPError({\n        message: 'invalid request_uri value in Pushed Authorization Successful Response',\n        response,\n      });\n    }\n\n    return responseBody;\n  }\n\n  get issuer() {\n    return this.#issuer;\n  }\n\n  /* istanbul ignore next */\n  [inspect.custom]() {\n    return `${this.constructor.name} ${inspect(this.metadata, {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true,\n    })}`;\n  }\n\n  fapi() {\n    return this.constructor.name === 'FAPI1Client';\n  }\n\n  async validateJARM(response) {\n    const expectedAlg = this.authorization_signed_response_alg;\n    const { payload } = await this.validateJWT(response, expectedAlg, ['iss', 'exp', 'aud']);\n    return pickCb(payload);\n  }\n}\n\nconst RSPS = /^(?:RS|PS)(?:256|384|512)$/;\nfunction determineRsaAlgorithm(privateKey, privateKeyInput, valuesSupported) {\n  if (\n    typeof privateKeyInput === 'object' &&\n    typeof privateKeyInput.key === 'object' &&\n    privateKeyInput.key.alg\n  ) {\n    return privateKeyInput.key.alg;\n  }\n\n  if (Array.isArray(valuesSupported)) {\n    let candidates = valuesSupported.filter(RegExp.prototype.test.bind(RSPS));\n    if (privateKey.asymmetricKeyType === 'rsa-pss') {\n      candidates = candidates.filter((value) => value.startsWith('PS'));\n    }\n    return ['PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS384'].find((preferred) =>\n      candidates.includes(preferred),\n    );\n  }\n\n  return 'PS256';\n}\n\nconst p256 = Buffer.from([42, 134, 72, 206, 61, 3, 1, 7]);\nconst p384 = Buffer.from([43, 129, 4, 0, 34]);\nconst p521 = Buffer.from([43, 129, 4, 0, 35]);\nconst secp256k1 = Buffer.from([43, 129, 4, 0, 10]);\n\nfunction determineEcAlgorithm(privateKey, privateKeyInput) {\n  // If input was a JWK\n  switch (\n    typeof privateKeyInput === 'object' &&\n    typeof privateKeyInput.key === 'object' &&\n    privateKeyInput.key.crv\n  ) {\n    case 'P-256':\n      return 'ES256';\n    case 'secp256k1':\n      return 'ES256K';\n    case 'P-384':\n      return 'ES384';\n    case 'P-512':\n      return 'ES512';\n    default:\n      break;\n  }\n\n  const buf = privateKey.export({ format: 'der', type: 'pkcs8' });\n  const i = buf[1] < 128 ? 17 : 18;\n  const len = buf[i];\n  const curveOid = buf.slice(i + 1, i + 1 + len);\n  if (curveOid.equals(p256)) {\n    return 'ES256';\n  }\n\n  if (curveOid.equals(p384)) {\n    return 'ES384';\n  }\n  if (curveOid.equals(p521)) {\n    return 'ES512';\n  }\n\n  if (curveOid.equals(secp256k1)) {\n    return 'ES256K';\n  }\n\n  throw new TypeError('unsupported DPoP private key curve');\n}\n\nconst jwkCache = new WeakMap();\nasync function getJwk(privateKey, privateKeyInput) {\n  if (\n    typeof privateKeyInput === 'object' &&\n    typeof privateKeyInput.key === 'object' &&\n    privateKeyInput.key.crv\n  ) {\n    return pick(privateKeyInput.key, 'kty', 'crv', 'x', 'y', 'e', 'n');\n  }\n\n  if (jwkCache.has(privateKeyInput)) {\n    return jwkCache.get(privateKeyInput);\n  }\n\n  const jwk = pick(await jose.exportJWK(privateKey), 'kty', 'crv', 'x', 'y', 'e', 'n');\n\n  if (isKeyObject(privateKeyInput)) {\n    jwkCache.set(privateKeyInput, jwk);\n  }\n\n  return jwk;\n}\n\n/**\n * @name dpopProof\n * @api private\n */\nasync function dpopProof(payload, privateKeyInput, accessToken) {\n  if (!isPlainObject(payload)) {\n    throw new TypeError('payload must be a plain object');\n  }\n\n  let privateKey;\n  if (isKeyObject(privateKeyInput)) {\n    privateKey = privateKeyInput;\n  } else {\n    privateKey = crypto.createPrivateKey(privateKeyInput);\n  }\n\n  if (privateKey.type !== 'private') {\n    throw new TypeError('\"DPoP\" option must be a private key');\n  }\n  let alg;\n  switch (privateKey.asymmetricKeyType) {\n    case 'ed25519':\n    case 'ed448':\n      alg = 'EdDSA';\n      break;\n    case 'ec':\n      alg = determineEcAlgorithm(privateKey, privateKeyInput);\n      break;\n    case 'rsa':\n    case rsaPssParams && 'rsa-pss':\n      alg = determineRsaAlgorithm(\n        privateKey,\n        privateKeyInput,\n        this.issuer.dpop_signing_alg_values_supported,\n      );\n      break;\n    default:\n      throw new TypeError('unsupported DPoP private key asymmetric key type');\n  }\n\n  if (!alg) {\n    throw new TypeError('could not determine DPoP JWS Algorithm');\n  }\n\n  return new jose.SignJWT({\n    ath: accessToken\n      ? base64url.encode(crypto.createHash('sha256').update(accessToken).digest())\n      : undefined,\n    ...payload,\n  })\n    .setProtectedHeader({\n      alg,\n      typ: 'dpop+jwt',\n      jwk: await getJwk(privateKey, privateKeyInput),\n    })\n    .setIssuedAt()\n    .setJti(random())\n    .sign(privateKey);\n}\n\nObject.defineProperty(BaseClient.prototype, 'dpopProof', {\n  enumerable: true,\n  configurable: true,\n  value(...args) {\n    process.emitWarning(\n      'The DPoP APIs implements an IETF draft (https://www.ietf.org/archive/id/draft-ietf-oauth-dpop-04.html). Breaking draft implementations are included as minor versions of the openid-client library, therefore, the ~ semver operator should be used and close attention be payed to library changelog as well as the drafts themselves.',\n      'DraftWarning',\n    );\n    Object.defineProperty(BaseClient.prototype, 'dpopProof', {\n      enumerable: true,\n      configurable: true,\n      value: dpopProof,\n    });\n    return this.dpopProof(...args);\n  },\n});\n\nmodule.exports = (issuer, aadIssValidation = false) =>\n  class Client extends BaseClient {\n    constructor(...args) {\n      super(issuer, aadIssValidation, ...args);\n    }\n\n    static get issuer() {\n      return issuer;\n    }\n  };\nmodule.exports.BaseClient = BaseClient;\n", "const LRU = require('lru-cache');\n\nmodule.exports = new LRU({ max: 100 });\n", "// Credit: https://github.com/rohe/pyoidc/blob/master/src/oic/utils/webfinger.py\n\n// -- Normalization --\n// A string of any other type is interpreted as a URI either the form of scheme\n// \"://\" authority path-abempty [ \"?\" query ] [ \"#\" fragment ] or authority\n// path-abempty [ \"?\" query ] [ \"#\" fragment ] per RFC 3986 [RFC3986] and is\n// normalized according to the following rules:\n//\n// If the user input Identifier does not have an RFC 3986 [RFC3986] scheme\n// portion, the string is interpreted as [userinfo \"@\"] host [\":\" port]\n// path-abempty [ \"?\" query ] [ \"#\" fragment ] per RFC 3986 [RFC3986].\n// If the userinfo component is present and all of the path component, query\n// component, and port component are empty, the acct scheme is assumed. In this\n// case, the normalized URI is formed by prefixing acct: to the string as the\n// scheme. Per the 'acct' URI Scheme [I\u2011D.ietf\u2011appsawg\u2011acct\u2011uri], if there is an\n// at-sign character ('@') in the userinfo component, it needs to be\n// percent-encoded as described in RFC 3986 [RFC3986].\n// For all other inputs without a scheme portion, the https scheme is assumed,\n// and the normalized URI is formed by prefixing https:// to the string as the\n// scheme.\n// If the resulting URI contains a fragment portion, it MUST be stripped off\n// together with the fragment delimiter character \"#\".\n// The WebFinger [I\u2011D.ietf\u2011appsawg\u2011webfinger] Resource in this case is the\n// resulting URI, and the WebFinger Host is the authority component.\n//\n// Note: Since the definition of authority in RFC 3986 [RFC3986] is\n// [ userinfo \"@\" ] host [ \":\" port ], it is legal to have a user input\n// identifier like userinfo@host:port, e.g., alice@example.com:8080.\n\nconst PORT = /^\\d+$/;\n\nfunction hasScheme(input) {\n  if (input.includes('://')) return true;\n\n  const authority = input.replace(/(\\/|\\?)/g, '#').split('#')[0];\n  if (authority.includes(':')) {\n    const index = authority.indexOf(':');\n    const hostOrPort = authority.slice(index + 1);\n    if (!PORT.test(hostOrPort)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction acctSchemeAssumed(input) {\n  if (!input.includes('@')) return false;\n  const parts = input.split('@');\n  const host = parts[parts.length - 1];\n  return !(host.includes(':') || host.includes('/') || host.includes('?'));\n}\n\nfunction normalize(input) {\n  if (typeof input !== 'string') {\n    throw new TypeError('input must be a string');\n  }\n\n  let output;\n  if (hasScheme(input)) {\n    output = input;\n  } else if (acctSchemeAssumed(input)) {\n    output = `acct:${input}`;\n  } else {\n    output = `https://${input}`;\n  }\n\n  return output.split('#')[0];\n}\n\nmodule.exports = normalize;\n", "const { inspect } = require('util');\nconst url = require('url');\n\nconst { RPError } = require('./errors');\nconst getClient = require('./client');\nconst registry = require('./issuer_registry');\nconst processResponse = require('./helpers/process_response');\nconst webfingerNormalize = require('./helpers/webfinger_normalize');\nconst request = require('./helpers/request');\nconst clone = require('./helpers/deep_clone');\nconst { keystore } = require('./helpers/issuer');\n\nconst AAD_MULTITENANT_DISCOVERY = [\n  'https://login.microsoftonline.com/common/.well-known/openid-configuration',\n  'https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration',\n  'https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration',\n  'https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration',\n];\nconst AAD_MULTITENANT = Symbol();\nconst ISSUER_DEFAULTS = {\n  claim_types_supported: ['normal'],\n  claims_parameter_supported: false,\n  grant_types_supported: ['authorization_code', 'implicit'],\n  request_parameter_supported: false,\n  request_uri_parameter_supported: true,\n  require_request_uri_registration: false,\n  response_modes_supported: ['query', 'fragment'],\n  token_endpoint_auth_methods_supported: ['client_secret_basic'],\n};\n\nclass Issuer {\n  #metadata;\n  constructor(meta = {}) {\n    const aadIssValidation = meta[AAD_MULTITENANT];\n    delete meta[AAD_MULTITENANT];\n    ['introspection', 'revocation'].forEach((endpoint) => {\n      // if intro/revocation endpoint auth specific meta is missing use the token ones if they\n      // are defined\n      if (\n        meta[`${endpoint}_endpoint`] &&\n        meta[`${endpoint}_endpoint_auth_methods_supported`] === undefined &&\n        meta[`${endpoint}_endpoint_auth_signing_alg_values_supported`] === undefined\n      ) {\n        if (meta.token_endpoint_auth_methods_supported) {\n          meta[`${endpoint}_endpoint_auth_methods_supported`] =\n            meta.token_endpoint_auth_methods_supported;\n        }\n        if (meta.token_endpoint_auth_signing_alg_values_supported) {\n          meta[`${endpoint}_endpoint_auth_signing_alg_values_supported`] =\n            meta.token_endpoint_auth_signing_alg_values_supported;\n        }\n      }\n    });\n\n    this.#metadata = new Map();\n\n    Object.entries(meta).forEach(([key, value]) => {\n      this.#metadata.set(key, value);\n      if (!this[key]) {\n        Object.defineProperty(this, key, {\n          get() {\n            return this.#metadata.get(key);\n          },\n          enumerable: true,\n        });\n      }\n    });\n\n    registry.set(this.issuer, this);\n\n    const Client = getClient(this, aadIssValidation);\n\n    Object.defineProperties(this, {\n      Client: { value: Client, enumerable: true },\n      FAPI1Client: { value: class FAPI1Client extends Client {}, enumerable: true },\n    });\n  }\n\n  get metadata() {\n    return clone(Object.fromEntries(this.#metadata.entries()));\n  }\n\n  static async webfinger(input) {\n    const resource = webfingerNormalize(input);\n    const { host } = url.parse(resource);\n    const webfingerUrl = `https://${host}/.well-known/webfinger`;\n\n    const response = await request.call(this, {\n      method: 'GET',\n      url: webfingerUrl,\n      responseType: 'json',\n      searchParams: { resource, rel: 'http://openid.net/specs/connect/1.0/issuer' },\n      headers: {\n        Accept: 'application/json',\n      },\n    });\n    const body = processResponse(response);\n\n    const location =\n      Array.isArray(body.links) &&\n      body.links.find(\n        (link) =>\n          typeof link === 'object' &&\n          link.rel === 'http://openid.net/specs/connect/1.0/issuer' &&\n          link.href,\n      );\n\n    if (!location) {\n      throw new RPError({\n        message: 'no issuer found in webfinger response',\n        body,\n      });\n    }\n\n    if (typeof location.href !== 'string' || !location.href.startsWith('https://')) {\n      throw new RPError({\n        printf: ['invalid issuer location %s', location.href],\n        body,\n      });\n    }\n\n    const expectedIssuer = location.href;\n    if (registry.has(expectedIssuer)) {\n      return registry.get(expectedIssuer);\n    }\n\n    const issuer = await this.discover(expectedIssuer);\n\n    if (issuer.issuer !== expectedIssuer) {\n      registry.del(issuer.issuer);\n      throw new RPError(\n        'discovered issuer mismatch, expected %s, got: %s',\n        expectedIssuer,\n        issuer.issuer,\n      );\n    }\n    return issuer;\n  }\n\n  static async discover(uri) {\n    const parsed = url.parse(uri);\n\n    if (parsed.pathname.includes('/.well-known/')) {\n      const response = await request.call(this, {\n        method: 'GET',\n        responseType: 'json',\n        url: uri,\n        headers: {\n          Accept: 'application/json',\n        },\n      });\n      const body = processResponse(response);\n      return new Issuer({\n        ...ISSUER_DEFAULTS,\n        ...body,\n        [AAD_MULTITENANT]: !!AAD_MULTITENANT_DISCOVERY.find((discoveryURL) =>\n          uri.startsWith(discoveryURL),\n        ),\n      });\n    }\n\n    let pathname;\n    if (parsed.pathname.endsWith('/')) {\n      pathname = `${parsed.pathname}.well-known/openid-configuration`;\n    } else {\n      pathname = `${parsed.pathname}/.well-known/openid-configuration`;\n    }\n\n    const wellKnownUri = url.format({ ...parsed, pathname });\n\n    const response = await request.call(this, {\n      method: 'GET',\n      responseType: 'json',\n      url: wellKnownUri,\n      headers: {\n        Accept: 'application/json',\n      },\n    });\n    const body = processResponse(response);\n    return new Issuer({\n      ...ISSUER_DEFAULTS,\n      ...body,\n      [AAD_MULTITENANT]: !!AAD_MULTITENANT_DISCOVERY.find((discoveryURL) =>\n        wellKnownUri.startsWith(discoveryURL),\n      ),\n    });\n  }\n\n  async reloadJwksUri() {\n    await keystore.call(this, true);\n  }\n\n  /* istanbul ignore next */\n  [inspect.custom]() {\n    return `${this.constructor.name} ${inspect(this.metadata, {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true,\n    })}`;\n  }\n}\n\nmodule.exports = Issuer;\n", "const url = require('url');\nconst { format } = require('util');\n\nconst cloneDeep = require('./helpers/deep_clone');\nconst { RPError, OPError } = require('./errors');\nconst { BaseClient } = require('./client');\nconst { random, codeChallenge } = require('./helpers/generators');\nconst pick = require('./helpers/pick');\nconst { resolveResponseType, resolveRedirectUri } = require('./helpers/client');\n\nfunction verified(err, user, info = {}) {\n  if (err) {\n    this.error(err);\n  } else if (!user) {\n    this.fail(info);\n  } else {\n    this.success(user, info);\n  }\n}\n\nfunction OpenIDConnectStrategy(\n  { client, params = {}, passReqToCallback = false, sessionKey, usePKCE = true, extras = {} } = {},\n  verify,\n) {\n  if (!(client instanceof BaseClient)) {\n    throw new TypeError('client must be an instance of openid-client Client');\n  }\n\n  if (typeof verify !== 'function') {\n    throw new TypeError('verify callback must be a function');\n  }\n\n  if (!client.issuer || !client.issuer.issuer) {\n    throw new TypeError('client must have an issuer with an identifier');\n  }\n\n  this._client = client;\n  this._issuer = client.issuer;\n  this._verify = verify;\n  this._passReqToCallback = passReqToCallback;\n  this._usePKCE = usePKCE;\n  this._key = sessionKey || `oidc:${url.parse(this._issuer.issuer).hostname}`;\n  this._params = cloneDeep(params);\n\n  // state and nonce are handled in authenticate()\n  delete this._params.state;\n  delete this._params.nonce;\n\n  this._extras = cloneDeep(extras);\n\n  if (!this._params.response_type) this._params.response_type = resolveResponseType.call(client);\n  if (!this._params.redirect_uri) this._params.redirect_uri = resolveRedirectUri.call(client);\n  if (!this._params.scope) this._params.scope = 'openid';\n\n  if (this._usePKCE === true) {\n    const supportedMethods = Array.isArray(this._issuer.code_challenge_methods_supported)\n      ? this._issuer.code_challenge_methods_supported\n      : false;\n\n    if (supportedMethods && supportedMethods.includes('S256')) {\n      this._usePKCE = 'S256';\n    } else if (supportedMethods && supportedMethods.includes('plain')) {\n      this._usePKCE = 'plain';\n    } else if (supportedMethods) {\n      throw new TypeError(\n        'neither code_challenge_method supported by the client is supported by the issuer',\n      );\n    } else {\n      this._usePKCE = 'S256';\n    }\n  } else if (typeof this._usePKCE === 'string' && !['plain', 'S256'].includes(this._usePKCE)) {\n    throw new TypeError(`${this._usePKCE} is not valid/implemented PKCE code_challenge_method`);\n  }\n\n  this.name = url.parse(client.issuer.issuer).hostname;\n}\n\nOpenIDConnectStrategy.prototype.authenticate = function authenticate(req, options) {\n  (async () => {\n    const client = this._client;\n    if (!req.session) {\n      throw new TypeError('authentication requires session support');\n    }\n    const reqParams = client.callbackParams(req);\n    const sessionKey = this._key;\n\n    const { 0: parameter, length } = Object.keys(reqParams);\n\n    /**\n     * Start authentication request if this has no authorization response parameters or\n     * this might a login initiated from a third party as per\n     * https://openid.net/specs/openid-connect-core-1_0.html#ThirdPartyInitiatedLogin.\n     */\n    if (length === 0 || (length === 1 && parameter === 'iss')) {\n      // provide options object with extra authentication parameters\n      const params = {\n        state: random(),\n        ...this._params,\n        ...options,\n      };\n\n      if (!params.nonce && params.response_type.includes('id_token')) {\n        params.nonce = random();\n      }\n\n      req.session[sessionKey] = pick(params, 'nonce', 'state', 'max_age', 'response_type');\n\n      if (this._usePKCE && params.response_type.includes('code')) {\n        const verifier = random();\n        req.session[sessionKey].code_verifier = verifier;\n\n        switch (this._usePKCE) {\n          case 'S256':\n            params.code_challenge = codeChallenge(verifier);\n            params.code_challenge_method = 'S256';\n            break;\n          case 'plain':\n            params.code_challenge = verifier;\n            break;\n        }\n      }\n\n      this.redirect(client.authorizationUrl(params));\n      return;\n    }\n    /* end authentication request */\n\n    /* start authentication response */\n\n    const session = req.session[sessionKey];\n    if (Object.keys(session || {}).length === 0) {\n      throw new Error(\n        format(\n          'did not find expected authorization request details in session, req.session[\"%s\"] is %j',\n          sessionKey,\n          session,\n        ),\n      );\n    }\n\n    const {\n      state,\n      nonce,\n      max_age: maxAge,\n      code_verifier: codeVerifier,\n      response_type: responseType,\n    } = session;\n\n    try {\n      delete req.session[sessionKey];\n    } catch (err) {}\n\n    const opts = {\n      redirect_uri: this._params.redirect_uri,\n      ...options,\n    };\n\n    const checks = {\n      state,\n      nonce,\n      max_age: maxAge,\n      code_verifier: codeVerifier,\n      response_type: responseType,\n    };\n\n    const tokenset = await client.callback(opts.redirect_uri, reqParams, checks, this._extras);\n\n    const passReq = this._passReqToCallback;\n    const loadUserinfo = this._verify.length > (passReq ? 3 : 2) && client.issuer.userinfo_endpoint;\n\n    const args = [tokenset, verified.bind(this)];\n\n    if (loadUserinfo) {\n      if (!tokenset.access_token) {\n        throw new RPError({\n          message:\n            'expected access_token to be returned when asking for userinfo in verify callback',\n          tokenset,\n        });\n      }\n      const userinfo = await client.userinfo(tokenset);\n      args.splice(1, 0, userinfo);\n    }\n\n    if (passReq) {\n      args.unshift(req);\n    }\n\n    this._verify(...args);\n    /* end authentication response */\n  })().catch((error) => {\n    if (\n      (error instanceof OPError &&\n        error.error !== 'server_error' &&\n        !error.error.startsWith('invalid')) ||\n      error instanceof RPError\n    ) {\n      this.fail(error);\n    } else {\n      this.error(error);\n    }\n  });\n};\n\nmodule.exports = OpenIDConnectStrategy;\n", "const Issuer = require('./issuer');\nconst { OPError, RPError } = require('./errors');\nconst Strategy = require('./passport_strategy');\nconst TokenSet = require('./token_set');\nconst { CLOCK_TOLERANCE, HTTP_OPTIONS } = require('./helpers/consts');\nconst generators = require('./helpers/generators');\nconst { setDefaults } = require('./helpers/request');\n\nmodule.exports = {\n  Issuer,\n  Strategy,\n  TokenSet,\n  errors: {\n    OPError,\n    RPError,\n  },\n  custom: {\n    setHttpOptionsDefaults: setDefaults,\n    http_options: HTTP_OPTIONS,\n    clock_tolerance: CLOCK_TOLERANCE,\n  },\n  generators,\n};\n", "/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n\n  // Hiding the given function\n  Object.defineProperty(this, '_next', {\n    writable: false,\n    enumerable: false,\n    value: next\n  });\n\n  // Is the iterator complete?\n  this.done = false;\n}\n\n/**\n * Next function.\n *\n * @return {object}\n */\n// NOTE: maybe this should dropped for performance?\nIterator.prototype.next = function() {\n  if (this.done)\n    return {done: true};\n\n  var step = this._next();\n\n  if (step.done)\n    this.done = true;\n\n  return step;\n};\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function() {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function() {\n  var args = arguments,\n      l = args.length,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function() {\n  var iterator = new Iterator(null);\n  iterator.done = true;\n\n  return iterator;\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function(value) {\n  if (value instanceof Iterator)\n    return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n", "/**\n * Obliterator ForEach Function\n * =============================\n *\n * Helper function used to easily iterate over mixed values.\n */\n\n/**\n * Constants.\n */\nvar ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined',\n    SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n\n/**\n * Function able to iterate over almost any iterable JS value.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nfunction forEach(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable)\n    throw new Error('obliterator/forEach: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEach: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++)\n      callback(iterable[i], i);\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while ((s = iterator.next(), s.done !== true)) {\n      callback(s.value, i);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n}\n\n/**\n * Same function as the above `forEach` but will yield `null` when the target\n * does not have keys.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nforEach.forEachWithNullKeys = function(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable)\n    throw new Error('obliterator/forEachWithNullKeys: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEachWithNullKeys: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++)\n      callback(iterable[i], null);\n    return;\n  }\n\n  // The target is a Set\n  if (iterable instanceof Set) {\n    iterable.forEach(function(value) {\n      callback(value, null);\n    });\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while ((s = iterator.next(), s.done !== true)) {\n      callback(s.value, null);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = forEach;\n", "/**\n * Mnemonist Typed Array Helpers\n * ==============================\n *\n * Miscellaneous helpers related to typed arrays.\n */\n\n/**\n * When using an unsigned integer array to store pointers, one might want to\n * choose the optimal word size in regards to the actual numbers of pointers\n * to store.\n *\n * This helpers does just that.\n *\n * @param  {number} size - Expected size of the array to map.\n * @return {TypedArray}\n */\nvar MAX_8BIT_INTEGER = Math.pow(2, 8) - 1,\n    MAX_16BIT_INTEGER = Math.pow(2, 16) - 1,\n    MAX_32BIT_INTEGER = Math.pow(2, 32) - 1;\n\nvar MAX_SIGNED_8BIT_INTEGER = Math.pow(2, 7) - 1,\n    MAX_SIGNED_16BIT_INTEGER = Math.pow(2, 15) - 1,\n    MAX_SIGNED_32BIT_INTEGER = Math.pow(2, 31) - 1;\n\nexports.getPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_8BIT_INTEGER)\n    return Uint8Array;\n\n  if (maxIndex <= MAX_16BIT_INTEGER)\n    return Uint16Array;\n\n  if (maxIndex <= MAX_32BIT_INTEGER)\n    return Uint32Array;\n\n  return Float64Array;\n};\n\nexports.getSignedPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_SIGNED_8BIT_INTEGER)\n    return Int8Array;\n\n  if (maxIndex <= MAX_SIGNED_16BIT_INTEGER)\n    return Int16Array;\n\n  if (maxIndex <= MAX_SIGNED_32BIT_INTEGER)\n    return Int32Array;\n\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given number.\n *\n * @param  {number} value - Value to test.\n * @return {TypedArrayClass}\n */\nexports.getNumberType = function(value) {\n\n  // <= 32 bits itnteger?\n  if (value === (value | 0)) {\n\n    // Negative\n    if (Math.sign(value) === -1) {\n      if (value <= 127 && value >= -128)\n        return Int8Array;\n\n      if (value <= 32767 && value >= -32768)\n        return Int16Array;\n\n      return Int32Array;\n    }\n    else {\n\n      if (value <= 255)\n        return Uint8Array;\n\n      if (value <= 65535)\n        return Uint16Array;\n\n      return Uint32Array;\n    }\n  }\n\n  // 53 bits integer & floats\n  // NOTE: it's kinda hard to tell whether we could use 32bits or not...\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given array\n * of JavaScript numbers.\n *\n * @param  {array}    array  - Array to represent.\n * @param  {function} getter - Optional getter.\n * @return {TypedArrayClass}\n */\nvar TYPE_PRIORITY = {\n  Uint8Array: 1,\n  Int8Array: 2,\n  Uint16Array: 3,\n  Int16Array: 4,\n  Uint32Array: 5,\n  Int32Array: 6,\n  Float32Array: 7,\n  Float64Array: 8\n};\n\n// TODO: make this a one-shot for one value\nexports.getMinimalRepresentation = function(array, getter) {\n  var maxType = null,\n      maxPriority = 0,\n      p,\n      t,\n      v,\n      i,\n      l;\n\n  for (i = 0, l = array.length; i < l; i++) {\n    v = getter ? getter(array[i]) : array[i];\n    t = exports.getNumberType(v);\n    p = TYPE_PRIORITY[t.name];\n\n    if (p > maxPriority) {\n      maxPriority = p;\n      maxType = t;\n    }\n  }\n\n  return maxType;\n};\n\n/**\n * Function returning whether the given value is a typed array.\n *\n * @param  {any} value - Value to test.\n * @return {boolean}\n */\nexports.isTypedArray = function(value) {\n  return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView(value);\n};\n\n/**\n * Function used to concat byte arrays.\n *\n * @param  {...ByteArray}\n * @return {ByteArray}\n */\nexports.concat = function() {\n  var length = 0,\n      i,\n      o,\n      l;\n\n  for (i = 0, l = arguments.length; i < l; i++)\n    length += arguments[i].length;\n\n  var array = new (arguments[0].constructor)(length);\n\n  for (i = 0, o = 0; i < l; i++) {\n    array.set(arguments[i], o);\n    o += arguments[i].length;\n  }\n\n  return array;\n};\n\n/**\n * Function used to initialize a byte array of indices.\n *\n * @param  {number}    length - Length of target.\n * @return {ByteArray}\n */\nexports.indices = function(length) {\n  var PointerArray = exports.getPointerArray(length);\n\n  var array = new PointerArray(length);\n\n  for (var i = 0; i < length; i++)\n    array[i] = i;\n\n  return array;\n};\n", "/**\n * Mnemonist Iterable Function\n * ============================\n *\n * Harmonized iteration helpers over mixed iterable targets.\n */\nvar forEach = require('obliterator/foreach');\n\nvar typed = require('./typed-arrays.js');\n\n/**\n * Function used to determine whether the given object supports array-like\n * random access.\n *\n * @param  {any} target - Target object.\n * @return {boolean}\n */\nfunction isArrayLike(target) {\n  return Array.isArray(target) || typed.isTypedArray(target);\n}\n\n/**\n * Function used to guess the length of the structure over which we are going\n * to iterate.\n *\n * @param  {any} target - Target object.\n * @return {number|undefined}\n */\nfunction guessLength(target) {\n  if (typeof target.length === 'number')\n    return target.length;\n\n  if (typeof target.size === 'number')\n    return target.size;\n\n  return;\n}\n\n/**\n * Function used to convert an iterable to an array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArray(target) {\n  var l = guessLength(target);\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i++] = value;\n  });\n\n  return array;\n}\n\n/**\n * Same as above but returns a supplementary indices array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArrayWithIndices(target) {\n  var l = guessLength(target);\n\n  var IndexArray = typeof l === 'number' ?\n    typed.getPointerArray(l) :\n    Array;\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n  var indices = typeof l === 'number' ? new IndexArray(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i] = value;\n    indices[i] = i++;\n  });\n\n  return [array, indices];\n}\n\n/**\n * Exporting.\n */\nexports.isArrayLike = isArrayLike;\nexports.guessLength = guessLength;\nexports.toArray = toArray;\nexports.toArrayWithIndices = toArrayWithIndices;\n", "/**\n * Mnemonist LRUCache\n * ===================\n *\n * JavaScript implementation of the LRU Cache data structure. To save up\n * memory and allocations this implementation represents its underlying\n * doubly-linked list as static arrays and pointers. Thus, memory is allocated\n * only once at instantiation and JS objects are never created to serve as\n * pointers. This also means this implementation does not trigger too many\n * garbage collections.\n *\n * Note that to save up memory, a LRU Cache can be implemented using a singly\n * linked list by storing predecessors' pointers as hashmap values.\n * However, this means more hashmap lookups and would probably slow the whole\n * thing down. What's more, pointers are not the things taking most space in\n * memory.\n */\nvar Iterator = require('obliterator/iterator'),\n    forEach = require('obliterator/foreach'),\n    typed = require('./utils/typed-arrays.js'),\n    iterables = require('./utils/iterables.js');\n\n/**\n * LRUCache.\n *\n * @constructor\n * @param {function} Keys     - Array class for storing keys.\n * @param {function} Values   - Array class for storing values.\n * @param {number}   capacity - Desired capacity.\n */\nfunction LRUCache(Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  this.capacity = capacity;\n\n  if (typeof this.capacity !== 'number' || this.capacity <= 0)\n    throw new Error('mnemonist/lru-cache: capacity should be positive number.');\n\n  var PointerArray = typed.getPointerArray(capacity);\n\n  this.forward = new PointerArray(capacity);\n  this.backward = new PointerArray(capacity);\n  this.K = typeof Keys === 'function' ? new Keys(capacity) : new Array(capacity);\n  this.V = typeof Values === 'function' ? new Values(capacity) : new Array(capacity);\n\n  // Properties\n  this.size = 0;\n  this.head = 0;\n  this.tail = 0;\n  this.items = {};\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nLRUCache.prototype.clear = function() {\n  this.size = 0;\n  this.head = 0;\n  this.tail = 0;\n  this.items = {};\n};\n\n/**\n * Method used to splay a value on top.\n *\n * @param  {number}   pointer - Pointer of the value to splay on top.\n * @return {LRUCache}\n */\nLRUCache.prototype.splayOnTop = function(pointer) {\n  var oldHead = this.head;\n\n  if (this.head === pointer)\n    return this;\n\n  var previous = this.backward[pointer],\n      next = this.forward[pointer];\n\n  if (this.tail === pointer) {\n    this.tail = previous;\n  }\n  else {\n    this.backward[next] = previous;\n  }\n\n  this.forward[previous] = next;\n\n  this.backward[oldHead] = pointer;\n  this.head = pointer;\n  this.forward[pointer] = oldHead;\n\n  return this;\n};\n\n/**\n * Method used to set the value for the given key in the cache.\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {undefined}\n */\nLRUCache.prototype.set = function(key, value) {\n\n  // The key already exists, we just need to update the value and splay on top\n  var pointer = this.items[key];\n\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    this.V[pointer] = value;\n\n    return;\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    pointer = this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    delete this.items[this.K[pointer]];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n};\n\n/**\n * Method used to set the value for the given key in the cache\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {{evicted: boolean, key: any, value: any}} An object containing the\n * key and value of an item that was overwritten or evicted in the set\n * operation, as well as a boolean indicating whether it was evicted due to\n * limited capacity. Return value is null if nothing was evicted or overwritten\n * during the set operation.\n */\nLRUCache.prototype.setpop = function(key, value) {\n  var oldValue = null;\n  var oldKey = null;\n  // The key already exists, we just need to update the value and splay on top\n  var pointer = this.items[key];\n\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    oldValue = this.V[pointer];\n    this.V[pointer] = value;\n    return {evicted: false, key: key, value: oldValue};\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    pointer = this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    oldValue = this.V[pointer];\n    oldKey = this.K[pointer];\n    delete this.items[this.K[pointer]];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n\n  // Return object if eviction took place, otherwise return null\n  if (oldKey) {\n    return {evicted: true, key: oldKey, value: oldValue};\n  }\n  else {\n    return null;\n  }\n};\n\n/**\n * Method used to check whether the key exists in the cache.\n *\n * @param  {any} key   - Key.\n * @return {boolean}\n */\nLRUCache.prototype.has = function(key) {\n  return key in this.items;\n};\n\n/**\n * Method used to get the value attached to the given key. Will move the\n * related key to the front of the underlying linked list.\n *\n * @param  {any} key   - Key.\n * @return {any}\n */\nLRUCache.prototype.get = function(key) {\n  var pointer = this.items[key];\n\n  if (typeof pointer === 'undefined')\n    return;\n\n  this.splayOnTop(pointer);\n\n  return this.V[pointer];\n};\n\n/**\n * Method used to get the value attached to the given key. Does not modify\n * the ordering of the underlying linked list.\n *\n * @param  {any} key   - Key.\n * @return {any}\n */\nLRUCache.prototype.peek = function(key) {\n    var pointer = this.items[key];\n\n    if (typeof pointer === 'undefined')\n        return;\n\n    return this.V[pointer];\n};\n\n/**\n * Method used to iterate over the cache's entries using a callback.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nLRUCache.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      values = this.V,\n      forward = this.forward;\n\n  while (i < l) {\n\n    callback.call(scope, values[pointer], keys[pointer], this);\n    pointer = forward[pointer];\n\n    i++;\n  }\n};\n\n/**\n * Method used to create an iterator over the cache's keys from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.keys = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var key = keys[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: key\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the cache's values from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.values = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      values = this.V,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var value = values[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: value\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the cache's entries from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.entries = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      values = this.V,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var key = keys[pointer],\n        value = values[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: [key, value]\n    };\n  });\n};\n\n/**\n * Attaching the #.entries method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  LRUCache.prototype[Symbol.iterator] = LRUCache.prototype.entries;\n\n/**\n * Convenience known methods.\n */\nLRUCache.prototype.inspect = function() {\n  var proxy = new Map();\n\n  var iterator = this.entries(),\n      step;\n\n  while ((step = iterator.next(), !step.done))\n    proxy.set(step.value[0], step.value[1]);\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: LRUCache,\n    enumerable: false\n  });\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  LRUCache.prototype[Symbol.for('nodejs.util.inspect.custom')] = LRUCache.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a structure.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @param  {function} Keys     - Array class for storing keys.\n * @param  {function} Values   - Array class for storing values.\n * @param  {number}   capacity - Cache's capacity.\n * @return {LRUCache}\n */\nLRUCache.from = function(iterable, Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = iterables.guessLength(iterable);\n\n    if (typeof capacity !== 'number')\n      throw new Error('mnemonist/lru-cache.from: could not guess iterable length. Please provide desired capacity as last argument.');\n  }\n  else if (arguments.length === 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  var cache = new LRUCache(Keys, Values, capacity);\n\n  forEach(iterable, function(value, key) {\n    cache.set(key, value);\n  });\n\n  return cache;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = LRUCache;\n", "export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n", "export const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                return mw.name + \": \" + (mw.tags || []).join(\",\");\n            });\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n", "import { constructStack } from \"@aws-sdk/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.middlewareStack = constructStack();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\n", "import { constructStack } from \"@aws-sdk/middleware-stack\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n}\n", "export const SENSITIVE_STRING = \"***SensitiveInformation***\";\n", "export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n", "import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\nexport const parseRfc3339DateTimeWithOffset = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339_WITH_OFFSET.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n    if (offsetStr.toUpperCase() != \"Z\") {\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n    }\n    return date;\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst parseOffsetToMilliseconds = (value) => {\n    const directionStr = value[0];\n    let direction = 1;\n    if (directionStr == \"+\") {\n        direction = 1;\n    }\n    else if (directionStr == \"-\") {\n        direction = -1;\n    }\n    else {\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n    }\n    const hour = Number(value.substring(1, 3));\n    const minute = Number(value.substring(4, 6));\n    return direction * (hour * 60 + minute) * 60 * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n", "export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n", "import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n", "export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n", "let warningEmitted = false;\nexport const emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 14) {\n        warningEmitted = true;\n    }\n};\n", "export function extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\n", "export const getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\n", "export const StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(StringWrapper, String);\nexport class LazyJsonString extends StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\n", "export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexport const take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n", "export const _json = (obj) => {\n    if (obj == null) {\n        return {};\n    }\n    if (Array.isArray(obj)) {\n        return obj.filter((_) => _ != null);\n    }\n    if (typeof obj === \"object\") {\n        const target = {};\n        for (const key of Object.keys(obj)) {\n            if (obj[key] == null) {\n                continue;\n            }\n            target[key] = _json(obj[key]);\n        }\n        return target;\n    }\n    return obj;\n};\n", "export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, region, account, typeOrId] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return arn === \"arn\" && !!partition && !!service && !!account && !!typeOrId;\n};\n", "export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n", "import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n", "export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n", "import { parseQueryString } from \"@aws-sdk/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n", "import { parseUrl } from \"@aws-sdk/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n", "import { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\nexport const endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n", "export const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!('$metadata' in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            error.message += \"\\n  \" + hint;\n        }\n        throw error;\n    }\n};\n", "export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpoint = context.endpointV2?.url && options.urlParser\n        ? async () => options.urlParser(context.endpointV2.url)\n        : options.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n", "import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n", "import { serializerMiddlewareOption } from \"@aws-sdk/middleware-serde\";\nimport { endpointMiddleware } from \"./endpointMiddleware\";\nexport const endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n", "export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n", "import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\nexport const resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    return {\n        ...input,\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider(input.useFipsEndpoint ?? false),\n    };\n};\n", "export var FieldPosition;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(FieldPosition || (FieldPosition = {}));\n", "export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n", "export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n", "import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;", "import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class SSMServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSMServiceException.prototype);\n    }\n}\n", "import { SENSITIVE_STRING } from \"@aws-sdk/smithy-client\";\nimport { SSMServiceException as __BaseException } from \"./SSMServiceException\";\nexport const ResourceTypeForTagging = {\n    ASSOCIATION: \"Association\",\n    AUTOMATION: \"Automation\",\n    DOCUMENT: \"Document\",\n    MAINTENANCE_WINDOW: \"MaintenanceWindow\",\n    MANAGED_INSTANCE: \"ManagedInstance\",\n    OPSMETADATA: \"OpsMetadata\",\n    OPS_ITEM: \"OpsItem\",\n    PARAMETER: \"Parameter\",\n    PATCH_BASELINE: \"PatchBaseline\",\n};\nexport class InternalServerError extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InternalServerError\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"InternalServerError\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServerError.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidResourceId extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidResourceId\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidResourceId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidResourceId.prototype);\n    }\n}\nexport class InvalidResourceType extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidResourceType\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidResourceType\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidResourceType.prototype);\n    }\n}\nexport class TooManyTagsError extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TooManyTagsError\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyTagsError\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyTagsError.prototype);\n    }\n}\nexport class TooManyUpdates extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TooManyUpdates\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyUpdates\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyUpdates.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const ExternalAlarmState = {\n    ALARM: \"ALARM\",\n    UNKNOWN: \"UNKNOWN\",\n};\nexport class AlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AlreadyExistsException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class OpsItemInvalidParameterException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsItemInvalidParameterException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsItemInvalidParameterException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemInvalidParameterException.prototype);\n        this.ParameterNames = opts.ParameterNames;\n        this.Message = opts.Message;\n    }\n}\nexport class OpsItemLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsItemLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsItemLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemLimitExceededException.prototype);\n        this.ResourceTypes = opts.ResourceTypes;\n        this.Limit = opts.Limit;\n        this.LimitType = opts.LimitType;\n        this.Message = opts.Message;\n    }\n}\nexport class OpsItemNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsItemNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsItemNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class OpsItemRelatedItemAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsItemRelatedItemAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsItemRelatedItemAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemRelatedItemAlreadyExistsException.prototype);\n        this.Message = opts.Message;\n        this.ResourceUri = opts.ResourceUri;\n        this.OpsItemId = opts.OpsItemId;\n    }\n}\nexport class DuplicateInstanceId extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"DuplicateInstanceId\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DuplicateInstanceId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DuplicateInstanceId.prototype);\n    }\n}\nexport class InvalidCommandId extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidCommandId\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidCommandId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidCommandId.prototype);\n    }\n}\nexport class InvalidInstanceId extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidInstanceId\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidInstanceId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidInstanceId.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class DoesNotExistException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"DoesNotExistException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DoesNotExistException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DoesNotExistException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidParameters extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidParameters\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidParameters\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidParameters.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class AssociationAlreadyExists extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AssociationAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AssociationAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociationAlreadyExists.prototype);\n    }\n}\nexport class AssociationLimitExceeded extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AssociationLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AssociationLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociationLimitExceeded.prototype);\n    }\n}\nexport const AssociationComplianceSeverity = {\n    Critical: \"CRITICAL\",\n    High: \"HIGH\",\n    Low: \"LOW\",\n    Medium: \"MEDIUM\",\n    Unspecified: \"UNSPECIFIED\",\n};\nexport const AssociationSyncCompliance = {\n    Auto: \"AUTO\",\n    Manual: \"MANUAL\",\n};\nexport const AssociationStatusName = {\n    Failed: \"Failed\",\n    Pending: \"Pending\",\n    Success: \"Success\",\n};\nexport class InvalidDocument extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDocument\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDocument\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocument.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidDocumentVersion extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDocumentVersion\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDocumentVersion\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocumentVersion.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidOutputLocation extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOutputLocation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOutputLocation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOutputLocation.prototype);\n    }\n}\nexport class InvalidSchedule extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidSchedule\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidSchedule\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidSchedule.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidTag extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidTag\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidTag\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTag.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidTarget extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidTarget\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidTarget\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTarget.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidTargetMaps extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidTargetMaps\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidTargetMaps\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTargetMaps.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class UnsupportedPlatformType extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedPlatformType\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedPlatformType\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedPlatformType.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const Fault = {\n    Client: \"Client\",\n    Server: \"Server\",\n    Unknown: \"Unknown\",\n};\nexport const AttachmentsSourceKey = {\n    AttachmentReference: \"AttachmentReference\",\n    S3FileUrl: \"S3FileUrl\",\n    SourceUrl: \"SourceUrl\",\n};\nexport const DocumentFormat = {\n    JSON: \"JSON\",\n    TEXT: \"TEXT\",\n    YAML: \"YAML\",\n};\nexport const DocumentType = {\n    ApplicationConfiguration: \"ApplicationConfiguration\",\n    ApplicationConfigurationSchema: \"ApplicationConfigurationSchema\",\n    Automation: \"Automation\",\n    ChangeCalendar: \"ChangeCalendar\",\n    ChangeTemplate: \"Automation.ChangeTemplate\",\n    CloudFormation: \"CloudFormation\",\n    Command: \"Command\",\n    ConformancePackTemplate: \"ConformancePackTemplate\",\n    DeploymentStrategy: \"DeploymentStrategy\",\n    Package: \"Package\",\n    Policy: \"Policy\",\n    ProblemAnalysis: \"ProblemAnalysis\",\n    ProblemAnalysisTemplate: \"ProblemAnalysisTemplate\",\n    QuickSetup: \"QuickSetup\",\n    Session: \"Session\",\n};\nexport const DocumentHashType = {\n    SHA1: \"Sha1\",\n    SHA256: \"Sha256\",\n};\nexport const DocumentParameterType = {\n    String: \"String\",\n    StringList: \"StringList\",\n};\nexport const PlatformType = {\n    LINUX: \"Linux\",\n    MACOS: \"MacOS\",\n    WINDOWS: \"Windows\",\n};\nexport const ReviewStatus = {\n    APPROVED: \"APPROVED\",\n    NOT_REVIEWED: \"NOT_REVIEWED\",\n    PENDING: \"PENDING\",\n    REJECTED: \"REJECTED\",\n};\nexport const DocumentStatus = {\n    Active: \"Active\",\n    Creating: \"Creating\",\n    Deleting: \"Deleting\",\n    Failed: \"Failed\",\n    Updating: \"Updating\",\n};\nexport class DocumentAlreadyExists extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"DocumentAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DocumentAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DocumentAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class DocumentLimitExceeded extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"DocumentLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DocumentLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DocumentLimitExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidDocumentContent extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDocumentContent\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDocumentContent\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocumentContent.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidDocumentSchemaVersion extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDocumentSchemaVersion\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDocumentSchemaVersion\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocumentSchemaVersion.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class MaxDocumentSizeExceeded extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"MaxDocumentSizeExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MaxDocumentSizeExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MaxDocumentSizeExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class IdempotentParameterMismatch extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IdempotentParameterMismatch\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IdempotentParameterMismatch\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IdempotentParameterMismatch.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ResourceLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const OpsItemDataType = {\n    SEARCHABLE_STRING: \"SearchableString\",\n    STRING: \"String\",\n};\nexport class OpsItemAccessDeniedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsItemAccessDeniedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsItemAccessDeniedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemAccessDeniedException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class OpsItemAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsItemAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsItemAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemAlreadyExistsException.prototype);\n        this.Message = opts.Message;\n        this.OpsItemId = opts.OpsItemId;\n    }\n}\nexport class OpsMetadataAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsMetadataAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsMetadataAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataAlreadyExistsException.prototype);\n    }\n}\nexport class OpsMetadataInvalidArgumentException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsMetadataInvalidArgumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsMetadataInvalidArgumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataInvalidArgumentException.prototype);\n    }\n}\nexport class OpsMetadataLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsMetadataLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsMetadataLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataLimitExceededException.prototype);\n    }\n}\nexport class OpsMetadataTooManyUpdatesException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsMetadataTooManyUpdatesException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsMetadataTooManyUpdatesException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataTooManyUpdatesException.prototype);\n    }\n}\nexport const PatchComplianceLevel = {\n    Critical: \"CRITICAL\",\n    High: \"HIGH\",\n    Informational: \"INFORMATIONAL\",\n    Low: \"LOW\",\n    Medium: \"MEDIUM\",\n    Unspecified: \"UNSPECIFIED\",\n};\nexport const PatchFilterKey = {\n    AdvisoryId: \"ADVISORY_ID\",\n    Arch: \"ARCH\",\n    BugzillaId: \"BUGZILLA_ID\",\n    CVEId: \"CVE_ID\",\n    Classification: \"CLASSIFICATION\",\n    Epoch: \"EPOCH\",\n    MsrcSeverity: \"MSRC_SEVERITY\",\n    Name: \"NAME\",\n    PatchId: \"PATCH_ID\",\n    PatchSet: \"PATCH_SET\",\n    Priority: \"PRIORITY\",\n    Product: \"PRODUCT\",\n    ProductFamily: \"PRODUCT_FAMILY\",\n    Release: \"RELEASE\",\n    Repository: \"REPOSITORY\",\n    Section: \"SECTION\",\n    Security: \"SECURITY\",\n    Severity: \"SEVERITY\",\n    Version: \"VERSION\",\n};\nexport const OperatingSystem = {\n    AlmaLinux: \"ALMA_LINUX\",\n    AmazonLinux: \"AMAZON_LINUX\",\n    AmazonLinux2: \"AMAZON_LINUX_2\",\n    AmazonLinux2022: \"AMAZON_LINUX_2022\",\n    AmazonLinux2023: \"AMAZON_LINUX_2023\",\n    CentOS: \"CENTOS\",\n    Debian: \"DEBIAN\",\n    MacOS: \"MACOS\",\n    OracleLinux: \"ORACLE_LINUX\",\n    Raspbian: \"RASPBIAN\",\n    RedhatEnterpriseLinux: \"REDHAT_ENTERPRISE_LINUX\",\n    Rocky_Linux: \"ROCKY_LINUX\",\n    Suse: \"SUSE\",\n    Ubuntu: \"UBUNTU\",\n    Windows: \"WINDOWS\",\n};\nexport const PatchAction = {\n    AllowAsDependency: \"ALLOW_AS_DEPENDENCY\",\n    Block: \"BLOCK\",\n};\nexport const ResourceDataSyncS3Format = {\n    JSON_SERDE: \"JsonSerDe\",\n};\nexport class ResourceDataSyncAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceDataSyncAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceDataSyncAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceDataSyncAlreadyExistsException.prototype);\n        this.SyncName = opts.SyncName;\n    }\n}\nexport class ResourceDataSyncCountExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceDataSyncCountExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceDataSyncCountExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceDataSyncCountExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ResourceDataSyncInvalidConfigurationException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceDataSyncInvalidConfigurationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceDataSyncInvalidConfigurationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceDataSyncInvalidConfigurationException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidActivation extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidActivation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidActivation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidActivation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidActivationId extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidActivationId\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidActivationId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidActivationId.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class AssociationDoesNotExist extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AssociationDoesNotExist\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AssociationDoesNotExist\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociationDoesNotExist.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class AssociatedInstances extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AssociatedInstances\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AssociatedInstances\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociatedInstances.prototype);\n    }\n}\nexport class InvalidDocumentOperation extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDocumentOperation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDocumentOperation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocumentOperation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const InventorySchemaDeleteOption = {\n    DELETE_SCHEMA: \"DeleteSchema\",\n    DISABLE_SCHEMA: \"DisableSchema\",\n};\nexport class InvalidDeleteInventoryParametersException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDeleteInventoryParametersException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDeleteInventoryParametersException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDeleteInventoryParametersException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidInventoryRequestException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidInventoryRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidInventoryRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidInventoryRequestException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidOptionException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOptionException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOptionException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOptionException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidTypeNameException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidTypeNameException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidTypeNameException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTypeNameException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class OpsMetadataNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsMetadataNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsMetadataNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsMetadataNotFoundException.prototype);\n    }\n}\nexport class ParameterNotFound extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ParameterNotFound\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ParameterNotFound\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterNotFound.prototype);\n    }\n}\nexport class ResourceInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceInUseException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ResourceDataSyncNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceDataSyncNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceDataSyncNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceDataSyncNotFoundException.prototype);\n        this.SyncName = opts.SyncName;\n        this.SyncType = opts.SyncType;\n        this.Message = opts.Message;\n    }\n}\nexport class ResourcePolicyConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourcePolicyConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourcePolicyConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourcePolicyConflictException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ResourcePolicyInvalidParameterException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourcePolicyInvalidParameterException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourcePolicyInvalidParameterException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourcePolicyInvalidParameterException.prototype);\n        this.ParameterNames = opts.ParameterNames;\n        this.Message = opts.Message;\n    }\n}\nexport class TargetInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TargetInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TargetInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TargetInUseException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const DescribeActivationsFilterKeys = {\n    ACTIVATION_IDS: \"ActivationIds\",\n    DEFAULT_INSTANCE_NAME: \"DefaultInstanceName\",\n    IAM_ROLE: \"IamRole\",\n};\nexport class InvalidFilter extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidFilter\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidFilter\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFilter.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidNextToken extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidNextToken\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidNextToken\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidNextToken.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidAssociationVersion extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAssociationVersion\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAssociationVersion\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAssociationVersion.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const AssociationExecutionFilterKey = {\n    CreatedTime: \"CreatedTime\",\n    ExecutionId: \"ExecutionId\",\n    Status: \"Status\",\n};\nexport const AssociationFilterOperatorType = {\n    Equal: \"EQUAL\",\n    GreaterThan: \"GREATER_THAN\",\n    LessThan: \"LESS_THAN\",\n};\nexport class AssociationExecutionDoesNotExist extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AssociationExecutionDoesNotExist\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AssociationExecutionDoesNotExist\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociationExecutionDoesNotExist.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const AssociationExecutionTargetsFilterKey = {\n    ResourceId: \"ResourceId\",\n    ResourceType: \"ResourceType\",\n    Status: \"Status\",\n};\nexport const AutomationExecutionFilterKey = {\n    AUTOMATION_SUBTYPE: \"AutomationSubtype\",\n    AUTOMATION_TYPE: \"AutomationType\",\n    CURRENT_ACTION: \"CurrentAction\",\n    DOCUMENT_NAME_PREFIX: \"DocumentNamePrefix\",\n    EXECUTION_ID: \"ExecutionId\",\n    EXECUTION_STATUS: \"ExecutionStatus\",\n    OPS_ITEM_ID: \"OpsItemId\",\n    PARENT_EXECUTION_ID: \"ParentExecutionId\",\n    START_TIME_AFTER: \"StartTimeAfter\",\n    START_TIME_BEFORE: \"StartTimeBefore\",\n    TAG_KEY: \"TagKey\",\n    TARGET_RESOURCE_GROUP: \"TargetResourceGroup\",\n};\nexport const AutomationExecutionStatus = {\n    APPROVED: \"Approved\",\n    CANCELLED: \"Cancelled\",\n    CANCELLING: \"Cancelling\",\n    CHANGE_CALENDAR_OVERRIDE_APPROVED: \"ChangeCalendarOverrideApproved\",\n    CHANGE_CALENDAR_OVERRIDE_REJECTED: \"ChangeCalendarOverrideRejected\",\n    COMPLETED_WITH_FAILURE: \"CompletedWithFailure\",\n    COMPLETED_WITH_SUCCESS: \"CompletedWithSuccess\",\n    FAILED: \"Failed\",\n    INPROGRESS: \"InProgress\",\n    PENDING: \"Pending\",\n    PENDING_APPROVAL: \"PendingApproval\",\n    PENDING_CHANGE_CALENDAR_OVERRIDE: \"PendingChangeCalendarOverride\",\n    REJECTED: \"Rejected\",\n    RUNBOOK_INPROGRESS: \"RunbookInProgress\",\n    SCHEDULED: \"Scheduled\",\n    SUCCESS: \"Success\",\n    TIMEDOUT: \"TimedOut\",\n    WAITING: \"Waiting\",\n};\nexport const AutomationSubtype = {\n    ChangeRequest: \"ChangeRequest\",\n};\nexport const AutomationType = {\n    CrossAccount: \"CrossAccount\",\n    Local: \"Local\",\n};\nexport const ExecutionMode = {\n    Auto: \"Auto\",\n    Interactive: \"Interactive\",\n};\nexport class InvalidFilterKey extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidFilterKey\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidFilterKey\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFilterKey.prototype);\n    }\n}\nexport class InvalidFilterValue extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidFilterValue\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidFilterValue\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFilterValue.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class AutomationExecutionNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AutomationExecutionNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AutomationExecutionNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationExecutionNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const StepExecutionFilterKey = {\n    ACTION: \"Action\",\n    START_TIME_AFTER: \"StartTimeAfter\",\n    START_TIME_BEFORE: \"StartTimeBefore\",\n    STEP_EXECUTION_ID: \"StepExecutionId\",\n    STEP_EXECUTION_STATUS: \"StepExecutionStatus\",\n    STEP_NAME: \"StepName\",\n};\nexport const DocumentPermissionType = {\n    SHARE: \"Share\",\n};\nexport class InvalidPermissionType extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidPermissionType\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidPermissionType\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidPermissionType.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const PatchDeploymentStatus = {\n    Approved: \"APPROVED\",\n    ExplicitApproved: \"EXPLICIT_APPROVED\",\n    ExplicitRejected: \"EXPLICIT_REJECTED\",\n    PendingApproval: \"PENDING_APPROVAL\",\n};\nexport class UnsupportedOperatingSystem extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedOperatingSystem\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedOperatingSystem\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedOperatingSystem.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const InstanceInformationFilterKey = {\n    ACTIVATION_IDS: \"ActivationIds\",\n    AGENT_VERSION: \"AgentVersion\",\n    ASSOCIATION_STATUS: \"AssociationStatus\",\n    IAM_ROLE: \"IamRole\",\n    INSTANCE_IDS: \"InstanceIds\",\n    PING_STATUS: \"PingStatus\",\n    PLATFORM_TYPES: \"PlatformTypes\",\n    RESOURCE_TYPE: \"ResourceType\",\n};\nexport const PingStatus = {\n    CONNECTION_LOST: \"ConnectionLost\",\n    INACTIVE: \"Inactive\",\n    ONLINE: \"Online\",\n};\nexport const ResourceType = {\n    DOCUMENT: \"Document\",\n    EC2_INSTANCE: \"EC2Instance\",\n    MANAGED_INSTANCE: \"ManagedInstance\",\n};\nexport const SourceType = {\n    AWS_EC2_INSTANCE: \"AWS::EC2::Instance\",\n    AWS_IOT_THING: \"AWS::IoT::Thing\",\n    AWS_SSM_MANAGEDINSTANCE: \"AWS::SSM::ManagedInstance\",\n};\nexport class InvalidInstanceInformationFilterValue extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidInstanceInformationFilterValue\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidInstanceInformationFilterValue\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidInstanceInformationFilterValue.prototype);\n    }\n}\nexport const PatchComplianceDataState = {\n    Failed: \"FAILED\",\n    Installed: \"INSTALLED\",\n    InstalledOther: \"INSTALLED_OTHER\",\n    InstalledPendingReboot: \"INSTALLED_PENDING_REBOOT\",\n    InstalledRejected: \"INSTALLED_REJECTED\",\n    Missing: \"MISSING\",\n    NotApplicable: \"NOT_APPLICABLE\",\n};\nexport const PatchOperationType = {\n    INSTALL: \"Install\",\n    SCAN: \"Scan\",\n};\nexport const RebootOption = {\n    NO_REBOOT: \"NoReboot\",\n    REBOOT_IF_NEEDED: \"RebootIfNeeded\",\n};\nexport const InstancePatchStateOperatorType = {\n    EQUAL: \"Equal\",\n    GREATER_THAN: \"GreaterThan\",\n    LESS_THAN: \"LessThan\",\n    NOT_EQUAL: \"NotEqual\",\n};\nexport const InventoryDeletionStatus = {\n    COMPLETE: \"Complete\",\n    IN_PROGRESS: \"InProgress\",\n};\nexport class InvalidDeletionIdException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDeletionIdException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDeletionIdException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDeletionIdException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const MaintenanceWindowExecutionStatus = {\n    Cancelled: \"CANCELLED\",\n    Cancelling: \"CANCELLING\",\n    Failed: \"FAILED\",\n    InProgress: \"IN_PROGRESS\",\n    Pending: \"PENDING\",\n    SkippedOverlapping: \"SKIPPED_OVERLAPPING\",\n    Success: \"SUCCESS\",\n    TimedOut: \"TIMED_OUT\",\n};\nexport const MaintenanceWindowTaskType = {\n    Automation: \"AUTOMATION\",\n    Lambda: \"LAMBDA\",\n    RunCommand: \"RUN_COMMAND\",\n    StepFunctions: \"STEP_FUNCTIONS\",\n};\nexport const MaintenanceWindowResourceType = {\n    Instance: \"INSTANCE\",\n    ResourceGroup: \"RESOURCE_GROUP\",\n};\nexport const MaintenanceWindowTaskCutoffBehavior = {\n    CancelTask: \"CANCEL_TASK\",\n    ContinueTask: \"CONTINUE_TASK\",\n};\nexport const OpsItemFilterKey = {\n    ACCOUNT_ID: \"AccountId\",\n    ACTUAL_END_TIME: \"ActualEndTime\",\n    ACTUAL_START_TIME: \"ActualStartTime\",\n    AUTOMATION_ID: \"AutomationId\",\n    CATEGORY: \"Category\",\n    CHANGE_REQUEST_APPROVER_ARN: \"ChangeRequestByApproverArn\",\n    CHANGE_REQUEST_APPROVER_NAME: \"ChangeRequestByApproverName\",\n    CHANGE_REQUEST_REQUESTER_ARN: \"ChangeRequestByRequesterArn\",\n    CHANGE_REQUEST_REQUESTER_NAME: \"ChangeRequestByRequesterName\",\n    CHANGE_REQUEST_TARGETS_RESOURCE_GROUP: \"ChangeRequestByTargetsResourceGroup\",\n    CHANGE_REQUEST_TEMPLATE: \"ChangeRequestByTemplate\",\n    CREATED_BY: \"CreatedBy\",\n    CREATED_TIME: \"CreatedTime\",\n    INSIGHT_TYPE: \"InsightByType\",\n    LAST_MODIFIED_TIME: \"LastModifiedTime\",\n    OPERATIONAL_DATA: \"OperationalData\",\n    OPERATIONAL_DATA_KEY: \"OperationalDataKey\",\n    OPERATIONAL_DATA_VALUE: \"OperationalDataValue\",\n    OPSITEM_ID: \"OpsItemId\",\n    OPSITEM_TYPE: \"OpsItemType\",\n    PLANNED_END_TIME: \"PlannedEndTime\",\n    PLANNED_START_TIME: \"PlannedStartTime\",\n    PRIORITY: \"Priority\",\n    RESOURCE_ID: \"ResourceId\",\n    SEVERITY: \"Severity\",\n    SOURCE: \"Source\",\n    STATUS: \"Status\",\n    TITLE: \"Title\",\n};\nexport const OpsItemFilterOperator = {\n    CONTAINS: \"Contains\",\n    EQUAL: \"Equal\",\n    GREATER_THAN: \"GreaterThan\",\n    LESS_THAN: \"LessThan\",\n};\nexport const CreateAssociationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: SENSITIVE_STRING }),\n});\nexport const AssociationDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: SENSITIVE_STRING }),\n});\nexport const CreateAssociationResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.AssociationDescription && {\n        AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription),\n    }),\n});\nexport const CreateAssociationBatchRequestEntryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: SENSITIVE_STRING }),\n});\nexport const CreateAssociationBatchRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Entries && {\n        Entries: obj.Entries.map((item) => CreateAssociationBatchRequestEntryFilterSensitiveLog(item)),\n    }),\n});\nexport const FailedCreateAssociationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Entry && { Entry: CreateAssociationBatchRequestEntryFilterSensitiveLog(obj.Entry) }),\n});\nexport const CreateAssociationBatchResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Successful && { Successful: obj.Successful.map((item) => AssociationDescriptionFilterSensitiveLog(item)) }),\n    ...(obj.Failed && { Failed: obj.Failed.map((item) => FailedCreateAssociationFilterSensitiveLog(item)) }),\n});\nexport const CreateMaintenanceWindowRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Description && { Description: SENSITIVE_STRING }),\n});\nexport const PatchSourceFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Configuration && { Configuration: SENSITIVE_STRING }),\n});\nexport const CreatePatchBaselineRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }),\n});\nexport const DescribeAssociationResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.AssociationDescription && {\n        AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription),\n    }),\n});\nexport const InstancePatchStateFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING }),\n});\nexport const DescribeInstancePatchStatesResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InstancePatchStates && {\n        InstancePatchStates: obj.InstancePatchStates.map((item) => InstancePatchStateFilterSensitiveLog(item)),\n    }),\n});\nexport const DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InstancePatchStates && {\n        InstancePatchStates: obj.InstancePatchStates.map((item) => InstancePatchStateFilterSensitiveLog(item)),\n    }),\n});\nexport const MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: SENSITIVE_STRING }),\n    ...(obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING }),\n});\nexport const DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WindowExecutionTaskInvocationIdentities && {\n        WindowExecutionTaskInvocationIdentities: obj.WindowExecutionTaskInvocationIdentities.map((item) => MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog(item)),\n    }),\n});\nexport const MaintenanceWindowIdentityFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Description && { Description: SENSITIVE_STRING }),\n});\nexport const DescribeMaintenanceWindowsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WindowIdentities && {\n        WindowIdentities: obj.WindowIdentities.map((item) => MaintenanceWindowIdentityFilterSensitiveLog(item)),\n    }),\n});\nexport const MaintenanceWindowTargetFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING }),\n    ...(obj.Description && { Description: SENSITIVE_STRING }),\n});\nexport const DescribeMaintenanceWindowTargetsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Targets && { Targets: obj.Targets.map((item) => MaintenanceWindowTargetFilterSensitiveLog(item)) }),\n});\nexport const MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Values && { Values: SENSITIVE_STRING }),\n});\nexport const MaintenanceWindowTaskFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TaskParameters && { TaskParameters: SENSITIVE_STRING }),\n    ...(obj.Description && { Description: SENSITIVE_STRING }),\n});\nexport const DescribeMaintenanceWindowTasksResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Tasks && { Tasks: obj.Tasks.map((item) => MaintenanceWindowTaskFilterSensitiveLog(item)) }),\n});\n", "import { SENSITIVE_STRING } from \"@aws-sdk/smithy-client\";\nimport { PatchSourceFilterSensitiveLog, } from \"./models_0\";\nimport { SSMServiceException as __BaseException } from \"./SSMServiceException\";\nexport const OpsItemStatus = {\n    APPROVED: \"Approved\",\n    CANCELLED: \"Cancelled\",\n    CANCELLING: \"Cancelling\",\n    CHANGE_CALENDAR_OVERRIDE_APPROVED: \"ChangeCalendarOverrideApproved\",\n    CHANGE_CALENDAR_OVERRIDE_REJECTED: \"ChangeCalendarOverrideRejected\",\n    CLOSED: \"Closed\",\n    COMPLETED_WITH_FAILURE: \"CompletedWithFailure\",\n    COMPLETED_WITH_SUCCESS: \"CompletedWithSuccess\",\n    FAILED: \"Failed\",\n    IN_PROGRESS: \"InProgress\",\n    OPEN: \"Open\",\n    PENDING: \"Pending\",\n    PENDING_APPROVAL: \"PendingApproval\",\n    PENDING_CHANGE_CALENDAR_OVERRIDE: \"PendingChangeCalendarOverride\",\n    REJECTED: \"Rejected\",\n    RESOLVED: \"Resolved\",\n    RUNBOOK_IN_PROGRESS: \"RunbookInProgress\",\n    SCHEDULED: \"Scheduled\",\n    TIMED_OUT: \"TimedOut\",\n};\nexport const ParametersFilterKey = {\n    KEY_ID: \"KeyId\",\n    NAME: \"Name\",\n    TYPE: \"Type\",\n};\nexport const ParameterTier = {\n    ADVANCED: \"Advanced\",\n    INTELLIGENT_TIERING: \"Intelligent-Tiering\",\n    STANDARD: \"Standard\",\n};\nexport const ParameterType = {\n    SECURE_STRING: \"SecureString\",\n    STRING: \"String\",\n    STRING_LIST: \"StringList\",\n};\nexport class InvalidFilterOption extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidFilterOption\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidFilterOption\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFilterOption.prototype);\n    }\n}\nexport const PatchSet = {\n    Application: \"APPLICATION\",\n    Os: \"OS\",\n};\nexport const PatchProperty = {\n    PatchClassification: \"CLASSIFICATION\",\n    PatchMsrcSeverity: \"MSRC_SEVERITY\",\n    PatchPriority: \"PRIORITY\",\n    PatchProductFamily: \"PRODUCT_FAMILY\",\n    PatchSeverity: \"SEVERITY\",\n    Product: \"PRODUCT\",\n};\nexport const SessionFilterKey = {\n    INVOKED_AFTER: \"InvokedAfter\",\n    INVOKED_BEFORE: \"InvokedBefore\",\n    OWNER: \"Owner\",\n    SESSION_ID: \"SessionId\",\n    STATUS: \"Status\",\n    TARGET_ID: \"Target\",\n};\nexport const SessionState = {\n    ACTIVE: \"Active\",\n    HISTORY: \"History\",\n};\nexport const SessionStatus = {\n    CONNECTED: \"Connected\",\n    CONNECTING: \"Connecting\",\n    DISCONNECTED: \"Disconnected\",\n    FAILED: \"Failed\",\n    TERMINATED: \"Terminated\",\n    TERMINATING: \"Terminating\",\n};\nexport class OpsItemRelatedItemAssociationNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"OpsItemRelatedItemAssociationNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OpsItemRelatedItemAssociationNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OpsItemRelatedItemAssociationNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const CalendarState = {\n    CLOSED: \"CLOSED\",\n    OPEN: \"OPEN\",\n};\nexport class InvalidDocumentType extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDocumentType\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDocumentType\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDocumentType.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class UnsupportedCalendarException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedCalendarException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedCalendarException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedCalendarException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const CommandInvocationStatus = {\n    CANCELLED: \"Cancelled\",\n    CANCELLING: \"Cancelling\",\n    DELAYED: \"Delayed\",\n    FAILED: \"Failed\",\n    IN_PROGRESS: \"InProgress\",\n    PENDING: \"Pending\",\n    SUCCESS: \"Success\",\n    TIMED_OUT: \"TimedOut\",\n};\nexport class InvalidPluginName extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidPluginName\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidPluginName\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidPluginName.prototype);\n    }\n}\nexport class InvocationDoesNotExist extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvocationDoesNotExist\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvocationDoesNotExist\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvocationDoesNotExist.prototype);\n    }\n}\nexport const ConnectionStatus = {\n    CONNECTED: \"Connected\",\n    NOT_CONNECTED: \"NotConnected\",\n};\nexport class UnsupportedFeatureRequiredException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedFeatureRequiredException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedFeatureRequiredException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedFeatureRequiredException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const AttachmentHashType = {\n    SHA256: \"Sha256\",\n};\nexport const InventoryQueryOperatorType = {\n    BEGIN_WITH: \"BeginWith\",\n    EQUAL: \"Equal\",\n    EXISTS: \"Exists\",\n    GREATER_THAN: \"GreaterThan\",\n    LESS_THAN: \"LessThan\",\n    NOT_EQUAL: \"NotEqual\",\n};\nexport class InvalidAggregatorException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAggregatorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAggregatorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAggregatorException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidInventoryGroupException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidInventoryGroupException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidInventoryGroupException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidInventoryGroupException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidResultAttributeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidResultAttributeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidResultAttributeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidResultAttributeException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const InventoryAttributeDataType = {\n    NUMBER: \"number\",\n    STRING: \"string\",\n};\nexport const NotificationEvent = {\n    ALL: \"All\",\n    CANCELLED: \"Cancelled\",\n    FAILED: \"Failed\",\n    IN_PROGRESS: \"InProgress\",\n    SUCCESS: \"Success\",\n    TIMED_OUT: \"TimedOut\",\n};\nexport const NotificationType = {\n    Command: \"Command\",\n    Invocation: \"Invocation\",\n};\nexport const OpsFilterOperatorType = {\n    BEGIN_WITH: \"BeginWith\",\n    EQUAL: \"Equal\",\n    EXISTS: \"Exists\",\n    GREATER_THAN: \"GreaterThan\",\n    LESS_THAN: \"LessThan\",\n    NOT_EQUAL: \"NotEqual\",\n};\nexport class InvalidKeyId extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidKeyId\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidKeyId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidKeyId.prototype);\n    }\n}\nexport class ParameterVersionNotFound extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ParameterVersionNotFound\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ParameterVersionNotFound\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterVersionNotFound.prototype);\n    }\n}\nexport class ServiceSettingNotFound extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ServiceSettingNotFound\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ServiceSettingNotFound\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ServiceSettingNotFound.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ParameterVersionLabelLimitExceeded extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ParameterVersionLabelLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ParameterVersionLabelLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterVersionLabelLimitExceeded.prototype);\n    }\n}\nexport const AssociationFilterKey = {\n    AssociationId: \"AssociationId\",\n    AssociationName: \"AssociationName\",\n    InstanceId: \"InstanceId\",\n    LastExecutedAfter: \"LastExecutedAfter\",\n    LastExecutedBefore: \"LastExecutedBefore\",\n    Name: \"Name\",\n    ResourceGroupName: \"ResourceGroupName\",\n    Status: \"AssociationStatusName\",\n};\nexport const CommandFilterKey = {\n    DOCUMENT_NAME: \"DocumentName\",\n    EXECUTION_STAGE: \"ExecutionStage\",\n    INVOKED_AFTER: \"InvokedAfter\",\n    INVOKED_BEFORE: \"InvokedBefore\",\n    STATUS: \"Status\",\n};\nexport const CommandPluginStatus = {\n    CANCELLED: \"Cancelled\",\n    FAILED: \"Failed\",\n    IN_PROGRESS: \"InProgress\",\n    PENDING: \"Pending\",\n    SUCCESS: \"Success\",\n    TIMED_OUT: \"TimedOut\",\n};\nexport const CommandStatus = {\n    CANCELLED: \"Cancelled\",\n    CANCELLING: \"Cancelling\",\n    FAILED: \"Failed\",\n    IN_PROGRESS: \"InProgress\",\n    PENDING: \"Pending\",\n    SUCCESS: \"Success\",\n    TIMED_OUT: \"TimedOut\",\n};\nexport const ComplianceQueryOperatorType = {\n    BeginWith: \"BEGIN_WITH\",\n    Equal: \"EQUAL\",\n    GreaterThan: \"GREATER_THAN\",\n    LessThan: \"LESS_THAN\",\n    NotEqual: \"NOT_EQUAL\",\n};\nexport const ComplianceSeverity = {\n    Critical: \"CRITICAL\",\n    High: \"HIGH\",\n    Informational: \"INFORMATIONAL\",\n    Low: \"LOW\",\n    Medium: \"MEDIUM\",\n    Unspecified: \"UNSPECIFIED\",\n};\nexport const ComplianceStatus = {\n    Compliant: \"COMPLIANT\",\n    NonCompliant: \"NON_COMPLIANT\",\n};\nexport const DocumentMetadataEnum = {\n    DocumentReviews: \"DocumentReviews\",\n};\nexport const DocumentReviewCommentType = {\n    Comment: \"Comment\",\n};\nexport const DocumentFilterKey = {\n    DocumentType: \"DocumentType\",\n    Name: \"Name\",\n    Owner: \"Owner\",\n    PlatformTypes: \"PlatformTypes\",\n};\nexport const OpsItemEventFilterKey = {\n    OPSITEM_ID: \"OpsItemId\",\n};\nexport const OpsItemEventFilterOperator = {\n    EQUAL: \"Equal\",\n};\nexport const OpsItemRelatedItemsFilterKey = {\n    ASSOCIATION_ID: \"AssociationId\",\n    RESOURCE_TYPE: \"ResourceType\",\n    RESOURCE_URI: \"ResourceUri\",\n};\nexport const OpsItemRelatedItemsFilterOperator = {\n    EQUAL: \"Equal\",\n};\nexport const LastResourceDataSyncStatus = {\n    FAILED: \"Failed\",\n    INPROGRESS: \"InProgress\",\n    SUCCESSFUL: \"Successful\",\n};\nexport class DocumentPermissionLimit extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"DocumentPermissionLimit\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DocumentPermissionLimit\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DocumentPermissionLimit.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ComplianceTypeCountLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ComplianceTypeCountLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ComplianceTypeCountLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ComplianceTypeCountLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidItemContentException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidItemContentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidItemContentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidItemContentException.prototype);\n        this.TypeName = opts.TypeName;\n        this.Message = opts.Message;\n    }\n}\nexport class ItemSizeLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ItemSizeLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ItemSizeLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ItemSizeLimitExceededException.prototype);\n        this.TypeName = opts.TypeName;\n        this.Message = opts.Message;\n    }\n}\nexport const ComplianceUploadType = {\n    Complete: \"COMPLETE\",\n    Partial: \"PARTIAL\",\n};\nexport class TotalSizeLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TotalSizeLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TotalSizeLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TotalSizeLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class CustomSchemaCountLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"CustomSchemaCountLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CustomSchemaCountLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CustomSchemaCountLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidInventoryItemContextException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidInventoryItemContextException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidInventoryItemContextException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidInventoryItemContextException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ItemContentMismatchException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ItemContentMismatchException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ItemContentMismatchException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ItemContentMismatchException.prototype);\n        this.TypeName = opts.TypeName;\n        this.Message = opts.Message;\n    }\n}\nexport class SubTypeCountLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"SubTypeCountLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"SubTypeCountLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, SubTypeCountLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class UnsupportedInventoryItemContextException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedInventoryItemContextException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedInventoryItemContextException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedInventoryItemContextException.prototype);\n        this.TypeName = opts.TypeName;\n        this.Message = opts.Message;\n    }\n}\nexport class UnsupportedInventorySchemaVersionException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedInventorySchemaVersionException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedInventorySchemaVersionException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedInventorySchemaVersionException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class HierarchyLevelLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"HierarchyLevelLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"HierarchyLevelLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, HierarchyLevelLimitExceededException.prototype);\n    }\n}\nexport class HierarchyTypeMismatchException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"HierarchyTypeMismatchException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"HierarchyTypeMismatchException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, HierarchyTypeMismatchException.prototype);\n    }\n}\nexport class IncompatiblePolicyException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IncompatiblePolicyException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IncompatiblePolicyException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IncompatiblePolicyException.prototype);\n    }\n}\nexport class InvalidAllowedPatternException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAllowedPatternException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAllowedPatternException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAllowedPatternException.prototype);\n    }\n}\nexport class InvalidPolicyAttributeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidPolicyAttributeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidPolicyAttributeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidPolicyAttributeException.prototype);\n    }\n}\nexport class InvalidPolicyTypeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidPolicyTypeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidPolicyTypeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidPolicyTypeException.prototype);\n    }\n}\nexport class ParameterAlreadyExists extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ParameterAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ParameterAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterAlreadyExists.prototype);\n    }\n}\nexport class ParameterLimitExceeded extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ParameterLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ParameterLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterLimitExceeded.prototype);\n    }\n}\nexport class ParameterMaxVersionLimitExceeded extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ParameterMaxVersionLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ParameterMaxVersionLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterMaxVersionLimitExceeded.prototype);\n    }\n}\nexport class ParameterPatternMismatchException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ParameterPatternMismatchException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ParameterPatternMismatchException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ParameterPatternMismatchException.prototype);\n    }\n}\nexport class PoliciesLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"PoliciesLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PoliciesLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PoliciesLimitExceededException.prototype);\n    }\n}\nexport class UnsupportedParameterType extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedParameterType\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedParameterType\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedParameterType.prototype);\n    }\n}\nexport class ResourcePolicyLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourcePolicyLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourcePolicyLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourcePolicyLimitExceededException.prototype);\n        this.Limit = opts.Limit;\n        this.LimitType = opts.LimitType;\n        this.Message = opts.Message;\n    }\n}\nexport class FeatureNotAvailableException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"FeatureNotAvailableException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FeatureNotAvailableException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FeatureNotAvailableException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class AutomationStepNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AutomationStepNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AutomationStepNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationStepNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidAutomationSignalException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAutomationSignalException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAutomationSignalException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAutomationSignalException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const SignalType = {\n    APPROVE: \"Approve\",\n    REJECT: \"Reject\",\n    RESUME: \"Resume\",\n    START_STEP: \"StartStep\",\n    STOP_STEP: \"StopStep\",\n};\nexport class InvalidNotificationConfig extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidNotificationConfig\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidNotificationConfig\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidNotificationConfig.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidOutputFolder extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOutputFolder\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOutputFolder\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOutputFolder.prototype);\n    }\n}\nexport class InvalidRole extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRole\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRole\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRole.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidAssociation extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAssociation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAssociation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAssociation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class AutomationDefinitionNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AutomationDefinitionNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AutomationDefinitionNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationDefinitionNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class AutomationDefinitionVersionNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AutomationDefinitionVersionNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AutomationDefinitionVersionNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationDefinitionVersionNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class AutomationExecutionLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AutomationExecutionLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AutomationExecutionLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationExecutionLimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidAutomationExecutionParametersException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAutomationExecutionParametersException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAutomationExecutionParametersException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAutomationExecutionParametersException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class AutomationDefinitionNotApprovedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AutomationDefinitionNotApprovedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AutomationDefinitionNotApprovedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AutomationDefinitionNotApprovedException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class TargetNotConnected extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TargetNotConnected\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TargetNotConnected\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TargetNotConnected.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidAutomationStatusUpdateException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAutomationStatusUpdateException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAutomationStatusUpdateException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAutomationStatusUpdateException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const StopType = {\n    CANCEL: \"Cancel\",\n    COMPLETE: \"Complete\",\n};\nexport class AssociationVersionLimitExceeded extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AssociationVersionLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AssociationVersionLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AssociationVersionLimitExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport const BaselineOverrideFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }),\n});\nexport const GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetMaintenanceWindowResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Description && { Description: SENSITIVE_STRING }),\n});\nexport const GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TaskParameters && { TaskParameters: SENSITIVE_STRING }),\n});\nexport const GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: SENSITIVE_STRING }),\n    ...(obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING }),\n});\nexport const MaintenanceWindowLambdaParametersFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Payload && { Payload: SENSITIVE_STRING }),\n});\nexport const MaintenanceWindowRunCommandParametersFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: SENSITIVE_STRING }),\n});\nexport const MaintenanceWindowStepFunctionsParametersFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Input && { Input: SENSITIVE_STRING }),\n});\nexport const MaintenanceWindowTaskInvocationParametersFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.RunCommand && { RunCommand: MaintenanceWindowRunCommandParametersFilterSensitiveLog(obj.RunCommand) }),\n    ...(obj.StepFunctions && {\n        StepFunctions: MaintenanceWindowStepFunctionsParametersFilterSensitiveLog(obj.StepFunctions),\n    }),\n    ...(obj.Lambda && { Lambda: MaintenanceWindowLambdaParametersFilterSensitiveLog(obj.Lambda) }),\n});\nexport const GetMaintenanceWindowTaskResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TaskParameters && { TaskParameters: SENSITIVE_STRING }),\n    ...(obj.TaskInvocationParameters && {\n        TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters),\n    }),\n    ...(obj.Description && { Description: SENSITIVE_STRING }),\n});\nexport const ParameterFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Value && { Value: SENSITIVE_STRING }),\n});\nexport const GetParameterResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameter && { Parameter: ParameterFilterSensitiveLog(obj.Parameter) }),\n});\nexport const ParameterHistoryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Value && { Value: SENSITIVE_STRING }),\n});\nexport const GetParameterHistoryResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: obj.Parameters.map((item) => ParameterHistoryFilterSensitiveLog(item)) }),\n});\nexport const GetParametersResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: obj.Parameters.map((item) => ParameterFilterSensitiveLog(item)) }),\n});\nexport const GetParametersByPathResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: obj.Parameters.map((item) => ParameterFilterSensitiveLog(item)) }),\n});\nexport const GetPatchBaselineResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }),\n});\nexport const AssociationVersionInfoFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: SENSITIVE_STRING }),\n});\nexport const ListAssociationVersionsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.AssociationVersions && {\n        AssociationVersions: obj.AssociationVersions.map((item) => AssociationVersionInfoFilterSensitiveLog(item)),\n    }),\n});\nexport const CommandFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: SENSITIVE_STRING }),\n});\nexport const ListCommandsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Commands && { Commands: obj.Commands.map((item) => CommandFilterSensitiveLog(item)) }),\n});\nexport const PutParameterRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Value && { Value: SENSITIVE_STRING }),\n});\nexport const RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.OwnerInformation && { OwnerInformation: SENSITIVE_STRING }),\n    ...(obj.Description && { Description: SENSITIVE_STRING }),\n});\nexport const RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TaskParameters && { TaskParameters: SENSITIVE_STRING }),\n    ...(obj.TaskInvocationParameters && {\n        TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters),\n    }),\n    ...(obj.Description && { Description: SENSITIVE_STRING }),\n});\nexport const SendCommandRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: SENSITIVE_STRING }),\n});\nexport const SendCommandResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Command && { Command: CommandFilterSensitiveLog(obj.Command) }),\n});\n", "import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { _json, decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, take, withBaseException, } from \"@aws-sdk/smithy-client\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\nimport { AlreadyExistsException, AssociatedInstances, AssociationAlreadyExists, AssociationDoesNotExist, AssociationExecutionDoesNotExist, AssociationLimitExceeded, AutomationExecutionNotFoundException, DocumentAlreadyExists, DocumentLimitExceeded, DoesNotExistException, DuplicateInstanceId, IdempotentParameterMismatch, InternalServerError, InvalidActivation, InvalidActivationId, InvalidAssociationVersion, InvalidCommandId, InvalidDeleteInventoryParametersException, InvalidDeletionIdException, InvalidDocument, InvalidDocumentContent, InvalidDocumentOperation, InvalidDocumentSchemaVersion, InvalidDocumentVersion, InvalidFilter, InvalidFilterKey, InvalidFilterValue, InvalidInstanceId, InvalidInstanceInformationFilterValue, InvalidInventoryRequestException, InvalidNextToken, InvalidOptionException, InvalidOutputLocation, InvalidParameters, InvalidPermissionType, InvalidResourceId, InvalidResourceType, InvalidSchedule, InvalidTag, InvalidTarget, InvalidTargetMaps, InvalidTypeNameException, MaxDocumentSizeExceeded, OpsItemAccessDeniedException, OpsItemAlreadyExistsException, OpsItemInvalidParameterException, OpsItemLimitExceededException, OpsItemNotFoundException, OpsItemRelatedItemAlreadyExistsException, OpsMetadataAlreadyExistsException, OpsMetadataInvalidArgumentException, OpsMetadataLimitExceededException, OpsMetadataNotFoundException, OpsMetadataTooManyUpdatesException, ParameterNotFound, ResourceDataSyncAlreadyExistsException, ResourceDataSyncCountExceededException, ResourceDataSyncInvalidConfigurationException, ResourceDataSyncNotFoundException, ResourceInUseException, ResourceLimitExceededException, ResourcePolicyConflictException, ResourcePolicyInvalidParameterException, TargetInUseException, TooManyTagsError, TooManyUpdates, UnsupportedOperatingSystem, UnsupportedPlatformType, } from \"../models/models_0\";\nimport { AssociationVersionLimitExceeded, AutomationDefinitionNotApprovedException, AutomationDefinitionNotFoundException, AutomationDefinitionVersionNotFoundException, AutomationExecutionLimitExceededException, AutomationStepNotFoundException, ComplianceTypeCountLimitExceededException, CustomSchemaCountLimitExceededException, DocumentPermissionLimit, FeatureNotAvailableException, HierarchyLevelLimitExceededException, HierarchyTypeMismatchException, IncompatiblePolicyException, InvalidAggregatorException, InvalidAllowedPatternException, InvalidAssociation, InvalidAutomationExecutionParametersException, InvalidAutomationSignalException, InvalidAutomationStatusUpdateException, InvalidDocumentType, InvalidFilterOption, InvalidInventoryGroupException, InvalidInventoryItemContextException, InvalidItemContentException, InvalidKeyId, InvalidNotificationConfig, InvalidOutputFolder, InvalidPluginName, InvalidPolicyAttributeException, InvalidPolicyTypeException, InvalidResultAttributeException, InvalidRole, InvocationDoesNotExist, ItemContentMismatchException, ItemSizeLimitExceededException, OpsItemRelatedItemAssociationNotFoundException, ParameterAlreadyExists, ParameterLimitExceeded, ParameterMaxVersionLimitExceeded, ParameterPatternMismatchException, ParameterVersionLabelLimitExceeded, ParameterVersionNotFound, PoliciesLimitExceededException, ResourcePolicyLimitExceededException, ServiceSettingNotFound, SubTypeCountLimitExceededException, TargetNotConnected, TotalSizeLimitExceededException, UnsupportedCalendarException, UnsupportedFeatureRequiredException, UnsupportedInventoryItemContextException, UnsupportedInventorySchemaVersionException, UnsupportedParameterType, } from \"../models/models_1\";\nimport { DocumentVersionLimitExceeded, DuplicateDocumentContent, DuplicateDocumentVersionName, InvalidUpdate, OpsMetadataKeyLimitExceededException, ResourceDataSyncConflictException, StatusUnchanged, } from \"../models/models_2\";\nimport { SSMServiceException as __BaseException } from \"../models/SSMServiceException\";\nexport const se_AddTagsToResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"AddTagsToResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssociateOpsItemRelatedItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"AssociateOpsItemRelatedItem\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CancelCommandCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CancelCommand\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CancelMaintenanceWindowExecutionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CancelMaintenanceWindowExecution\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateActivationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateActivation\");\n    let body;\n    body = JSON.stringify(se_CreateActivationRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateAssociationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateAssociation\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateAssociationBatchCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateAssociationBatch\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateDocumentCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateDocument\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateMaintenanceWindowCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(se_CreateMaintenanceWindowRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateOpsItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateOpsItem\");\n    let body;\n    body = JSON.stringify(se_CreateOpsItemRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateOpsMetadataCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateOpsMetadata\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreatePatchBaselineCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreatePatchBaseline\");\n    let body;\n    body = JSON.stringify(se_CreatePatchBaselineRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateResourceDataSyncCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateResourceDataSync\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteActivationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteActivation\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteAssociationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteAssociation\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteDocumentCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteDocument\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteInventoryCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteInventory\");\n    let body;\n    body = JSON.stringify(se_DeleteInventoryRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteMaintenanceWindowCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteOpsMetadataCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteOpsMetadata\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteParameterCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteParameter\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteParametersCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteParameters\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeletePatchBaselineCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeletePatchBaseline\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteResourceDataSyncCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteResourceDataSync\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteResourcePolicyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteResourcePolicy\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeregisterManagedInstanceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeregisterManagedInstance\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeregisterPatchBaselineForPatchGroupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeregisterPatchBaselineForPatchGroup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeregisterTargetFromMaintenanceWindowCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeregisterTargetFromMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeregisterTaskFromMaintenanceWindowCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeregisterTaskFromMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeActivationsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeActivations\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeAssociationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeAssociation\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeAssociationExecutionsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeAssociationExecutions\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeAssociationExecutionTargetsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeAssociationExecutionTargets\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeAutomationExecutionsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeAutomationExecutions\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeAutomationStepExecutionsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeAutomationStepExecutions\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeAvailablePatchesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeAvailablePatches\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeDocumentCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeDocument\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeDocumentPermissionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeDocumentPermission\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeEffectiveInstanceAssociationsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeEffectiveInstanceAssociations\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeEffectivePatchesForPatchBaselineCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeEffectivePatchesForPatchBaseline\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeInstanceAssociationsStatusCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeInstanceAssociationsStatus\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeInstanceInformationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeInstanceInformation\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeInstancePatchesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeInstancePatches\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeInstancePatchStatesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeInstancePatchStates\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeInstancePatchStatesForPatchGroupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeInstancePatchStatesForPatchGroup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeInventoryDeletionsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeInventoryDeletions\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeMaintenanceWindowExecutionsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowExecutions\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeMaintenanceWindowExecutionTaskInvocationsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowExecutionTaskInvocations\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeMaintenanceWindowExecutionTasksCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowExecutionTasks\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeMaintenanceWindowsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeMaintenanceWindows\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeMaintenanceWindowScheduleCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowSchedule\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeMaintenanceWindowsForTargetCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowsForTarget\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeMaintenanceWindowTargetsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowTargets\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeMaintenanceWindowTasksCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeMaintenanceWindowTasks\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeOpsItemsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeOpsItems\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeParametersCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeParameters\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribePatchBaselinesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribePatchBaselines\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribePatchGroupsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribePatchGroups\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribePatchGroupStateCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribePatchGroupState\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribePatchPropertiesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribePatchProperties\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeSessionsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeSessions\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DisassociateOpsItemRelatedItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DisassociateOpsItemRelatedItem\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetAutomationExecutionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetAutomationExecution\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetCalendarStateCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetCalendarState\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetCommandInvocationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetCommandInvocation\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetConnectionStatusCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetConnectionStatus\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetDefaultPatchBaselineCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetDefaultPatchBaseline\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetDeployablePatchSnapshotForInstanceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetDeployablePatchSnapshotForInstance\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetDocumentCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetDocument\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetInventoryCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetInventory\");\n    let body;\n    body = JSON.stringify(se_GetInventoryRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetInventorySchemaCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetInventorySchema\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetMaintenanceWindowCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetMaintenanceWindowExecutionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetMaintenanceWindowExecution\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetMaintenanceWindowExecutionTaskCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetMaintenanceWindowExecutionTask\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetMaintenanceWindowExecutionTaskInvocationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetMaintenanceWindowExecutionTaskInvocation\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetMaintenanceWindowTaskCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetMaintenanceWindowTask\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetOpsItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetOpsItem\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetOpsMetadataCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetOpsMetadata\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetOpsSummaryCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetOpsSummary\");\n    let body;\n    body = JSON.stringify(se_GetOpsSummaryRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetParameterCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetParameter\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetParameterHistoryCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetParameterHistory\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetParametersCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetParameters\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetParametersByPathCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetParametersByPath\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetPatchBaselineCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetPatchBaseline\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetPatchBaselineForPatchGroupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetPatchBaselineForPatchGroup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetResourcePoliciesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetResourcePolicies\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetServiceSettingCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetServiceSetting\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_LabelParameterVersionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"LabelParameterVersion\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListAssociationsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListAssociations\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListAssociationVersionsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListAssociationVersions\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListCommandInvocationsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListCommandInvocations\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListCommandsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListCommands\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListComplianceItemsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListComplianceItems\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListComplianceSummariesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListComplianceSummaries\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListDocumentMetadataHistoryCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListDocumentMetadataHistory\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListDocumentsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListDocuments\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListDocumentVersionsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListDocumentVersions\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListInventoryEntriesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListInventoryEntries\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListOpsItemEventsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListOpsItemEvents\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListOpsItemRelatedItemsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListOpsItemRelatedItems\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListOpsMetadataCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListOpsMetadata\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListResourceComplianceSummariesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListResourceComplianceSummaries\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListResourceDataSyncCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListResourceDataSync\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListTagsForResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListTagsForResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ModifyDocumentPermissionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ModifyDocumentPermission\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_PutComplianceItemsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"PutComplianceItems\");\n    let body;\n    body = JSON.stringify(se_PutComplianceItemsRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_PutInventoryCommand = async (input, context) => {\n    const headers = sharedHeaders(\"PutInventory\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_PutParameterCommand = async (input, context) => {\n    const headers = sharedHeaders(\"PutParameter\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_PutResourcePolicyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"PutResourcePolicy\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_RegisterDefaultPatchBaselineCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RegisterDefaultPatchBaseline\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_RegisterPatchBaselineForPatchGroupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RegisterPatchBaselineForPatchGroup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_RegisterTargetWithMaintenanceWindowCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RegisterTargetWithMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(se_RegisterTargetWithMaintenanceWindowRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_RegisterTaskWithMaintenanceWindowCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RegisterTaskWithMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(se_RegisterTaskWithMaintenanceWindowRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_RemoveTagsFromResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RemoveTagsFromResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ResetServiceSettingCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ResetServiceSetting\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ResumeSessionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ResumeSession\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SendAutomationSignalCommand = async (input, context) => {\n    const headers = sharedHeaders(\"SendAutomationSignal\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SendCommandCommand = async (input, context) => {\n    const headers = sharedHeaders(\"SendCommand\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_StartAssociationsOnceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"StartAssociationsOnce\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_StartAutomationExecutionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"StartAutomationExecution\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_StartChangeRequestExecutionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"StartChangeRequestExecution\");\n    let body;\n    body = JSON.stringify(se_StartChangeRequestExecutionRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_StartSessionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"StartSession\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_StopAutomationExecutionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"StopAutomationExecution\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TerminateSessionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TerminateSession\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UnlabelParameterVersionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UnlabelParameterVersion\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateAssociationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateAssociation\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateAssociationStatusCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateAssociationStatus\");\n    let body;\n    body = JSON.stringify(se_UpdateAssociationStatusRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateDocumentCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateDocument\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateDocumentDefaultVersionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateDocumentDefaultVersion\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateDocumentMetadataCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateDocumentMetadata\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateMaintenanceWindowCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateMaintenanceWindow\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateMaintenanceWindowTargetCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateMaintenanceWindowTarget\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateMaintenanceWindowTaskCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateMaintenanceWindowTask\");\n    let body;\n    body = JSON.stringify(se_UpdateMaintenanceWindowTaskRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateManagedInstanceRoleCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateManagedInstanceRole\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateOpsItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateOpsItem\");\n    let body;\n    body = JSON.stringify(se_UpdateOpsItemRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateOpsMetadataCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateOpsMetadata\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdatePatchBaselineCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdatePatchBaseline\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateResourceDataSyncCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateResourceDataSync\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateServiceSettingCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateServiceSetting\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AddTagsToResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AddTagsToResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_AddTagsToResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"InvalidResourceType\":\n        case \"com.amazonaws.ssm#InvalidResourceType\":\n            throw await de_InvalidResourceTypeRes(parsedOutput, context);\n        case \"TooManyTagsError\":\n        case \"com.amazonaws.ssm#TooManyTagsError\":\n            throw await de_TooManyTagsErrorRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_AssociateOpsItemRelatedItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AssociateOpsItemRelatedItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_AssociateOpsItemRelatedItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        case \"OpsItemLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsItemLimitExceededException\":\n            throw await de_OpsItemLimitExceededExceptionRes(parsedOutput, context);\n        case \"OpsItemNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n            throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n        case \"OpsItemRelatedItemAlreadyExistsException\":\n        case \"com.amazonaws.ssm#OpsItemRelatedItemAlreadyExistsException\":\n            throw await de_OpsItemRelatedItemAlreadyExistsExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CancelCommandCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CancelCommandCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CancelCommandCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DuplicateInstanceId\":\n        case \"com.amazonaws.ssm#DuplicateInstanceId\":\n            throw await de_DuplicateInstanceIdRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidCommandId\":\n        case \"com.amazonaws.ssm#InvalidCommandId\":\n            throw await de_InvalidCommandIdRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CancelMaintenanceWindowExecutionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CancelMaintenanceWindowExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CancelMaintenanceWindowExecutionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateActivationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateActivationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateActivationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidParameters\":\n        case \"com.amazonaws.ssm#InvalidParameters\":\n            throw await de_InvalidParametersRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateAssociationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateAssociationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateAssociationResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateAssociationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociationAlreadyExists\":\n        case \"com.amazonaws.ssm#AssociationAlreadyExists\":\n            throw await de_AssociationAlreadyExistsRes(parsedOutput, context);\n        case \"AssociationLimitExceeded\":\n        case \"com.amazonaws.ssm#AssociationLimitExceeded\":\n            throw await de_AssociationLimitExceededRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidOutputLocation\":\n        case \"com.amazonaws.ssm#InvalidOutputLocation\":\n            throw await de_InvalidOutputLocationRes(parsedOutput, context);\n        case \"InvalidParameters\":\n        case \"com.amazonaws.ssm#InvalidParameters\":\n            throw await de_InvalidParametersRes(parsedOutput, context);\n        case \"InvalidSchedule\":\n        case \"com.amazonaws.ssm#InvalidSchedule\":\n            throw await de_InvalidScheduleRes(parsedOutput, context);\n        case \"InvalidTag\":\n        case \"com.amazonaws.ssm#InvalidTag\":\n            throw await de_InvalidTagRes(parsedOutput, context);\n        case \"InvalidTarget\":\n        case \"com.amazonaws.ssm#InvalidTarget\":\n            throw await de_InvalidTargetRes(parsedOutput, context);\n        case \"InvalidTargetMaps\":\n        case \"com.amazonaws.ssm#InvalidTargetMaps\":\n            throw await de_InvalidTargetMapsRes(parsedOutput, context);\n        case \"UnsupportedPlatformType\":\n        case \"com.amazonaws.ssm#UnsupportedPlatformType\":\n            throw await de_UnsupportedPlatformTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateAssociationBatchCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateAssociationBatchCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateAssociationBatchResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateAssociationBatchCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociationLimitExceeded\":\n        case \"com.amazonaws.ssm#AssociationLimitExceeded\":\n            throw await de_AssociationLimitExceededRes(parsedOutput, context);\n        case \"DuplicateInstanceId\":\n        case \"com.amazonaws.ssm#DuplicateInstanceId\":\n            throw await de_DuplicateInstanceIdRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidOutputLocation\":\n        case \"com.amazonaws.ssm#InvalidOutputLocation\":\n            throw await de_InvalidOutputLocationRes(parsedOutput, context);\n        case \"InvalidParameters\":\n        case \"com.amazonaws.ssm#InvalidParameters\":\n            throw await de_InvalidParametersRes(parsedOutput, context);\n        case \"InvalidSchedule\":\n        case \"com.amazonaws.ssm#InvalidSchedule\":\n            throw await de_InvalidScheduleRes(parsedOutput, context);\n        case \"InvalidTarget\":\n        case \"com.amazonaws.ssm#InvalidTarget\":\n            throw await de_InvalidTargetRes(parsedOutput, context);\n        case \"InvalidTargetMaps\":\n        case \"com.amazonaws.ssm#InvalidTargetMaps\":\n            throw await de_InvalidTargetMapsRes(parsedOutput, context);\n        case \"UnsupportedPlatformType\":\n        case \"com.amazonaws.ssm#UnsupportedPlatformType\":\n            throw await de_UnsupportedPlatformTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateDocumentCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateDocumentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateDocumentResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateDocumentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DocumentAlreadyExists\":\n        case \"com.amazonaws.ssm#DocumentAlreadyExists\":\n            throw await de_DocumentAlreadyExistsRes(parsedOutput, context);\n        case \"DocumentLimitExceeded\":\n        case \"com.amazonaws.ssm#DocumentLimitExceeded\":\n            throw await de_DocumentLimitExceededRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocumentContent\":\n        case \"com.amazonaws.ssm#InvalidDocumentContent\":\n            throw await de_InvalidDocumentContentRes(parsedOutput, context);\n        case \"InvalidDocumentSchemaVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentSchemaVersion\":\n            throw await de_InvalidDocumentSchemaVersionRes(parsedOutput, context);\n        case \"MaxDocumentSizeExceeded\":\n        case \"com.amazonaws.ssm#MaxDocumentSizeExceeded\":\n            throw await de_MaxDocumentSizeExceededRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateMaintenanceWindowCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateMaintenanceWindowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n            throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateOpsItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateOpsItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateOpsItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemAccessDeniedException\":\n        case \"com.amazonaws.ssm#OpsItemAccessDeniedException\":\n            throw await de_OpsItemAccessDeniedExceptionRes(parsedOutput, context);\n        case \"OpsItemAlreadyExistsException\":\n        case \"com.amazonaws.ssm#OpsItemAlreadyExistsException\":\n            throw await de_OpsItemAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        case \"OpsItemLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsItemLimitExceededException\":\n            throw await de_OpsItemLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateOpsMetadataCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateOpsMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateOpsMetadataCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsMetadataAlreadyExistsException\":\n        case \"com.amazonaws.ssm#OpsMetadataAlreadyExistsException\":\n            throw await de_OpsMetadataAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"OpsMetadataInvalidArgumentException\":\n        case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n            throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n        case \"OpsMetadataLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsMetadataLimitExceededException\":\n            throw await de_OpsMetadataLimitExceededExceptionRes(parsedOutput, context);\n        case \"OpsMetadataTooManyUpdatesException\":\n        case \"com.amazonaws.ssm#OpsMetadataTooManyUpdatesException\":\n            throw await de_OpsMetadataTooManyUpdatesExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreatePatchBaselineCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreatePatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreatePatchBaselineCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n            throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateResourceDataSyncCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateResourceDataSyncCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateResourceDataSyncCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceDataSyncAlreadyExistsException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncAlreadyExistsException\":\n            throw await de_ResourceDataSyncAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncCountExceededException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncCountExceededException\":\n            throw await de_ResourceDataSyncCountExceededExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncInvalidConfigurationException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncInvalidConfigurationException\":\n            throw await de_ResourceDataSyncInvalidConfigurationExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteActivationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteActivationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteActivationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidActivation\":\n        case \"com.amazonaws.ssm#InvalidActivation\":\n            throw await de_InvalidActivationRes(parsedOutput, context);\n        case \"InvalidActivationId\":\n        case \"com.amazonaws.ssm#InvalidActivationId\":\n            throw await de_InvalidActivationIdRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteAssociationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteAssociationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteAssociationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteDocumentCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteDocumentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteDocumentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociatedInstances\":\n        case \"com.amazonaws.ssm#AssociatedInstances\":\n            throw await de_AssociatedInstancesRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentOperation\":\n        case \"com.amazonaws.ssm#InvalidDocumentOperation\":\n            throw await de_InvalidDocumentOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteInventoryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteInventoryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteInventoryCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDeleteInventoryParametersException\":\n        case \"com.amazonaws.ssm#InvalidDeleteInventoryParametersException\":\n            throw await de_InvalidDeleteInventoryParametersExceptionRes(parsedOutput, context);\n        case \"InvalidInventoryRequestException\":\n        case \"com.amazonaws.ssm#InvalidInventoryRequestException\":\n            throw await de_InvalidInventoryRequestExceptionRes(parsedOutput, context);\n        case \"InvalidOptionException\":\n        case \"com.amazonaws.ssm#InvalidOptionException\":\n            throw await de_InvalidOptionExceptionRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteMaintenanceWindowCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteMaintenanceWindowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteOpsMetadataCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteOpsMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteOpsMetadataCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsMetadataInvalidArgumentException\":\n        case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n            throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n        case \"OpsMetadataNotFoundException\":\n        case \"com.amazonaws.ssm#OpsMetadataNotFoundException\":\n            throw await de_OpsMetadataNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteParameterCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteParameterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteParameterCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ParameterNotFound\":\n        case \"com.amazonaws.ssm#ParameterNotFound\":\n            throw await de_ParameterNotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteParametersCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteParametersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteParametersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeletePatchBaselineCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeletePatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeletePatchBaselineCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.ssm#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteResourceDataSyncCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteResourceDataSyncCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteResourceDataSyncCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceDataSyncInvalidConfigurationException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncInvalidConfigurationException\":\n            throw await de_ResourceDataSyncInvalidConfigurationExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncNotFoundException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncNotFoundException\":\n            throw await de_ResourceDataSyncNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteResourcePolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteResourcePolicyCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteResourcePolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourcePolicyConflictException\":\n        case \"com.amazonaws.ssm#ResourcePolicyConflictException\":\n            throw await de_ResourcePolicyConflictExceptionRes(parsedOutput, context);\n        case \"ResourcePolicyInvalidParameterException\":\n        case \"com.amazonaws.ssm#ResourcePolicyInvalidParameterException\":\n            throw await de_ResourcePolicyInvalidParameterExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeregisterManagedInstanceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeregisterManagedInstanceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeregisterManagedInstanceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeregisterPatchBaselineForPatchGroupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeregisterPatchBaselineForPatchGroupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeregisterPatchBaselineForPatchGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeregisterTargetFromMaintenanceWindowCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeregisterTargetFromMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeregisterTargetFromMaintenanceWindowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"TargetInUseException\":\n        case \"com.amazonaws.ssm#TargetInUseException\":\n            throw await de_TargetInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeregisterTaskFromMaintenanceWindowCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeregisterTaskFromMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeregisterTaskFromMaintenanceWindowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeActivationsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeActivationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeActivationsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeActivationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeAssociationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeAssociationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAssociationResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAssociationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAssociationVersion\":\n        case \"com.amazonaws.ssm#InvalidAssociationVersion\":\n            throw await de_InvalidAssociationVersionRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeAssociationExecutionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeAssociationExecutionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAssociationExecutionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAssociationExecutionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeAssociationExecutionTargetsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeAssociationExecutionTargetsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAssociationExecutionTargetsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAssociationExecutionTargetsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"AssociationExecutionDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationExecutionDoesNotExist\":\n            throw await de_AssociationExecutionDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeAutomationExecutionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeAutomationExecutionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAutomationExecutionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAutomationExecutionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidFilterValue\":\n        case \"com.amazonaws.ssm#InvalidFilterValue\":\n            throw await de_InvalidFilterValueRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeAutomationStepExecutionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeAutomationStepExecutionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAutomationStepExecutionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAutomationStepExecutionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AutomationExecutionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationExecutionNotFoundException\":\n            throw await de_AutomationExecutionNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidFilterValue\":\n        case \"com.amazonaws.ssm#InvalidFilterValue\":\n            throw await de_InvalidFilterValueRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeAvailablePatchesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeAvailablePatchesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAvailablePatchesResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAvailablePatchesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeDocumentCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeDocumentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeDocumentResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeDocumentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeDocumentPermissionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeDocumentPermissionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeDocumentPermissionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentOperation\":\n        case \"com.amazonaws.ssm#InvalidDocumentOperation\":\n            throw await de_InvalidDocumentOperationRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidPermissionType\":\n        case \"com.amazonaws.ssm#InvalidPermissionType\":\n            throw await de_InvalidPermissionTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeEffectiveInstanceAssociationsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeEffectiveInstanceAssociationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeEffectiveInstanceAssociationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeEffectivePatchesForPatchBaselineCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeEffectivePatchesForPatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeEffectivePatchesForPatchBaselineResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeEffectivePatchesForPatchBaselineCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"UnsupportedOperatingSystem\":\n        case \"com.amazonaws.ssm#UnsupportedOperatingSystem\":\n            throw await de_UnsupportedOperatingSystemRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeInstanceAssociationsStatusCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeInstanceAssociationsStatusCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInstanceAssociationsStatusResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeInstanceAssociationsStatusCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeInstanceInformationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeInstanceInformationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInstanceInformationResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeInstanceInformationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidInstanceInformationFilterValue\":\n        case \"com.amazonaws.ssm#InvalidInstanceInformationFilterValue\":\n            throw await de_InvalidInstanceInformationFilterValueRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeInstancePatchesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeInstancePatchesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInstancePatchesResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeInstancePatchesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeInstancePatchStatesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeInstancePatchStatesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInstancePatchStatesResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeInstancePatchStatesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeInstancePatchStatesForPatchGroupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeInstancePatchStatesForPatchGroupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInstancePatchStatesForPatchGroupResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeInstancePatchStatesForPatchGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeInventoryDeletionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeInventoryDeletionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInventoryDeletionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeInventoryDeletionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDeletionIdException\":\n        case \"com.amazonaws.ssm#InvalidDeletionIdException\":\n            throw await de_InvalidDeletionIdExceptionRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeMaintenanceWindowExecutionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowExecutionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeMaintenanceWindowExecutionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowExecutionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeMaintenanceWindowExecutionTaskInvocationsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowExecutionTaskInvocationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeMaintenanceWindowExecutionTaskInvocationsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowExecutionTaskInvocationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeMaintenanceWindowExecutionTasksCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowExecutionTasksCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeMaintenanceWindowExecutionTasksResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowExecutionTasksCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeMaintenanceWindowsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeMaintenanceWindowScheduleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowScheduleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowScheduleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeMaintenanceWindowsForTargetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowsForTargetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowsForTargetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeMaintenanceWindowTargetsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowTargetsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowTargetsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeMaintenanceWindowTasksCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeMaintenanceWindowTasksCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeMaintenanceWindowTasksCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeOpsItemsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeOpsItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeOpsItemsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeOpsItemsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeParametersCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeParametersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeParametersResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeParametersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidFilterOption\":\n        case \"com.amazonaws.ssm#InvalidFilterOption\":\n            throw await de_InvalidFilterOptionRes(parsedOutput, context);\n        case \"InvalidFilterValue\":\n        case \"com.amazonaws.ssm#InvalidFilterValue\":\n            throw await de_InvalidFilterValueRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribePatchBaselinesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribePatchBaselinesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribePatchBaselinesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribePatchGroupsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribePatchGroupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribePatchGroupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribePatchGroupStateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribePatchGroupStateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribePatchGroupStateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribePatchPropertiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribePatchPropertiesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribePatchPropertiesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeSessionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeSessionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeSessionsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeSessionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DisassociateOpsItemRelatedItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DisassociateOpsItemRelatedItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DisassociateOpsItemRelatedItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        case \"OpsItemNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n            throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n        case \"OpsItemRelatedItemAssociationNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemRelatedItemAssociationNotFoundException\":\n            throw await de_OpsItemRelatedItemAssociationNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetAutomationExecutionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetAutomationExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetAutomationExecutionResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetAutomationExecutionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AutomationExecutionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationExecutionNotFoundException\":\n            throw await de_AutomationExecutionNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetCalendarStateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetCalendarStateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetCalendarStateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentType\":\n        case \"com.amazonaws.ssm#InvalidDocumentType\":\n            throw await de_InvalidDocumentTypeRes(parsedOutput, context);\n        case \"UnsupportedCalendarException\":\n        case \"com.amazonaws.ssm#UnsupportedCalendarException\":\n            throw await de_UnsupportedCalendarExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetCommandInvocationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetCommandInvocationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetCommandInvocationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidCommandId\":\n        case \"com.amazonaws.ssm#InvalidCommandId\":\n            throw await de_InvalidCommandIdRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidPluginName\":\n        case \"com.amazonaws.ssm#InvalidPluginName\":\n            throw await de_InvalidPluginNameRes(parsedOutput, context);\n        case \"InvocationDoesNotExist\":\n        case \"com.amazonaws.ssm#InvocationDoesNotExist\":\n            throw await de_InvocationDoesNotExistRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetConnectionStatusCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetConnectionStatusCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetConnectionStatusCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetDefaultPatchBaselineCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetDefaultPatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetDefaultPatchBaselineCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetDeployablePatchSnapshotForInstanceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetDeployablePatchSnapshotForInstanceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetDeployablePatchSnapshotForInstanceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"UnsupportedFeatureRequiredException\":\n        case \"com.amazonaws.ssm#UnsupportedFeatureRequiredException\":\n            throw await de_UnsupportedFeatureRequiredExceptionRes(parsedOutput, context);\n        case \"UnsupportedOperatingSystem\":\n        case \"com.amazonaws.ssm#UnsupportedOperatingSystem\":\n            throw await de_UnsupportedOperatingSystemRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetDocumentCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetDocumentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetDocumentResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetDocumentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetInventoryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetInventoryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetInventoryCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAggregatorException\":\n        case \"com.amazonaws.ssm#InvalidAggregatorException\":\n            throw await de_InvalidAggregatorExceptionRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidInventoryGroupException\":\n        case \"com.amazonaws.ssm#InvalidInventoryGroupException\":\n            throw await de_InvalidInventoryGroupExceptionRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidResultAttributeException\":\n        case \"com.amazonaws.ssm#InvalidResultAttributeException\":\n            throw await de_InvalidResultAttributeExceptionRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetInventorySchemaCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetInventorySchemaCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetInventorySchemaCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetMaintenanceWindowCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetMaintenanceWindowResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetMaintenanceWindowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetMaintenanceWindowExecutionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetMaintenanceWindowExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetMaintenanceWindowExecutionResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetMaintenanceWindowExecutionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetMaintenanceWindowExecutionTaskCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetMaintenanceWindowExecutionTaskCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetMaintenanceWindowExecutionTaskResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetMaintenanceWindowExecutionTaskCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetMaintenanceWindowExecutionTaskInvocationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetMaintenanceWindowExecutionTaskInvocationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetMaintenanceWindowExecutionTaskInvocationResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetMaintenanceWindowExecutionTaskInvocationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetMaintenanceWindowTaskCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetMaintenanceWindowTaskCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetMaintenanceWindowTaskResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetMaintenanceWindowTaskCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetOpsItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetOpsItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetOpsItemResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetOpsItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemAccessDeniedException\":\n        case \"com.amazonaws.ssm#OpsItemAccessDeniedException\":\n            throw await de_OpsItemAccessDeniedExceptionRes(parsedOutput, context);\n        case \"OpsItemNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n            throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetOpsMetadataCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetOpsMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetOpsMetadataCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsMetadataInvalidArgumentException\":\n        case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n            throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n        case \"OpsMetadataNotFoundException\":\n        case \"com.amazonaws.ssm#OpsMetadataNotFoundException\":\n            throw await de_OpsMetadataNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetOpsSummaryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetOpsSummaryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetOpsSummaryCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAggregatorException\":\n        case \"com.amazonaws.ssm#InvalidAggregatorException\":\n            throw await de_InvalidAggregatorExceptionRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncNotFoundException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncNotFoundException\":\n            throw await de_ResourceDataSyncNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetParameterCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetParameterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetParameterResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetParameterCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidKeyId\":\n        case \"com.amazonaws.ssm#InvalidKeyId\":\n            throw await de_InvalidKeyIdRes(parsedOutput, context);\n        case \"ParameterNotFound\":\n        case \"com.amazonaws.ssm#ParameterNotFound\":\n            throw await de_ParameterNotFoundRes(parsedOutput, context);\n        case \"ParameterVersionNotFound\":\n        case \"com.amazonaws.ssm#ParameterVersionNotFound\":\n            throw await de_ParameterVersionNotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetParameterHistoryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetParameterHistoryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetParameterHistoryResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetParameterHistoryCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidKeyId\":\n        case \"com.amazonaws.ssm#InvalidKeyId\":\n            throw await de_InvalidKeyIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"ParameterNotFound\":\n        case \"com.amazonaws.ssm#ParameterNotFound\":\n            throw await de_ParameterNotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetParametersCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetParametersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetParametersResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetParametersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidKeyId\":\n        case \"com.amazonaws.ssm#InvalidKeyId\":\n            throw await de_InvalidKeyIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetParametersByPathCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetParametersByPathCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetParametersByPathResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetParametersByPathCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidFilterOption\":\n        case \"com.amazonaws.ssm#InvalidFilterOption\":\n            throw await de_InvalidFilterOptionRes(parsedOutput, context);\n        case \"InvalidFilterValue\":\n        case \"com.amazonaws.ssm#InvalidFilterValue\":\n            throw await de_InvalidFilterValueRes(parsedOutput, context);\n        case \"InvalidKeyId\":\n        case \"com.amazonaws.ssm#InvalidKeyId\":\n            throw await de_InvalidKeyIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetPatchBaselineCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetPatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetPatchBaselineResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetPatchBaselineCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetPatchBaselineForPatchGroupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetPatchBaselineForPatchGroupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetPatchBaselineForPatchGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetResourcePoliciesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetResourcePoliciesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetResourcePoliciesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourcePolicyInvalidParameterException\":\n        case \"com.amazonaws.ssm#ResourcePolicyInvalidParameterException\":\n            throw await de_ResourcePolicyInvalidParameterExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetServiceSettingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetServiceSettingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetServiceSettingResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetServiceSettingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ServiceSettingNotFound\":\n        case \"com.amazonaws.ssm#ServiceSettingNotFound\":\n            throw await de_ServiceSettingNotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_LabelParameterVersionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_LabelParameterVersionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_LabelParameterVersionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ParameterNotFound\":\n        case \"com.amazonaws.ssm#ParameterNotFound\":\n            throw await de_ParameterNotFoundRes(parsedOutput, context);\n        case \"ParameterVersionLabelLimitExceeded\":\n        case \"com.amazonaws.ssm#ParameterVersionLabelLimitExceeded\":\n            throw await de_ParameterVersionLabelLimitExceededRes(parsedOutput, context);\n        case \"ParameterVersionNotFound\":\n        case \"com.amazonaws.ssm#ParameterVersionNotFound\":\n            throw await de_ParameterVersionNotFoundRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListAssociationsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListAssociationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListAssociationsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListAssociationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListAssociationVersionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListAssociationVersionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListAssociationVersionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListAssociationVersionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListCommandInvocationsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListCommandInvocationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListCommandInvocationsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListCommandInvocationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidCommandId\":\n        case \"com.amazonaws.ssm#InvalidCommandId\":\n            throw await de_InvalidCommandIdRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListCommandsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListCommandsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListCommandsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListCommandsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidCommandId\":\n        case \"com.amazonaws.ssm#InvalidCommandId\":\n            throw await de_InvalidCommandIdRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListComplianceItemsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListComplianceItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListComplianceItemsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListComplianceItemsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"InvalidResourceType\":\n        case \"com.amazonaws.ssm#InvalidResourceType\":\n            throw await de_InvalidResourceTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListComplianceSummariesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListComplianceSummariesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListComplianceSummariesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListDocumentMetadataHistoryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListDocumentMetadataHistoryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListDocumentMetadataHistoryResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListDocumentMetadataHistoryCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListDocumentsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListDocumentsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListDocumentsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListDocumentsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilterKey\":\n        case \"com.amazonaws.ssm#InvalidFilterKey\":\n            throw await de_InvalidFilterKeyRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListDocumentVersionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListDocumentVersionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListDocumentVersionsResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListDocumentVersionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListInventoryEntriesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListInventoryEntriesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListInventoryEntriesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListOpsItemEventsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListOpsItemEventsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListOpsItemEventsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListOpsItemEventsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        case \"OpsItemLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsItemLimitExceededException\":\n            throw await de_OpsItemLimitExceededExceptionRes(parsedOutput, context);\n        case \"OpsItemNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n            throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListOpsItemRelatedItemsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListOpsItemRelatedItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListOpsItemRelatedItemsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListOpsItemRelatedItemsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListOpsMetadataCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListOpsMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListOpsMetadataResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListOpsMetadataCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsMetadataInvalidArgumentException\":\n        case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n            throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListResourceComplianceSummariesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListResourceComplianceSummariesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListResourceComplianceSummariesResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListResourceComplianceSummariesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidFilter\":\n        case \"com.amazonaws.ssm#InvalidFilter\":\n            throw await de_InvalidFilterRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListResourceDataSyncCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListResourceDataSyncCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListResourceDataSyncResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListResourceDataSyncCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.ssm#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput, context);\n        case \"ResourceDataSyncInvalidConfigurationException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncInvalidConfigurationException\":\n            throw await de_ResourceDataSyncInvalidConfigurationExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListTagsForResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListTagsForResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"InvalidResourceType\":\n        case \"com.amazonaws.ssm#InvalidResourceType\":\n            throw await de_InvalidResourceTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ModifyDocumentPermissionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ModifyDocumentPermissionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ModifyDocumentPermissionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DocumentLimitExceeded\":\n        case \"com.amazonaws.ssm#DocumentLimitExceeded\":\n            throw await de_DocumentLimitExceededRes(parsedOutput, context);\n        case \"DocumentPermissionLimit\":\n        case \"com.amazonaws.ssm#DocumentPermissionLimit\":\n            throw await de_DocumentPermissionLimitRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidPermissionType\":\n        case \"com.amazonaws.ssm#InvalidPermissionType\":\n            throw await de_InvalidPermissionTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_PutComplianceItemsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_PutComplianceItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutComplianceItemsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ComplianceTypeCountLimitExceededException\":\n        case \"com.amazonaws.ssm#ComplianceTypeCountLimitExceededException\":\n            throw await de_ComplianceTypeCountLimitExceededExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidItemContentException\":\n        case \"com.amazonaws.ssm#InvalidItemContentException\":\n            throw await de_InvalidItemContentExceptionRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"InvalidResourceType\":\n        case \"com.amazonaws.ssm#InvalidResourceType\":\n            throw await de_InvalidResourceTypeRes(parsedOutput, context);\n        case \"ItemSizeLimitExceededException\":\n        case \"com.amazonaws.ssm#ItemSizeLimitExceededException\":\n            throw await de_ItemSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"TotalSizeLimitExceededException\":\n        case \"com.amazonaws.ssm#TotalSizeLimitExceededException\":\n            throw await de_TotalSizeLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_PutInventoryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_PutInventoryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutInventoryCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CustomSchemaCountLimitExceededException\":\n        case \"com.amazonaws.ssm#CustomSchemaCountLimitExceededException\":\n            throw await de_CustomSchemaCountLimitExceededExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidInventoryItemContextException\":\n        case \"com.amazonaws.ssm#InvalidInventoryItemContextException\":\n            throw await de_InvalidInventoryItemContextExceptionRes(parsedOutput, context);\n        case \"InvalidItemContentException\":\n        case \"com.amazonaws.ssm#InvalidItemContentException\":\n            throw await de_InvalidItemContentExceptionRes(parsedOutput, context);\n        case \"InvalidTypeNameException\":\n        case \"com.amazonaws.ssm#InvalidTypeNameException\":\n            throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n        case \"ItemContentMismatchException\":\n        case \"com.amazonaws.ssm#ItemContentMismatchException\":\n            throw await de_ItemContentMismatchExceptionRes(parsedOutput, context);\n        case \"ItemSizeLimitExceededException\":\n        case \"com.amazonaws.ssm#ItemSizeLimitExceededException\":\n            throw await de_ItemSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"SubTypeCountLimitExceededException\":\n        case \"com.amazonaws.ssm#SubTypeCountLimitExceededException\":\n            throw await de_SubTypeCountLimitExceededExceptionRes(parsedOutput, context);\n        case \"TotalSizeLimitExceededException\":\n        case \"com.amazonaws.ssm#TotalSizeLimitExceededException\":\n            throw await de_TotalSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"UnsupportedInventoryItemContextException\":\n        case \"com.amazonaws.ssm#UnsupportedInventoryItemContextException\":\n            throw await de_UnsupportedInventoryItemContextExceptionRes(parsedOutput, context);\n        case \"UnsupportedInventorySchemaVersionException\":\n        case \"com.amazonaws.ssm#UnsupportedInventorySchemaVersionException\":\n            throw await de_UnsupportedInventorySchemaVersionExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_PutParameterCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_PutParameterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutParameterCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"HierarchyLevelLimitExceededException\":\n        case \"com.amazonaws.ssm#HierarchyLevelLimitExceededException\":\n            throw await de_HierarchyLevelLimitExceededExceptionRes(parsedOutput, context);\n        case \"HierarchyTypeMismatchException\":\n        case \"com.amazonaws.ssm#HierarchyTypeMismatchException\":\n            throw await de_HierarchyTypeMismatchExceptionRes(parsedOutput, context);\n        case \"IncompatiblePolicyException\":\n        case \"com.amazonaws.ssm#IncompatiblePolicyException\":\n            throw await de_IncompatiblePolicyExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAllowedPatternException\":\n        case \"com.amazonaws.ssm#InvalidAllowedPatternException\":\n            throw await de_InvalidAllowedPatternExceptionRes(parsedOutput, context);\n        case \"InvalidKeyId\":\n        case \"com.amazonaws.ssm#InvalidKeyId\":\n            throw await de_InvalidKeyIdRes(parsedOutput, context);\n        case \"InvalidPolicyAttributeException\":\n        case \"com.amazonaws.ssm#InvalidPolicyAttributeException\":\n            throw await de_InvalidPolicyAttributeExceptionRes(parsedOutput, context);\n        case \"InvalidPolicyTypeException\":\n        case \"com.amazonaws.ssm#InvalidPolicyTypeException\":\n            throw await de_InvalidPolicyTypeExceptionRes(parsedOutput, context);\n        case \"ParameterAlreadyExists\":\n        case \"com.amazonaws.ssm#ParameterAlreadyExists\":\n            throw await de_ParameterAlreadyExistsRes(parsedOutput, context);\n        case \"ParameterLimitExceeded\":\n        case \"com.amazonaws.ssm#ParameterLimitExceeded\":\n            throw await de_ParameterLimitExceededRes(parsedOutput, context);\n        case \"ParameterMaxVersionLimitExceeded\":\n        case \"com.amazonaws.ssm#ParameterMaxVersionLimitExceeded\":\n            throw await de_ParameterMaxVersionLimitExceededRes(parsedOutput, context);\n        case \"ParameterPatternMismatchException\":\n        case \"com.amazonaws.ssm#ParameterPatternMismatchException\":\n            throw await de_ParameterPatternMismatchExceptionRes(parsedOutput, context);\n        case \"PoliciesLimitExceededException\":\n        case \"com.amazonaws.ssm#PoliciesLimitExceededException\":\n            throw await de_PoliciesLimitExceededExceptionRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        case \"UnsupportedParameterType\":\n        case \"com.amazonaws.ssm#UnsupportedParameterType\":\n            throw await de_UnsupportedParameterTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_PutResourcePolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_PutResourcePolicyCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutResourcePolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourcePolicyConflictException\":\n        case \"com.amazonaws.ssm#ResourcePolicyConflictException\":\n            throw await de_ResourcePolicyConflictExceptionRes(parsedOutput, context);\n        case \"ResourcePolicyInvalidParameterException\":\n        case \"com.amazonaws.ssm#ResourcePolicyInvalidParameterException\":\n            throw await de_ResourcePolicyInvalidParameterExceptionRes(parsedOutput, context);\n        case \"ResourcePolicyLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourcePolicyLimitExceededException\":\n            throw await de_ResourcePolicyLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RegisterDefaultPatchBaselineCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_RegisterDefaultPatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RegisterDefaultPatchBaselineCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RegisterPatchBaselineForPatchGroupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_RegisterPatchBaselineForPatchGroupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RegisterPatchBaselineForPatchGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AlreadyExistsException\":\n        case \"com.amazonaws.ssm#AlreadyExistsException\":\n            throw await de_AlreadyExistsExceptionRes(parsedOutput, context);\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n            throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RegisterTargetWithMaintenanceWindowCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_RegisterTargetWithMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RegisterTargetWithMaintenanceWindowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n            throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RegisterTaskWithMaintenanceWindowCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_RegisterTaskWithMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RegisterTaskWithMaintenanceWindowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"FeatureNotAvailableException\":\n        case \"com.amazonaws.ssm#FeatureNotAvailableException\":\n            throw await de_FeatureNotAvailableExceptionRes(parsedOutput, context);\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n            throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RemoveTagsFromResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_RemoveTagsFromResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RemoveTagsFromResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidResourceId\":\n        case \"com.amazonaws.ssm#InvalidResourceId\":\n            throw await de_InvalidResourceIdRes(parsedOutput, context);\n        case \"InvalidResourceType\":\n        case \"com.amazonaws.ssm#InvalidResourceType\":\n            throw await de_InvalidResourceTypeRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ResetServiceSettingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ResetServiceSettingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ResetServiceSettingResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ResetServiceSettingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ServiceSettingNotFound\":\n        case \"com.amazonaws.ssm#ServiceSettingNotFound\":\n            throw await de_ServiceSettingNotFoundRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ResumeSessionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ResumeSessionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ResumeSessionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_SendAutomationSignalCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_SendAutomationSignalCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_SendAutomationSignalCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AutomationExecutionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationExecutionNotFoundException\":\n            throw await de_AutomationExecutionNotFoundExceptionRes(parsedOutput, context);\n        case \"AutomationStepNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationStepNotFoundException\":\n            throw await de_AutomationStepNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAutomationSignalException\":\n        case \"com.amazonaws.ssm#InvalidAutomationSignalException\":\n            throw await de_InvalidAutomationSignalExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_SendCommandCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_SendCommandCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_SendCommandResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_SendCommandCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DuplicateInstanceId\":\n        case \"com.amazonaws.ssm#DuplicateInstanceId\":\n            throw await de_DuplicateInstanceIdRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"InvalidNotificationConfig\":\n        case \"com.amazonaws.ssm#InvalidNotificationConfig\":\n            throw await de_InvalidNotificationConfigRes(parsedOutput, context);\n        case \"InvalidOutputFolder\":\n        case \"com.amazonaws.ssm#InvalidOutputFolder\":\n            throw await de_InvalidOutputFolderRes(parsedOutput, context);\n        case \"InvalidParameters\":\n        case \"com.amazonaws.ssm#InvalidParameters\":\n            throw await de_InvalidParametersRes(parsedOutput, context);\n        case \"InvalidRole\":\n        case \"com.amazonaws.ssm#InvalidRole\":\n            throw await de_InvalidRoleRes(parsedOutput, context);\n        case \"MaxDocumentSizeExceeded\":\n        case \"com.amazonaws.ssm#MaxDocumentSizeExceeded\":\n            throw await de_MaxDocumentSizeExceededRes(parsedOutput, context);\n        case \"UnsupportedPlatformType\":\n        case \"com.amazonaws.ssm#UnsupportedPlatformType\":\n            throw await de_UnsupportedPlatformTypeRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_StartAssociationsOnceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_StartAssociationsOnceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_StartAssociationsOnceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InvalidAssociation\":\n        case \"com.amazonaws.ssm#InvalidAssociation\":\n            throw await de_InvalidAssociationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_StartAutomationExecutionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_StartAutomationExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_StartAutomationExecutionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AutomationDefinitionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationDefinitionNotFoundException\":\n            throw await de_AutomationDefinitionNotFoundExceptionRes(parsedOutput, context);\n        case \"AutomationDefinitionVersionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationDefinitionVersionNotFoundException\":\n            throw await de_AutomationDefinitionVersionNotFoundExceptionRes(parsedOutput, context);\n        case \"AutomationExecutionLimitExceededException\":\n        case \"com.amazonaws.ssm#AutomationExecutionLimitExceededException\":\n            throw await de_AutomationExecutionLimitExceededExceptionRes(parsedOutput, context);\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAutomationExecutionParametersException\":\n        case \"com.amazonaws.ssm#InvalidAutomationExecutionParametersException\":\n            throw await de_InvalidAutomationExecutionParametersExceptionRes(parsedOutput, context);\n        case \"InvalidTarget\":\n        case \"com.amazonaws.ssm#InvalidTarget\":\n            throw await de_InvalidTargetRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_StartChangeRequestExecutionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_StartChangeRequestExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_StartChangeRequestExecutionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AutomationDefinitionNotApprovedException\":\n        case \"com.amazonaws.ssm#AutomationDefinitionNotApprovedException\":\n            throw await de_AutomationDefinitionNotApprovedExceptionRes(parsedOutput, context);\n        case \"AutomationDefinitionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationDefinitionNotFoundException\":\n            throw await de_AutomationDefinitionNotFoundExceptionRes(parsedOutput, context);\n        case \"AutomationDefinitionVersionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationDefinitionVersionNotFoundException\":\n            throw await de_AutomationDefinitionVersionNotFoundExceptionRes(parsedOutput, context);\n        case \"AutomationExecutionLimitExceededException\":\n        case \"com.amazonaws.ssm#AutomationExecutionLimitExceededException\":\n            throw await de_AutomationExecutionLimitExceededExceptionRes(parsedOutput, context);\n        case \"IdempotentParameterMismatch\":\n        case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n            throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAutomationExecutionParametersException\":\n        case \"com.amazonaws.ssm#InvalidAutomationExecutionParametersException\":\n            throw await de_InvalidAutomationExecutionParametersExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_StartSessionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_StartSessionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_StartSessionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"TargetNotConnected\":\n        case \"com.amazonaws.ssm#TargetNotConnected\":\n            throw await de_TargetNotConnectedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_StopAutomationExecutionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_StopAutomationExecutionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_StopAutomationExecutionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AutomationExecutionNotFoundException\":\n        case \"com.amazonaws.ssm#AutomationExecutionNotFoundException\":\n            throw await de_AutomationExecutionNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAutomationStatusUpdateException\":\n        case \"com.amazonaws.ssm#InvalidAutomationStatusUpdateException\":\n            throw await de_InvalidAutomationStatusUpdateExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_TerminateSessionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_TerminateSessionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_TerminateSessionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UnlabelParameterVersionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UnlabelParameterVersionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UnlabelParameterVersionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ParameterNotFound\":\n        case \"com.amazonaws.ssm#ParameterNotFound\":\n            throw await de_ParameterNotFoundRes(parsedOutput, context);\n        case \"ParameterVersionNotFound\":\n        case \"com.amazonaws.ssm#ParameterVersionNotFound\":\n            throw await de_ParameterVersionNotFoundRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateAssociationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateAssociationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateAssociationResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateAssociationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"AssociationVersionLimitExceeded\":\n        case \"com.amazonaws.ssm#AssociationVersionLimitExceeded\":\n            throw await de_AssociationVersionLimitExceededRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidAssociationVersion\":\n        case \"com.amazonaws.ssm#InvalidAssociationVersion\":\n            throw await de_InvalidAssociationVersionRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"InvalidOutputLocation\":\n        case \"com.amazonaws.ssm#InvalidOutputLocation\":\n            throw await de_InvalidOutputLocationRes(parsedOutput, context);\n        case \"InvalidParameters\":\n        case \"com.amazonaws.ssm#InvalidParameters\":\n            throw await de_InvalidParametersRes(parsedOutput, context);\n        case \"InvalidSchedule\":\n        case \"com.amazonaws.ssm#InvalidSchedule\":\n            throw await de_InvalidScheduleRes(parsedOutput, context);\n        case \"InvalidTarget\":\n        case \"com.amazonaws.ssm#InvalidTarget\":\n            throw await de_InvalidTargetRes(parsedOutput, context);\n        case \"InvalidTargetMaps\":\n        case \"com.amazonaws.ssm#InvalidTargetMaps\":\n            throw await de_InvalidTargetMapsRes(parsedOutput, context);\n        case \"InvalidUpdate\":\n        case \"com.amazonaws.ssm#InvalidUpdate\":\n            throw await de_InvalidUpdateRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateAssociationStatusCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateAssociationStatusCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateAssociationStatusResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateAssociationStatusCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AssociationDoesNotExist\":\n        case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n            throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        case \"StatusUnchanged\":\n        case \"com.amazonaws.ssm#StatusUnchanged\":\n            throw await de_StatusUnchangedRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateDocumentCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateDocumentCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateDocumentResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateDocumentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DocumentVersionLimitExceeded\":\n        case \"com.amazonaws.ssm#DocumentVersionLimitExceeded\":\n            throw await de_DocumentVersionLimitExceededRes(parsedOutput, context);\n        case \"DuplicateDocumentContent\":\n        case \"com.amazonaws.ssm#DuplicateDocumentContent\":\n            throw await de_DuplicateDocumentContentRes(parsedOutput, context);\n        case \"DuplicateDocumentVersionName\":\n        case \"com.amazonaws.ssm#DuplicateDocumentVersionName\":\n            throw await de_DuplicateDocumentVersionNameRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentContent\":\n        case \"com.amazonaws.ssm#InvalidDocumentContent\":\n            throw await de_InvalidDocumentContentRes(parsedOutput, context);\n        case \"InvalidDocumentOperation\":\n        case \"com.amazonaws.ssm#InvalidDocumentOperation\":\n            throw await de_InvalidDocumentOperationRes(parsedOutput, context);\n        case \"InvalidDocumentSchemaVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentSchemaVersion\":\n            throw await de_InvalidDocumentSchemaVersionRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        case \"MaxDocumentSizeExceeded\":\n        case \"com.amazonaws.ssm#MaxDocumentSizeExceeded\":\n            throw await de_MaxDocumentSizeExceededRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateDocumentDefaultVersionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateDocumentDefaultVersionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateDocumentDefaultVersionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentSchemaVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentSchemaVersion\":\n            throw await de_InvalidDocumentSchemaVersionRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateDocumentMetadataCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateDocumentMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateDocumentMetadataCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidDocument\":\n        case \"com.amazonaws.ssm#InvalidDocument\":\n            throw await de_InvalidDocumentRes(parsedOutput, context);\n        case \"InvalidDocumentOperation\":\n        case \"com.amazonaws.ssm#InvalidDocumentOperation\":\n            throw await de_InvalidDocumentOperationRes(parsedOutput, context);\n        case \"InvalidDocumentVersion\":\n        case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n            throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateMaintenanceWindowCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateMaintenanceWindowCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateMaintenanceWindowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateMaintenanceWindowTargetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateMaintenanceWindowTargetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateMaintenanceWindowTargetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateMaintenanceWindowTaskCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateMaintenanceWindowTaskCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateMaintenanceWindowTaskResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateMaintenanceWindowTaskCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateManagedInstanceRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateManagedInstanceRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateManagedInstanceRoleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidInstanceId\":\n        case \"com.amazonaws.ssm#InvalidInstanceId\":\n            throw await de_InvalidInstanceIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateOpsItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateOpsItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateOpsItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsItemAccessDeniedException\":\n        case \"com.amazonaws.ssm#OpsItemAccessDeniedException\":\n            throw await de_OpsItemAccessDeniedExceptionRes(parsedOutput, context);\n        case \"OpsItemAlreadyExistsException\":\n        case \"com.amazonaws.ssm#OpsItemAlreadyExistsException\":\n            throw await de_OpsItemAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"OpsItemInvalidParameterException\":\n        case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n            throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n        case \"OpsItemLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsItemLimitExceededException\":\n            throw await de_OpsItemLimitExceededExceptionRes(parsedOutput, context);\n        case \"OpsItemNotFoundException\":\n        case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n            throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateOpsMetadataCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateOpsMetadataCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateOpsMetadataCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"OpsMetadataInvalidArgumentException\":\n        case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n            throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n        case \"OpsMetadataKeyLimitExceededException\":\n        case \"com.amazonaws.ssm#OpsMetadataKeyLimitExceededException\":\n            throw await de_OpsMetadataKeyLimitExceededExceptionRes(parsedOutput, context);\n        case \"OpsMetadataNotFoundException\":\n        case \"com.amazonaws.ssm#OpsMetadataNotFoundException\":\n            throw await de_OpsMetadataNotFoundExceptionRes(parsedOutput, context);\n        case \"OpsMetadataTooManyUpdatesException\":\n        case \"com.amazonaws.ssm#OpsMetadataTooManyUpdatesException\":\n            throw await de_OpsMetadataTooManyUpdatesExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdatePatchBaselineCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdatePatchBaselineCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdatePatchBaselineResult(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdatePatchBaselineCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DoesNotExistException\":\n        case \"com.amazonaws.ssm#DoesNotExistException\":\n            throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateResourceDataSyncCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateResourceDataSyncCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateResourceDataSyncCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceDataSyncConflictException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncConflictException\":\n            throw await de_ResourceDataSyncConflictExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncInvalidConfigurationException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncInvalidConfigurationException\":\n            throw await de_ResourceDataSyncInvalidConfigurationExceptionRes(parsedOutput, context);\n        case \"ResourceDataSyncNotFoundException\":\n        case \"com.amazonaws.ssm#ResourceDataSyncNotFoundException\":\n            throw await de_ResourceDataSyncNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateServiceSettingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateServiceSettingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateServiceSettingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.ssm#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ServiceSettingNotFound\":\n        case \"com.amazonaws.ssm#ServiceSettingNotFound\":\n            throw await de_ServiceSettingNotFoundRes(parsedOutput, context);\n        case \"TooManyUpdates\":\n        case \"com.amazonaws.ssm#TooManyUpdates\":\n            throw await de_TooManyUpdatesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_AlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AssociatedInstancesRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AssociatedInstances({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AssociationAlreadyExistsRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AssociationAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AssociationDoesNotExistRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AssociationDoesNotExist({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AssociationExecutionDoesNotExistRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AssociationExecutionDoesNotExist({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AssociationLimitExceededRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AssociationLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AssociationVersionLimitExceededRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AssociationVersionLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AutomationDefinitionNotApprovedExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AutomationDefinitionNotApprovedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AutomationDefinitionNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AutomationDefinitionNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AutomationDefinitionVersionNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AutomationDefinitionVersionNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AutomationExecutionLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AutomationExecutionLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AutomationExecutionNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AutomationExecutionNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_AutomationStepNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new AutomationStepNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ComplianceTypeCountLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ComplianceTypeCountLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_CustomSchemaCountLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new CustomSchemaCountLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DocumentAlreadyExistsRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DocumentAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DocumentLimitExceededRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DocumentLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DocumentPermissionLimitRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DocumentPermissionLimit({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DocumentVersionLimitExceededRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DocumentVersionLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DoesNotExistExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DoesNotExistException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DuplicateDocumentContentRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DuplicateDocumentContent({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DuplicateDocumentVersionNameRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DuplicateDocumentVersionName({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DuplicateInstanceIdRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DuplicateInstanceId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_FeatureNotAvailableExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new FeatureNotAvailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_HierarchyLevelLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new HierarchyLevelLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_HierarchyTypeMismatchExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new HierarchyTypeMismatchException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IdempotentParameterMismatchRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new IdempotentParameterMismatch({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IncompatiblePolicyExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new IncompatiblePolicyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InternalServerErrorRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InternalServerError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidActivationRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidActivation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidActivationIdRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidActivationId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAggregatorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidAggregatorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAllowedPatternExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidAllowedPatternException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAssociationRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidAssociation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAssociationVersionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidAssociationVersion({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAutomationExecutionParametersExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidAutomationExecutionParametersException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAutomationSignalExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidAutomationSignalException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAutomationStatusUpdateExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidAutomationStatusUpdateException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidCommandIdRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidCommandId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidDeleteInventoryParametersExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidDeleteInventoryParametersException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidDeletionIdExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidDeletionIdException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidDocumentRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidDocument({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidDocumentContentRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidDocumentContent({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidDocumentOperationRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidDocumentOperation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidDocumentSchemaVersionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidDocumentSchemaVersion({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidDocumentTypeRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidDocumentType({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidDocumentVersionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidDocumentVersion({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidFilterRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidFilter({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidFilterKeyRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidFilterKey({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidFilterOptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidFilterOption({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidFilterValueRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidFilterValue({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidInstanceIdRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidInstanceId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidInstanceInformationFilterValueRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidInstanceInformationFilterValue({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidInventoryGroupExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidInventoryGroupException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidInventoryItemContextExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidInventoryItemContextException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidInventoryRequestExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidInventoryRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidItemContentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidItemContentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidKeyIdRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidKeyId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidNextTokenRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidNextToken({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidNotificationConfigRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidNotificationConfig({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidOptionExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidOptionException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidOutputFolderRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidOutputFolder({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidOutputLocationRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidOutputLocation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidParametersRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidParameters({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidPermissionTypeRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidPermissionType({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidPluginNameRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidPluginName({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidPolicyAttributeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidPolicyAttributeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidPolicyTypeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidPolicyTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidResourceIdRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidResourceId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidResourceTypeRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidResourceType({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidResultAttributeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidResultAttributeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidRoleRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidRole({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidScheduleRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidSchedule({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidTagRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidTag({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidTargetRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidTarget({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidTargetMapsRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidTargetMaps({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidTypeNameExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidTypeNameException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidUpdateRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidUpdate({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvocationDoesNotExistRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvocationDoesNotExist({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ItemContentMismatchExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ItemContentMismatchException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ItemSizeLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ItemSizeLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MaxDocumentSizeExceededRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new MaxDocumentSizeExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsItemAccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsItemAccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsItemAlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsItemAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsItemInvalidParameterExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsItemInvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsItemLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsItemLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsItemNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsItemNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsItemRelatedItemAlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsItemRelatedItemAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsItemRelatedItemAssociationNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsItemRelatedItemAssociationNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsMetadataAlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsMetadataAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsMetadataInvalidArgumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsMetadataInvalidArgumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsMetadataKeyLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsMetadataKeyLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsMetadataLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsMetadataLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsMetadataNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsMetadataNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_OpsMetadataTooManyUpdatesExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new OpsMetadataTooManyUpdatesException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ParameterAlreadyExistsRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ParameterAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ParameterLimitExceededRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ParameterLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ParameterMaxVersionLimitExceededRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ParameterMaxVersionLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ParameterNotFoundRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ParameterNotFound({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ParameterPatternMismatchExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ParameterPatternMismatchException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ParameterVersionLabelLimitExceededRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ParameterVersionLabelLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ParameterVersionNotFoundRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ParameterVersionNotFound({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PoliciesLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new PoliciesLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceDataSyncAlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceDataSyncAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceDataSyncConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceDataSyncConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceDataSyncCountExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceDataSyncCountExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceDataSyncInvalidConfigurationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceDataSyncInvalidConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceDataSyncNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceDataSyncNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourcePolicyConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourcePolicyConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourcePolicyInvalidParameterExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourcePolicyInvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourcePolicyLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourcePolicyLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ServiceSettingNotFoundRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ServiceSettingNotFound({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_StatusUnchangedRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new StatusUnchanged({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_SubTypeCountLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new SubTypeCountLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TargetInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TargetInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TargetNotConnectedRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TargetNotConnected({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TooManyTagsErrorRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TooManyTagsError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TooManyUpdatesRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TooManyUpdates({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TotalSizeLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TotalSizeLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_UnsupportedCalendarExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new UnsupportedCalendarException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_UnsupportedFeatureRequiredExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new UnsupportedFeatureRequiredException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_UnsupportedInventoryItemContextExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new UnsupportedInventoryItemContextException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_UnsupportedInventorySchemaVersionExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new UnsupportedInventorySchemaVersionException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_UnsupportedOperatingSystemRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new UnsupportedOperatingSystem({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_UnsupportedParameterTypeRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new UnsupportedParameterType({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_UnsupportedPlatformTypeRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new UnsupportedPlatformType({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssociationStatus = (input, context) => {\n    return take(input, {\n        AdditionalInfo: [],\n        Date: (_) => Math.round(_.getTime() / 1000),\n        Message: [],\n        Name: [],\n    });\n};\nconst se_ComplianceExecutionSummary = (input, context) => {\n    return take(input, {\n        ExecutionId: [],\n        ExecutionTime: (_) => Math.round(_.getTime() / 1000),\n        ExecutionType: [],\n    });\n};\nconst se_CreateActivationRequest = (input, context) => {\n    return take(input, {\n        DefaultInstanceName: [],\n        Description: [],\n        ExpirationDate: (_) => Math.round(_.getTime() / 1000),\n        IamRole: [],\n        RegistrationLimit: [],\n        RegistrationMetadata: _json,\n        Tags: _json,\n    });\n};\nconst se_CreateMaintenanceWindowRequest = (input, context) => {\n    return take(input, {\n        AllowUnassociatedTargets: [],\n        ClientToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        Cutoff: [],\n        Description: [],\n        Duration: [],\n        EndDate: [],\n        Name: [],\n        Schedule: [],\n        ScheduleOffset: [],\n        ScheduleTimezone: [],\n        StartDate: [],\n        Tags: _json,\n    });\n};\nconst se_CreateOpsItemRequest = (input, context) => {\n    return take(input, {\n        AccountId: [],\n        ActualEndTime: (_) => Math.round(_.getTime() / 1000),\n        ActualStartTime: (_) => Math.round(_.getTime() / 1000),\n        Category: [],\n        Description: [],\n        Notifications: _json,\n        OperationalData: _json,\n        OpsItemType: [],\n        PlannedEndTime: (_) => Math.round(_.getTime() / 1000),\n        PlannedStartTime: (_) => Math.round(_.getTime() / 1000),\n        Priority: [],\n        RelatedOpsItems: _json,\n        Severity: [],\n        Source: [],\n        Tags: _json,\n        Title: [],\n    });\n};\nconst se_CreatePatchBaselineRequest = (input, context) => {\n    return take(input, {\n        ApprovalRules: _json,\n        ApprovedPatches: _json,\n        ApprovedPatchesComplianceLevel: [],\n        ApprovedPatchesEnableNonSecurity: [],\n        ClientToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        Description: [],\n        GlobalFilters: _json,\n        Name: [],\n        OperatingSystem: [],\n        RejectedPatches: _json,\n        RejectedPatchesAction: [],\n        Sources: _json,\n        Tags: _json,\n    });\n};\nconst se_DeleteInventoryRequest = (input, context) => {\n    return take(input, {\n        ClientToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        DryRun: [],\n        SchemaDeleteOption: [],\n        TypeName: [],\n    });\n};\nconst se_GetInventoryRequest = (input, context) => {\n    return take(input, {\n        Aggregators: (_) => se_InventoryAggregatorList(_, context),\n        Filters: _json,\n        MaxResults: [],\n        NextToken: [],\n        ResultAttributes: _json,\n    });\n};\nconst se_GetOpsSummaryRequest = (input, context) => {\n    return take(input, {\n        Aggregators: (_) => se_OpsAggregatorList(_, context),\n        Filters: _json,\n        MaxResults: [],\n        NextToken: [],\n        ResultAttributes: _json,\n        SyncName: [],\n    });\n};\nconst se_InventoryAggregator = (input, context) => {\n    return take(input, {\n        Aggregators: (_) => se_InventoryAggregatorList(_, context),\n        Expression: [],\n        Groups: _json,\n    });\n};\nconst se_InventoryAggregatorList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_InventoryAggregator(entry, context);\n    });\n};\nconst se_MaintenanceWindowLambdaParameters = (input, context) => {\n    return take(input, {\n        ClientContext: [],\n        Payload: context.base64Encoder,\n        Qualifier: [],\n    });\n};\nconst se_MaintenanceWindowTaskInvocationParameters = (input, context) => {\n    return take(input, {\n        Automation: _json,\n        Lambda: (_) => se_MaintenanceWindowLambdaParameters(_, context),\n        RunCommand: _json,\n        StepFunctions: _json,\n    });\n};\nconst se_OpsAggregator = (input, context) => {\n    return take(input, {\n        AggregatorType: [],\n        Aggregators: (_) => se_OpsAggregatorList(_, context),\n        AttributeName: [],\n        Filters: _json,\n        TypeName: [],\n        Values: _json,\n    });\n};\nconst se_OpsAggregatorList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_OpsAggregator(entry, context);\n    });\n};\nconst se_PutComplianceItemsRequest = (input, context) => {\n    return take(input, {\n        ComplianceType: [],\n        ExecutionSummary: (_) => se_ComplianceExecutionSummary(_, context),\n        ItemContentHash: [],\n        Items: _json,\n        ResourceId: [],\n        ResourceType: [],\n        UploadType: [],\n    });\n};\nconst se_RegisterTargetWithMaintenanceWindowRequest = (input, context) => {\n    return take(input, {\n        ClientToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        Description: [],\n        Name: [],\n        OwnerInformation: [],\n        ResourceType: [],\n        Targets: _json,\n        WindowId: [],\n    });\n};\nconst se_RegisterTaskWithMaintenanceWindowRequest = (input, context) => {\n    return take(input, {\n        AlarmConfiguration: _json,\n        ClientToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        CutoffBehavior: [],\n        Description: [],\n        LoggingInfo: _json,\n        MaxConcurrency: [],\n        MaxErrors: [],\n        Name: [],\n        Priority: [],\n        ServiceRoleArn: [],\n        Targets: _json,\n        TaskArn: [],\n        TaskInvocationParameters: (_) => se_MaintenanceWindowTaskInvocationParameters(_, context),\n        TaskParameters: _json,\n        TaskType: [],\n        WindowId: [],\n    });\n};\nconst se_StartChangeRequestExecutionRequest = (input, context) => {\n    return take(input, {\n        AutoApprove: [],\n        ChangeDetails: [],\n        ChangeRequestName: [],\n        ClientToken: [],\n        DocumentName: [],\n        DocumentVersion: [],\n        Parameters: _json,\n        Runbooks: _json,\n        ScheduledEndTime: (_) => Math.round(_.getTime() / 1000),\n        ScheduledTime: (_) => Math.round(_.getTime() / 1000),\n        Tags: _json,\n    });\n};\nconst se_UpdateAssociationStatusRequest = (input, context) => {\n    return take(input, {\n        AssociationStatus: (_) => se_AssociationStatus(_, context),\n        InstanceId: [],\n        Name: [],\n    });\n};\nconst se_UpdateMaintenanceWindowTaskRequest = (input, context) => {\n    return take(input, {\n        AlarmConfiguration: _json,\n        CutoffBehavior: [],\n        Description: [],\n        LoggingInfo: _json,\n        MaxConcurrency: [],\n        MaxErrors: [],\n        Name: [],\n        Priority: [],\n        Replace: [],\n        ServiceRoleArn: [],\n        Targets: _json,\n        TaskArn: [],\n        TaskInvocationParameters: (_) => se_MaintenanceWindowTaskInvocationParameters(_, context),\n        TaskParameters: _json,\n        WindowId: [],\n        WindowTaskId: [],\n    });\n};\nconst se_UpdateOpsItemRequest = (input, context) => {\n    return take(input, {\n        ActualEndTime: (_) => Math.round(_.getTime() / 1000),\n        ActualStartTime: (_) => Math.round(_.getTime() / 1000),\n        Category: [],\n        Description: [],\n        Notifications: _json,\n        OperationalData: _json,\n        OperationalDataToDelete: _json,\n        OpsItemArn: [],\n        OpsItemId: [],\n        PlannedEndTime: (_) => Math.round(_.getTime() / 1000),\n        PlannedStartTime: (_) => Math.round(_.getTime() / 1000),\n        Priority: [],\n        RelatedOpsItems: _json,\n        Severity: [],\n        Status: [],\n        Title: [],\n    });\n};\nconst de_Activation = (output, context) => {\n    return take(output, {\n        ActivationId: __expectString,\n        CreatedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DefaultInstanceName: __expectString,\n        Description: __expectString,\n        ExpirationDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Expired: __expectBoolean,\n        IamRole: __expectString,\n        RegistrationLimit: __expectInt32,\n        RegistrationsCount: __expectInt32,\n        Tags: _json,\n    });\n};\nconst de_ActivationList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Activation(entry, context);\n    });\n    return retVal;\n};\nconst de_Association = (output, context) => {\n    return take(output, {\n        AssociationId: __expectString,\n        AssociationName: __expectString,\n        AssociationVersion: __expectString,\n        DocumentVersion: __expectString,\n        InstanceId: __expectString,\n        LastExecutionDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Name: __expectString,\n        Overview: _json,\n        ScheduleExpression: __expectString,\n        ScheduleOffset: __expectInt32,\n        TargetMaps: _json,\n        Targets: _json,\n    });\n};\nconst de_AssociationDescription = (output, context) => {\n    return take(output, {\n        AlarmConfiguration: _json,\n        ApplyOnlyAtCronInterval: __expectBoolean,\n        AssociationId: __expectString,\n        AssociationName: __expectString,\n        AssociationVersion: __expectString,\n        AutomationTargetParameterName: __expectString,\n        CalendarNames: _json,\n        ComplianceSeverity: __expectString,\n        Date: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DocumentVersion: __expectString,\n        InstanceId: __expectString,\n        LastExecutionDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastSuccessfulExecutionDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastUpdateAssociationDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        MaxConcurrency: __expectString,\n        MaxErrors: __expectString,\n        Name: __expectString,\n        OutputLocation: _json,\n        Overview: _json,\n        Parameters: _json,\n        ScheduleExpression: __expectString,\n        ScheduleOffset: __expectInt32,\n        Status: (_) => de_AssociationStatus(_, context),\n        SyncCompliance: __expectString,\n        TargetLocations: _json,\n        TargetMaps: _json,\n        Targets: _json,\n        TriggeredAlarms: _json,\n    });\n};\nconst de_AssociationDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AssociationDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_AssociationExecution = (output, context) => {\n    return take(output, {\n        AlarmConfiguration: _json,\n        AssociationId: __expectString,\n        AssociationVersion: __expectString,\n        CreatedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DetailedStatus: __expectString,\n        ExecutionId: __expectString,\n        LastExecutionDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ResourceCountByStatus: __expectString,\n        Status: __expectString,\n        TriggeredAlarms: _json,\n    });\n};\nconst de_AssociationExecutionsList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AssociationExecution(entry, context);\n    });\n    return retVal;\n};\nconst de_AssociationExecutionTarget = (output, context) => {\n    return take(output, {\n        AssociationId: __expectString,\n        AssociationVersion: __expectString,\n        DetailedStatus: __expectString,\n        ExecutionId: __expectString,\n        LastExecutionDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        OutputSource: _json,\n        ResourceId: __expectString,\n        ResourceType: __expectString,\n        Status: __expectString,\n    });\n};\nconst de_AssociationExecutionTargetsList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AssociationExecutionTarget(entry, context);\n    });\n    return retVal;\n};\nconst de_AssociationList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Association(entry, context);\n    });\n    return retVal;\n};\nconst de_AssociationStatus = (output, context) => {\n    return take(output, {\n        AdditionalInfo: __expectString,\n        Date: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Message: __expectString,\n        Name: __expectString,\n    });\n};\nconst de_AssociationVersionInfo = (output, context) => {\n    return take(output, {\n        ApplyOnlyAtCronInterval: __expectBoolean,\n        AssociationId: __expectString,\n        AssociationName: __expectString,\n        AssociationVersion: __expectString,\n        CalendarNames: _json,\n        ComplianceSeverity: __expectString,\n        CreatedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DocumentVersion: __expectString,\n        MaxConcurrency: __expectString,\n        MaxErrors: __expectString,\n        Name: __expectString,\n        OutputLocation: _json,\n        Parameters: _json,\n        ScheduleExpression: __expectString,\n        ScheduleOffset: __expectInt32,\n        SyncCompliance: __expectString,\n        TargetLocations: _json,\n        TargetMaps: _json,\n        Targets: _json,\n    });\n};\nconst de_AssociationVersionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AssociationVersionInfo(entry, context);\n    });\n    return retVal;\n};\nconst de_AutomationExecution = (output, context) => {\n    return take(output, {\n        AlarmConfiguration: _json,\n        AssociationId: __expectString,\n        AutomationExecutionId: __expectString,\n        AutomationExecutionStatus: __expectString,\n        AutomationSubtype: __expectString,\n        ChangeRequestName: __expectString,\n        CurrentAction: __expectString,\n        CurrentStepName: __expectString,\n        DocumentName: __expectString,\n        DocumentVersion: __expectString,\n        ExecutedBy: __expectString,\n        ExecutionEndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ExecutionStartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        FailureMessage: __expectString,\n        MaxConcurrency: __expectString,\n        MaxErrors: __expectString,\n        Mode: __expectString,\n        OpsItemId: __expectString,\n        Outputs: _json,\n        Parameters: _json,\n        ParentAutomationExecutionId: __expectString,\n        ProgressCounters: _json,\n        ResolvedTargets: _json,\n        Runbooks: _json,\n        ScheduledTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        StepExecutions: (_) => de_StepExecutionList(_, context),\n        StepExecutionsTruncated: __expectBoolean,\n        Target: __expectString,\n        TargetLocations: _json,\n        TargetMaps: _json,\n        TargetParameterName: __expectString,\n        Targets: _json,\n        TriggeredAlarms: _json,\n    });\n};\nconst de_AutomationExecutionMetadata = (output, context) => {\n    return take(output, {\n        AlarmConfiguration: _json,\n        AssociationId: __expectString,\n        AutomationExecutionId: __expectString,\n        AutomationExecutionStatus: __expectString,\n        AutomationSubtype: __expectString,\n        AutomationType: __expectString,\n        ChangeRequestName: __expectString,\n        CurrentAction: __expectString,\n        CurrentStepName: __expectString,\n        DocumentName: __expectString,\n        DocumentVersion: __expectString,\n        ExecutedBy: __expectString,\n        ExecutionEndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ExecutionStartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        FailureMessage: __expectString,\n        LogFile: __expectString,\n        MaxConcurrency: __expectString,\n        MaxErrors: __expectString,\n        Mode: __expectString,\n        OpsItemId: __expectString,\n        Outputs: _json,\n        ParentAutomationExecutionId: __expectString,\n        ResolvedTargets: _json,\n        Runbooks: _json,\n        ScheduledTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Target: __expectString,\n        TargetMaps: _json,\n        TargetParameterName: __expectString,\n        Targets: _json,\n        TriggeredAlarms: _json,\n    });\n};\nconst de_AutomationExecutionMetadataList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AutomationExecutionMetadata(entry, context);\n    });\n    return retVal;\n};\nconst de_Command = (output, context) => {\n    return take(output, {\n        AlarmConfiguration: _json,\n        CloudWatchOutputConfig: _json,\n        CommandId: __expectString,\n        Comment: __expectString,\n        CompletedCount: __expectInt32,\n        DeliveryTimedOutCount: __expectInt32,\n        DocumentName: __expectString,\n        DocumentVersion: __expectString,\n        ErrorCount: __expectInt32,\n        ExpiresAfter: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        InstanceIds: _json,\n        MaxConcurrency: __expectString,\n        MaxErrors: __expectString,\n        NotificationConfig: _json,\n        OutputS3BucketName: __expectString,\n        OutputS3KeyPrefix: __expectString,\n        OutputS3Region: __expectString,\n        Parameters: _json,\n        RequestedDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ServiceRole: __expectString,\n        Status: __expectString,\n        StatusDetails: __expectString,\n        TargetCount: __expectInt32,\n        Targets: _json,\n        TimeoutSeconds: __expectInt32,\n        TriggeredAlarms: _json,\n    });\n};\nconst de_CommandInvocation = (output, context) => {\n    return take(output, {\n        CloudWatchOutputConfig: _json,\n        CommandId: __expectString,\n        CommandPlugins: (_) => de_CommandPluginList(_, context),\n        Comment: __expectString,\n        DocumentName: __expectString,\n        DocumentVersion: __expectString,\n        InstanceId: __expectString,\n        InstanceName: __expectString,\n        NotificationConfig: _json,\n        RequestedDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ServiceRole: __expectString,\n        StandardErrorUrl: __expectString,\n        StandardOutputUrl: __expectString,\n        Status: __expectString,\n        StatusDetails: __expectString,\n        TraceOutput: __expectString,\n    });\n};\nconst de_CommandInvocationList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CommandInvocation(entry, context);\n    });\n    return retVal;\n};\nconst de_CommandList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Command(entry, context);\n    });\n    return retVal;\n};\nconst de_CommandPlugin = (output, context) => {\n    return take(output, {\n        Name: __expectString,\n        Output: __expectString,\n        OutputS3BucketName: __expectString,\n        OutputS3KeyPrefix: __expectString,\n        OutputS3Region: __expectString,\n        ResponseCode: __expectInt32,\n        ResponseFinishDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ResponseStartDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        StandardErrorUrl: __expectString,\n        StandardOutputUrl: __expectString,\n        Status: __expectString,\n        StatusDetails: __expectString,\n    });\n};\nconst de_CommandPluginList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CommandPlugin(entry, context);\n    });\n    return retVal;\n};\nconst de_ComplianceExecutionSummary = (output, context) => {\n    return take(output, {\n        ExecutionId: __expectString,\n        ExecutionTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ExecutionType: __expectString,\n    });\n};\nconst de_ComplianceItem = (output, context) => {\n    return take(output, {\n        ComplianceType: __expectString,\n        Details: _json,\n        ExecutionSummary: (_) => de_ComplianceExecutionSummary(_, context),\n        Id: __expectString,\n        ResourceId: __expectString,\n        ResourceType: __expectString,\n        Severity: __expectString,\n        Status: __expectString,\n        Title: __expectString,\n    });\n};\nconst de_ComplianceItemList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ComplianceItem(entry, context);\n    });\n    return retVal;\n};\nconst de_CreateAssociationBatchResult = (output, context) => {\n    return take(output, {\n        Failed: _json,\n        Successful: (_) => de_AssociationDescriptionList(_, context),\n    });\n};\nconst de_CreateAssociationResult = (output, context) => {\n    return take(output, {\n        AssociationDescription: (_) => de_AssociationDescription(_, context),\n    });\n};\nconst de_CreateDocumentResult = (output, context) => {\n    return take(output, {\n        DocumentDescription: (_) => de_DocumentDescription(_, context),\n    });\n};\nconst de_DescribeActivationsResult = (output, context) => {\n    return take(output, {\n        ActivationList: (_) => de_ActivationList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_DescribeAssociationExecutionsResult = (output, context) => {\n    return take(output, {\n        AssociationExecutions: (_) => de_AssociationExecutionsList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_DescribeAssociationExecutionTargetsResult = (output, context) => {\n    return take(output, {\n        AssociationExecutionTargets: (_) => de_AssociationExecutionTargetsList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_DescribeAssociationResult = (output, context) => {\n    return take(output, {\n        AssociationDescription: (_) => de_AssociationDescription(_, context),\n    });\n};\nconst de_DescribeAutomationExecutionsResult = (output, context) => {\n    return take(output, {\n        AutomationExecutionMetadataList: (_) => de_AutomationExecutionMetadataList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_DescribeAutomationStepExecutionsResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        StepExecutions: (_) => de_StepExecutionList(_, context),\n    });\n};\nconst de_DescribeAvailablePatchesResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        Patches: (_) => de_PatchList(_, context),\n    });\n};\nconst de_DescribeDocumentResult = (output, context) => {\n    return take(output, {\n        Document: (_) => de_DocumentDescription(_, context),\n    });\n};\nconst de_DescribeEffectivePatchesForPatchBaselineResult = (output, context) => {\n    return take(output, {\n        EffectivePatches: (_) => de_EffectivePatchList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_DescribeInstanceAssociationsStatusResult = (output, context) => {\n    return take(output, {\n        InstanceAssociationStatusInfos: (_) => de_InstanceAssociationStatusInfos(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_DescribeInstanceInformationResult = (output, context) => {\n    return take(output, {\n        InstanceInformationList: (_) => de_InstanceInformationList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_DescribeInstancePatchesResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        Patches: (_) => de_PatchComplianceDataList(_, context),\n    });\n};\nconst de_DescribeInstancePatchStatesForPatchGroupResult = (output, context) => {\n    return take(output, {\n        InstancePatchStates: (_) => de_InstancePatchStatesList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_DescribeInstancePatchStatesResult = (output, context) => {\n    return take(output, {\n        InstancePatchStates: (_) => de_InstancePatchStateList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_DescribeInventoryDeletionsResult = (output, context) => {\n    return take(output, {\n        InventoryDeletions: (_) => de_InventoryDeletionsList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_DescribeMaintenanceWindowExecutionsResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        WindowExecutions: (_) => de_MaintenanceWindowExecutionList(_, context),\n    });\n};\nconst de_DescribeMaintenanceWindowExecutionTaskInvocationsResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        WindowExecutionTaskInvocationIdentities: (_) => de_MaintenanceWindowExecutionTaskInvocationIdentityList(_, context),\n    });\n};\nconst de_DescribeMaintenanceWindowExecutionTasksResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        WindowExecutionTaskIdentities: (_) => de_MaintenanceWindowExecutionTaskIdentityList(_, context),\n    });\n};\nconst de_DescribeOpsItemsResponse = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        OpsItemSummaries: (_) => de_OpsItemSummaries(_, context),\n    });\n};\nconst de_DescribeParametersResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        Parameters: (_) => de_ParameterMetadataList(_, context),\n    });\n};\nconst de_DescribeSessionsResponse = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        Sessions: (_) => de_SessionList(_, context),\n    });\n};\nconst de_DocumentDescription = (output, context) => {\n    return take(output, {\n        ApprovedVersion: __expectString,\n        AttachmentsInformation: _json,\n        Author: __expectString,\n        Category: _json,\n        CategoryEnum: _json,\n        CreatedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DefaultVersion: __expectString,\n        Description: __expectString,\n        DisplayName: __expectString,\n        DocumentFormat: __expectString,\n        DocumentType: __expectString,\n        DocumentVersion: __expectString,\n        Hash: __expectString,\n        HashType: __expectString,\n        LatestVersion: __expectString,\n        Name: __expectString,\n        Owner: __expectString,\n        Parameters: _json,\n        PendingReviewVersion: __expectString,\n        PlatformTypes: _json,\n        Requires: _json,\n        ReviewInformation: (_) => de_ReviewInformationList(_, context),\n        ReviewStatus: __expectString,\n        SchemaVersion: __expectString,\n        Sha1: __expectString,\n        Status: __expectString,\n        StatusInformation: __expectString,\n        Tags: _json,\n        TargetType: __expectString,\n        VersionName: __expectString,\n    });\n};\nconst de_DocumentIdentifier = (output, context) => {\n    return take(output, {\n        Author: __expectString,\n        CreatedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DisplayName: __expectString,\n        DocumentFormat: __expectString,\n        DocumentType: __expectString,\n        DocumentVersion: __expectString,\n        Name: __expectString,\n        Owner: __expectString,\n        PlatformTypes: _json,\n        Requires: _json,\n        ReviewStatus: __expectString,\n        SchemaVersion: __expectString,\n        Tags: _json,\n        TargetType: __expectString,\n        VersionName: __expectString,\n    });\n};\nconst de_DocumentIdentifierList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DocumentIdentifier(entry, context);\n    });\n    return retVal;\n};\nconst de_DocumentMetadataResponseInfo = (output, context) => {\n    return take(output, {\n        ReviewerResponse: (_) => de_DocumentReviewerResponseList(_, context),\n    });\n};\nconst de_DocumentReviewerResponseList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DocumentReviewerResponseSource(entry, context);\n    });\n    return retVal;\n};\nconst de_DocumentReviewerResponseSource = (output, context) => {\n    return take(output, {\n        Comment: _json,\n        CreateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ReviewStatus: __expectString,\n        Reviewer: __expectString,\n        UpdatedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n    });\n};\nconst de_DocumentVersionInfo = (output, context) => {\n    return take(output, {\n        CreatedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DisplayName: __expectString,\n        DocumentFormat: __expectString,\n        DocumentVersion: __expectString,\n        IsDefaultVersion: __expectBoolean,\n        Name: __expectString,\n        ReviewStatus: __expectString,\n        Status: __expectString,\n        StatusInformation: __expectString,\n        VersionName: __expectString,\n    });\n};\nconst de_DocumentVersionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DocumentVersionInfo(entry, context);\n    });\n    return retVal;\n};\nconst de_EffectivePatch = (output, context) => {\n    return take(output, {\n        Patch: (_) => de_Patch(_, context),\n        PatchStatus: (_) => de_PatchStatus(_, context),\n    });\n};\nconst de_EffectivePatchList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_EffectivePatch(entry, context);\n    });\n    return retVal;\n};\nconst de_GetAutomationExecutionResult = (output, context) => {\n    return take(output, {\n        AutomationExecution: (_) => de_AutomationExecution(_, context),\n    });\n};\nconst de_GetDocumentResult = (output, context) => {\n    return take(output, {\n        AttachmentsContent: _json,\n        Content: __expectString,\n        CreatedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DisplayName: __expectString,\n        DocumentFormat: __expectString,\n        DocumentType: __expectString,\n        DocumentVersion: __expectString,\n        Name: __expectString,\n        Requires: _json,\n        ReviewStatus: __expectString,\n        Status: __expectString,\n        StatusInformation: __expectString,\n        VersionName: __expectString,\n    });\n};\nconst de_GetMaintenanceWindowExecutionResult = (output, context) => {\n    return take(output, {\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Status: __expectString,\n        StatusDetails: __expectString,\n        TaskIds: _json,\n        WindowExecutionId: __expectString,\n    });\n};\nconst de_GetMaintenanceWindowExecutionTaskInvocationResult = (output, context) => {\n    return take(output, {\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ExecutionId: __expectString,\n        InvocationId: __expectString,\n        OwnerInformation: __expectString,\n        Parameters: __expectString,\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Status: __expectString,\n        StatusDetails: __expectString,\n        TaskExecutionId: __expectString,\n        TaskType: __expectString,\n        WindowExecutionId: __expectString,\n        WindowTargetId: __expectString,\n    });\n};\nconst de_GetMaintenanceWindowExecutionTaskResult = (output, context) => {\n    return take(output, {\n        AlarmConfiguration: _json,\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        MaxConcurrency: __expectString,\n        MaxErrors: __expectString,\n        Priority: __expectInt32,\n        ServiceRole: __expectString,\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Status: __expectString,\n        StatusDetails: __expectString,\n        TaskArn: __expectString,\n        TaskExecutionId: __expectString,\n        TaskParameters: _json,\n        TriggeredAlarms: _json,\n        Type: __expectString,\n        WindowExecutionId: __expectString,\n    });\n};\nconst de_GetMaintenanceWindowResult = (output, context) => {\n    return take(output, {\n        AllowUnassociatedTargets: __expectBoolean,\n        CreatedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Cutoff: __expectInt32,\n        Description: __expectString,\n        Duration: __expectInt32,\n        Enabled: __expectBoolean,\n        EndDate: __expectString,\n        ModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Name: __expectString,\n        NextExecutionTime: __expectString,\n        Schedule: __expectString,\n        ScheduleOffset: __expectInt32,\n        ScheduleTimezone: __expectString,\n        StartDate: __expectString,\n        WindowId: __expectString,\n    });\n};\nconst de_GetMaintenanceWindowTaskResult = (output, context) => {\n    return take(output, {\n        AlarmConfiguration: _json,\n        CutoffBehavior: __expectString,\n        Description: __expectString,\n        LoggingInfo: _json,\n        MaxConcurrency: __expectString,\n        MaxErrors: __expectString,\n        Name: __expectString,\n        Priority: __expectInt32,\n        ServiceRoleArn: __expectString,\n        Targets: _json,\n        TaskArn: __expectString,\n        TaskInvocationParameters: (_) => de_MaintenanceWindowTaskInvocationParameters(_, context),\n        TaskParameters: _json,\n        TaskType: __expectString,\n        WindowId: __expectString,\n        WindowTaskId: __expectString,\n    });\n};\nconst de_GetOpsItemResponse = (output, context) => {\n    return take(output, {\n        OpsItem: (_) => de_OpsItem(_, context),\n    });\n};\nconst de_GetParameterHistoryResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        Parameters: (_) => de_ParameterHistoryList(_, context),\n    });\n};\nconst de_GetParameterResult = (output, context) => {\n    return take(output, {\n        Parameter: (_) => de_Parameter(_, context),\n    });\n};\nconst de_GetParametersByPathResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        Parameters: (_) => de_ParameterList(_, context),\n    });\n};\nconst de_GetParametersResult = (output, context) => {\n    return take(output, {\n        InvalidParameters: _json,\n        Parameters: (_) => de_ParameterList(_, context),\n    });\n};\nconst de_GetPatchBaselineResult = (output, context) => {\n    return take(output, {\n        ApprovalRules: _json,\n        ApprovedPatches: _json,\n        ApprovedPatchesComplianceLevel: __expectString,\n        ApprovedPatchesEnableNonSecurity: __expectBoolean,\n        BaselineId: __expectString,\n        CreatedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Description: __expectString,\n        GlobalFilters: _json,\n        ModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Name: __expectString,\n        OperatingSystem: __expectString,\n        PatchGroups: _json,\n        RejectedPatches: _json,\n        RejectedPatchesAction: __expectString,\n        Sources: _json,\n    });\n};\nconst de_GetServiceSettingResult = (output, context) => {\n    return take(output, {\n        ServiceSetting: (_) => de_ServiceSetting(_, context),\n    });\n};\nconst de_InstanceAssociationStatusInfo = (output, context) => {\n    return take(output, {\n        AssociationId: __expectString,\n        AssociationName: __expectString,\n        AssociationVersion: __expectString,\n        DetailedStatus: __expectString,\n        DocumentVersion: __expectString,\n        ErrorCode: __expectString,\n        ExecutionDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ExecutionSummary: __expectString,\n        InstanceId: __expectString,\n        Name: __expectString,\n        OutputUrl: _json,\n        Status: __expectString,\n    });\n};\nconst de_InstanceAssociationStatusInfos = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InstanceAssociationStatusInfo(entry, context);\n    });\n    return retVal;\n};\nconst de_InstanceInformation = (output, context) => {\n    return take(output, {\n        ActivationId: __expectString,\n        AgentVersion: __expectString,\n        AssociationOverview: _json,\n        AssociationStatus: __expectString,\n        ComputerName: __expectString,\n        IPAddress: __expectString,\n        IamRole: __expectString,\n        InstanceId: __expectString,\n        IsLatestVersion: __expectBoolean,\n        LastAssociationExecutionDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastPingDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastSuccessfulAssociationExecutionDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Name: __expectString,\n        PingStatus: __expectString,\n        PlatformName: __expectString,\n        PlatformType: __expectString,\n        PlatformVersion: __expectString,\n        RegistrationDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ResourceType: __expectString,\n        SourceId: __expectString,\n        SourceType: __expectString,\n    });\n};\nconst de_InstanceInformationList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InstanceInformation(entry, context);\n    });\n    return retVal;\n};\nconst de_InstancePatchState = (output, context) => {\n    return take(output, {\n        BaselineId: __expectString,\n        CriticalNonCompliantCount: __expectInt32,\n        FailedCount: __expectInt32,\n        InstallOverrideList: __expectString,\n        InstalledCount: __expectInt32,\n        InstalledOtherCount: __expectInt32,\n        InstalledPendingRebootCount: __expectInt32,\n        InstalledRejectedCount: __expectInt32,\n        InstanceId: __expectString,\n        LastNoRebootInstallOperationTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        MissingCount: __expectInt32,\n        NotApplicableCount: __expectInt32,\n        Operation: __expectString,\n        OperationEndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        OperationStartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        OtherNonCompliantCount: __expectInt32,\n        OwnerInformation: __expectString,\n        PatchGroup: __expectString,\n        RebootOption: __expectString,\n        SecurityNonCompliantCount: __expectInt32,\n        SnapshotId: __expectString,\n        UnreportedNotApplicableCount: __expectInt32,\n    });\n};\nconst de_InstancePatchStateList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InstancePatchState(entry, context);\n    });\n    return retVal;\n};\nconst de_InstancePatchStatesList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InstancePatchState(entry, context);\n    });\n    return retVal;\n};\nconst de_InventoryDeletionsList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InventoryDeletionStatusItem(entry, context);\n    });\n    return retVal;\n};\nconst de_InventoryDeletionStatusItem = (output, context) => {\n    return take(output, {\n        DeletionId: __expectString,\n        DeletionStartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DeletionSummary: _json,\n        LastStatus: __expectString,\n        LastStatusMessage: __expectString,\n        LastStatusUpdateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TypeName: __expectString,\n    });\n};\nconst de_ListAssociationsResult = (output, context) => {\n    return take(output, {\n        Associations: (_) => de_AssociationList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_ListAssociationVersionsResult = (output, context) => {\n    return take(output, {\n        AssociationVersions: (_) => de_AssociationVersionList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_ListCommandInvocationsResult = (output, context) => {\n    return take(output, {\n        CommandInvocations: (_) => de_CommandInvocationList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_ListCommandsResult = (output, context) => {\n    return take(output, {\n        Commands: (_) => de_CommandList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_ListComplianceItemsResult = (output, context) => {\n    return take(output, {\n        ComplianceItems: (_) => de_ComplianceItemList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_ListDocumentMetadataHistoryResponse = (output, context) => {\n    return take(output, {\n        Author: __expectString,\n        DocumentVersion: __expectString,\n        Metadata: (_) => de_DocumentMetadataResponseInfo(_, context),\n        Name: __expectString,\n        NextToken: __expectString,\n    });\n};\nconst de_ListDocumentsResult = (output, context) => {\n    return take(output, {\n        DocumentIdentifiers: (_) => de_DocumentIdentifierList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_ListDocumentVersionsResult = (output, context) => {\n    return take(output, {\n        DocumentVersions: (_) => de_DocumentVersionList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_ListOpsItemEventsResponse = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        Summaries: (_) => de_OpsItemEventSummaries(_, context),\n    });\n};\nconst de_ListOpsItemRelatedItemsResponse = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        Summaries: (_) => de_OpsItemRelatedItemSummaries(_, context),\n    });\n};\nconst de_ListOpsMetadataResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        OpsMetadataList: (_) => de_OpsMetadataList(_, context),\n    });\n};\nconst de_ListResourceComplianceSummariesResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        ResourceComplianceSummaryItems: (_) => de_ResourceComplianceSummaryItemList(_, context),\n    });\n};\nconst de_ListResourceDataSyncResult = (output, context) => {\n    return take(output, {\n        NextToken: __expectString,\n        ResourceDataSyncItems: (_) => de_ResourceDataSyncItemList(_, context),\n    });\n};\nconst de_MaintenanceWindowExecution = (output, context) => {\n    return take(output, {\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Status: __expectString,\n        StatusDetails: __expectString,\n        WindowExecutionId: __expectString,\n        WindowId: __expectString,\n    });\n};\nconst de_MaintenanceWindowExecutionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MaintenanceWindowExecution(entry, context);\n    });\n    return retVal;\n};\nconst de_MaintenanceWindowExecutionTaskIdentity = (output, context) => {\n    return take(output, {\n        AlarmConfiguration: _json,\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Status: __expectString,\n        StatusDetails: __expectString,\n        TaskArn: __expectString,\n        TaskExecutionId: __expectString,\n        TaskType: __expectString,\n        TriggeredAlarms: _json,\n        WindowExecutionId: __expectString,\n    });\n};\nconst de_MaintenanceWindowExecutionTaskIdentityList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MaintenanceWindowExecutionTaskIdentity(entry, context);\n    });\n    return retVal;\n};\nconst de_MaintenanceWindowExecutionTaskInvocationIdentity = (output, context) => {\n    return take(output, {\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ExecutionId: __expectString,\n        InvocationId: __expectString,\n        OwnerInformation: __expectString,\n        Parameters: __expectString,\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Status: __expectString,\n        StatusDetails: __expectString,\n        TaskExecutionId: __expectString,\n        TaskType: __expectString,\n        WindowExecutionId: __expectString,\n        WindowTargetId: __expectString,\n    });\n};\nconst de_MaintenanceWindowExecutionTaskInvocationIdentityList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MaintenanceWindowExecutionTaskInvocationIdentity(entry, context);\n    });\n    return retVal;\n};\nconst de_MaintenanceWindowLambdaParameters = (output, context) => {\n    return take(output, {\n        ClientContext: __expectString,\n        Payload: context.base64Decoder,\n        Qualifier: __expectString,\n    });\n};\nconst de_MaintenanceWindowTaskInvocationParameters = (output, context) => {\n    return take(output, {\n        Automation: _json,\n        Lambda: (_) => de_MaintenanceWindowLambdaParameters(_, context),\n        RunCommand: _json,\n        StepFunctions: _json,\n    });\n};\nconst de_OpsItem = (output, context) => {\n    return take(output, {\n        ActualEndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ActualStartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Category: __expectString,\n        CreatedBy: __expectString,\n        CreatedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Description: __expectString,\n        LastModifiedBy: __expectString,\n        LastModifiedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Notifications: _json,\n        OperationalData: _json,\n        OpsItemArn: __expectString,\n        OpsItemId: __expectString,\n        OpsItemType: __expectString,\n        PlannedEndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        PlannedStartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Priority: __expectInt32,\n        RelatedOpsItems: _json,\n        Severity: __expectString,\n        Source: __expectString,\n        Status: __expectString,\n        Title: __expectString,\n        Version: __expectString,\n    });\n};\nconst de_OpsItemEventSummaries = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OpsItemEventSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_OpsItemEventSummary = (output, context) => {\n    return take(output, {\n        CreatedBy: _json,\n        CreatedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Detail: __expectString,\n        DetailType: __expectString,\n        EventId: __expectString,\n        OpsItemId: __expectString,\n        Source: __expectString,\n    });\n};\nconst de_OpsItemRelatedItemSummaries = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OpsItemRelatedItemSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_OpsItemRelatedItemSummary = (output, context) => {\n    return take(output, {\n        AssociationId: __expectString,\n        AssociationType: __expectString,\n        CreatedBy: _json,\n        CreatedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastModifiedBy: _json,\n        LastModifiedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        OpsItemId: __expectString,\n        ResourceType: __expectString,\n        ResourceUri: __expectString,\n    });\n};\nconst de_OpsItemSummaries = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OpsItemSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_OpsItemSummary = (output, context) => {\n    return take(output, {\n        ActualEndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ActualStartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Category: __expectString,\n        CreatedBy: __expectString,\n        CreatedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastModifiedBy: __expectString,\n        LastModifiedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        OperationalData: _json,\n        OpsItemId: __expectString,\n        OpsItemType: __expectString,\n        PlannedEndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        PlannedStartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Priority: __expectInt32,\n        Severity: __expectString,\n        Source: __expectString,\n        Status: __expectString,\n        Title: __expectString,\n    });\n};\nconst de_OpsMetadata = (output, context) => {\n    return take(output, {\n        CreationDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastModifiedUser: __expectString,\n        OpsMetadataArn: __expectString,\n        ResourceId: __expectString,\n    });\n};\nconst de_OpsMetadataList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OpsMetadata(entry, context);\n    });\n    return retVal;\n};\nconst de_Parameter = (output, context) => {\n    return take(output, {\n        ARN: __expectString,\n        DataType: __expectString,\n        LastModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Name: __expectString,\n        Selector: __expectString,\n        SourceResult: __expectString,\n        Type: __expectString,\n        Value: __expectString,\n        Version: __expectLong,\n    });\n};\nconst de_ParameterHistory = (output, context) => {\n    return take(output, {\n        AllowedPattern: __expectString,\n        DataType: __expectString,\n        Description: __expectString,\n        KeyId: __expectString,\n        Labels: _json,\n        LastModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastModifiedUser: __expectString,\n        Name: __expectString,\n        Policies: _json,\n        Tier: __expectString,\n        Type: __expectString,\n        Value: __expectString,\n        Version: __expectLong,\n    });\n};\nconst de_ParameterHistoryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ParameterHistory(entry, context);\n    });\n    return retVal;\n};\nconst de_ParameterList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Parameter(entry, context);\n    });\n    return retVal;\n};\nconst de_ParameterMetadata = (output, context) => {\n    return take(output, {\n        AllowedPattern: __expectString,\n        DataType: __expectString,\n        Description: __expectString,\n        KeyId: __expectString,\n        LastModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastModifiedUser: __expectString,\n        Name: __expectString,\n        Policies: _json,\n        Tier: __expectString,\n        Type: __expectString,\n        Version: __expectLong,\n    });\n};\nconst de_ParameterMetadataList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ParameterMetadata(entry, context);\n    });\n    return retVal;\n};\nconst de_Patch = (output, context) => {\n    return take(output, {\n        AdvisoryIds: _json,\n        Arch: __expectString,\n        BugzillaIds: _json,\n        CVEIds: _json,\n        Classification: __expectString,\n        ContentUrl: __expectString,\n        Description: __expectString,\n        Epoch: __expectInt32,\n        Id: __expectString,\n        KbNumber: __expectString,\n        Language: __expectString,\n        MsrcNumber: __expectString,\n        MsrcSeverity: __expectString,\n        Name: __expectString,\n        Product: __expectString,\n        ProductFamily: __expectString,\n        Release: __expectString,\n        ReleaseDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Repository: __expectString,\n        Severity: __expectString,\n        Title: __expectString,\n        Vendor: __expectString,\n        Version: __expectString,\n    });\n};\nconst de_PatchComplianceData = (output, context) => {\n    return take(output, {\n        CVEIds: __expectString,\n        Classification: __expectString,\n        InstalledTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        KBId: __expectString,\n        Severity: __expectString,\n        State: __expectString,\n        Title: __expectString,\n    });\n};\nconst de_PatchComplianceDataList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_PatchComplianceData(entry, context);\n    });\n    return retVal;\n};\nconst de_PatchList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Patch(entry, context);\n    });\n    return retVal;\n};\nconst de_PatchStatus = (output, context) => {\n    return take(output, {\n        ApprovalDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ComplianceLevel: __expectString,\n        DeploymentStatus: __expectString,\n    });\n};\nconst de_ResetServiceSettingResult = (output, context) => {\n    return take(output, {\n        ServiceSetting: (_) => de_ServiceSetting(_, context),\n    });\n};\nconst de_ResourceComplianceSummaryItem = (output, context) => {\n    return take(output, {\n        ComplianceType: __expectString,\n        CompliantSummary: _json,\n        ExecutionSummary: (_) => de_ComplianceExecutionSummary(_, context),\n        NonCompliantSummary: _json,\n        OverallSeverity: __expectString,\n        ResourceId: __expectString,\n        ResourceType: __expectString,\n        Status: __expectString,\n    });\n};\nconst de_ResourceComplianceSummaryItemList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ResourceComplianceSummaryItem(entry, context);\n    });\n    return retVal;\n};\nconst de_ResourceDataSyncItem = (output, context) => {\n    return take(output, {\n        LastStatus: __expectString,\n        LastSuccessfulSyncTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastSyncStatusMessage: __expectString,\n        LastSyncTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        S3Destination: _json,\n        SyncCreatedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        SyncLastModifiedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        SyncName: __expectString,\n        SyncSource: _json,\n        SyncType: __expectString,\n    });\n};\nconst de_ResourceDataSyncItemList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ResourceDataSyncItem(entry, context);\n    });\n    return retVal;\n};\nconst de_ReviewInformation = (output, context) => {\n    return take(output, {\n        ReviewedTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Reviewer: __expectString,\n        Status: __expectString,\n    });\n};\nconst de_ReviewInformationList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReviewInformation(entry, context);\n    });\n    return retVal;\n};\nconst de_SendCommandResult = (output, context) => {\n    return take(output, {\n        Command: (_) => de_Command(_, context),\n    });\n};\nconst de_ServiceSetting = (output, context) => {\n    return take(output, {\n        ARN: __expectString,\n        LastModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastModifiedUser: __expectString,\n        SettingId: __expectString,\n        SettingValue: __expectString,\n        Status: __expectString,\n    });\n};\nconst de_Session = (output, context) => {\n    return take(output, {\n        Details: __expectString,\n        DocumentName: __expectString,\n        EndDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        MaxSessionDuration: __expectString,\n        OutputUrl: _json,\n        Owner: __expectString,\n        Reason: __expectString,\n        SessionId: __expectString,\n        StartDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Status: __expectString,\n        Target: __expectString,\n    });\n};\nconst de_SessionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Session(entry, context);\n    });\n    return retVal;\n};\nconst de_StepExecution = (output, context) => {\n    return take(output, {\n        Action: __expectString,\n        ExecutionEndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ExecutionStartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        FailureDetails: _json,\n        FailureMessage: __expectString,\n        Inputs: _json,\n        IsCritical: __expectBoolean,\n        IsEnd: __expectBoolean,\n        MaxAttempts: __expectInt32,\n        NextStep: __expectString,\n        OnFailure: __expectString,\n        Outputs: _json,\n        OverriddenParameters: _json,\n        Response: __expectString,\n        ResponseCode: __expectString,\n        StepExecutionId: __expectString,\n        StepName: __expectString,\n        StepStatus: __expectString,\n        TargetLocation: _json,\n        Targets: _json,\n        TimeoutSeconds: __expectLong,\n        TriggeredAlarms: _json,\n        ValidNextSteps: _json,\n    });\n};\nconst de_StepExecutionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_StepExecution(entry, context);\n    });\n    return retVal;\n};\nconst de_UpdateAssociationResult = (output, context) => {\n    return take(output, {\n        AssociationDescription: (_) => de_AssociationDescription(_, context),\n    });\n};\nconst de_UpdateAssociationStatusResult = (output, context) => {\n    return take(output, {\n        AssociationDescription: (_) => de_AssociationDescription(_, context),\n    });\n};\nconst de_UpdateDocumentResult = (output, context) => {\n    return take(output, {\n        DocumentDescription: (_) => de_DocumentDescription(_, context),\n    });\n};\nconst de_UpdateMaintenanceWindowTaskResult = (output, context) => {\n    return take(output, {\n        AlarmConfiguration: _json,\n        CutoffBehavior: __expectString,\n        Description: __expectString,\n        LoggingInfo: _json,\n        MaxConcurrency: __expectString,\n        MaxErrors: __expectString,\n        Name: __expectString,\n        Priority: __expectInt32,\n        ServiceRoleArn: __expectString,\n        Targets: _json,\n        TaskArn: __expectString,\n        TaskInvocationParameters: (_) => de_MaintenanceWindowTaskInvocationParameters(_, context),\n        TaskParameters: _json,\n        WindowId: __expectString,\n        WindowTaskId: __expectString,\n    });\n};\nconst de_UpdatePatchBaselineResult = (output, context) => {\n    return take(output, {\n        ApprovalRules: _json,\n        ApprovedPatches: _json,\n        ApprovedPatchesComplianceLevel: __expectString,\n        ApprovedPatchesEnableNonSecurity: __expectBoolean,\n        BaselineId: __expectString,\n        CreatedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Description: __expectString,\n        GlobalFilters: _json,\n        ModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Name: __expectString,\n        OperatingSystem: __expectString,\n        RejectedPatches: _json,\n        RejectedPatchesAction: __expectString,\n        Sources: _json,\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": `AmazonSSM.${operation}`,\n    };\n}\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n", "import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { GetParametersResultFilterSensitiveLog } from \"../models/models_1\";\nimport { de_GetParametersCommand, se_GetParametersCommand } from \"../protocols/Aws_json1_1\";\nexport class GetParametersCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, GetParametersCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSMClient\";\n        const commandName = \"GetParametersCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: GetParametersResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_GetParametersCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_GetParametersCommand(output, context);\n    }\n}\n", "export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n", "import { booleanSelector, SelectorType } from \"@aws-sdk/util-config-provider\";\nexport const ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexport const CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexport const DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexport const NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n", "import { booleanSelector, SelectorType } from \"@aws-sdk/util-config-provider\";\nexport const ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexport const CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexport const DEFAULT_USE_FIPS_ENDPOINT = false;\nexport const NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n", "export const REGION_ENV_NAME = \"AWS_REGION\";\nexport const REGION_INI_NAME = \"region\";\nexport const NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexport const NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n", "export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n", "import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n", "import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\n", "import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n", "import { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n", "export const loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n", "import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n", "export var RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nexport const DEFAULT_MAX_ATTEMPTS = 3;\nexport const DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n", "export const CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexport const THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexport const TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexport const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\n", "import { CLOCK_SKEW_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error) => TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n", "import { isThrottlingError } from \"@aws-sdk/service-error-classification\";\nexport class DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\n", "export const DEFAULT_RETRY_DELAY_BASE = 100;\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\nexport const INITIAL_RETRY_TOKENS = 500;\nexport const RETRY_COST = 5;\nexport const TIMEOUT_RETRY_COST = 10;\nexport const NO_RETRY_INCREMENT = 1;\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n", "import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n", "import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY, NO_RETRY_INCREMENT, RETRY_COST, THROTTLING_RETRY_DELAY_BASE, TIMEOUT_RETRY_COST, } from \"./constants\";\nimport { getDefaultRetryBackoffStrategy } from \"./defaultRetryBackoffStrategy\";\nexport const getDefaultRetryToken = (initialRetryTokens, initialRetryDelay, initialRetryCount, options) => {\n    const MAX_CAPACITY = initialRetryTokens;\n    const retryCost = options?.retryCost ?? RETRY_COST;\n    const timeoutRetryCost = options?.timeoutRetryCost ?? TIMEOUT_RETRY_COST;\n    const retryBackoffStrategy = options?.retryBackoffStrategy ?? getDefaultRetryBackoffStrategy();\n    let availableCapacity = initialRetryTokens;\n    let retryDelay = Math.min(MAXIMUM_RETRY_DELAY, initialRetryDelay);\n    let lastRetryCost = undefined;\n    let retryCount = initialRetryCount ?? 0;\n    const getCapacityAmount = (errorType) => (errorType === \"TRANSIENT\" ? timeoutRetryCost : retryCost);\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => retryDelay;\n    const getLastRetryCost = () => lastRetryCost;\n    const hasRetryTokens = (errorType) => getCapacityAmount(errorType) <= availableCapacity;\n    const getRetryTokenCount = (errorInfo) => {\n        const errorType = errorInfo.errorType;\n        if (!hasRetryTokens(errorType)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(errorType);\n        const delayBase = errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE;\n        retryBackoffStrategy.setDelayBase(delayBase);\n        const delayFromErrorType = retryBackoffStrategy.computeNextBackoffDelay(retryCount);\n        if (errorInfo.retryAfterHint) {\n            const delayFromRetryAfterHint = errorInfo.retryAfterHint.getTime() - Date.now();\n            retryDelay = Math.max(delayFromRetryAfterHint || 0, delayFromErrorType);\n        }\n        else {\n            retryDelay = delayFromErrorType;\n        }\n        retryCount++;\n        lastRetryCost = capacityAmount;\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (releaseAmount) => {\n        availableCapacity += releaseAmount ?? NO_RETRY_INCREMENT;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getLastRetryCost,\n        hasRetryTokens,\n        getRetryTokenCount,\n        releaseRetryTokens,\n    };\n};\n", "import { DEFAULT_MAX_ATTEMPTS, RETRY_MODES } from \"./config\";\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS } from \"./constants\";\nimport { getDefaultRetryToken } from \"./defaultRetryToken\";\nexport class StandardRetryStrategy {\n    constructor(maxAttempts) {\n        this.maxAttempts = maxAttempts;\n        this.mode = RETRY_MODES.STANDARD;\n        this.retryToken = getDefaultRetryToken(INITIAL_RETRY_TOKENS, DEFAULT_RETRY_DELAY_BASE);\n        this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return this.retryToken;\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(tokenToRenew, errorInfo, maxAttempts)) {\n            tokenToRenew.getRetryTokenCount(errorInfo);\n            return tokenToRenew;\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.retryToken.releaseRetryTokens(token.getLastRetryCost());\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount();\n        return (attempts < maxAttempts &&\n            tokenToRenew.hasRetryTokens(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n", "import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n", "export const asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n", "import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { AdaptiveRetryStrategy, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES, StandardRetryStrategy, } from \"@aws-sdk/util-retry\";\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport const resolveRetryConfig = (input) => {\n    const { retryStrategy } = input;\n    const maxAttempts = normalizeProvider(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider(input.retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: DEFAULT_RETRY_MODE,\n};\n", "import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@aws-sdk/service-error-classification\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@aws-sdk/util-retry\";\nimport { v4 } from \"uuid\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        if (HttpRequest.isInstance(request)) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (HttpRequest.isInstance(request)) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = asSdkError(e);\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n", "export class ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"ProviderError\";\n        Object.setPrototypeOf(this, ProviderError.prototype);\n    }\n    static from(error, tryNextLink = true) {\n        return Object.assign(new this(error.message, tryNextLink), error);\n    }\n}\n", "import { ProviderError } from \"./ProviderError\";\nexport class CredentialsProviderError extends ProviderError {\n    constructor(message, tryNextLink = true) {\n        super(message, tryNextLink);\n        this.tryNextLink = tryNextLink;\n        this.name = \"CredentialsProviderError\";\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\n", "import { ProviderError } from \"./ProviderError\";\nexport class TokenProviderError extends ProviderError {\n    constructor(message, tryNextLink = true) {\n        super(message, tryNextLink);\n        this.tryNextLink = tryNextLink;\n        this.name = \"TokenProviderError\";\n        Object.setPrototypeOf(this, TokenProviderError.prototype);\n    }\n}\n", "import { ProviderError } from \"./ProviderError\";\nexport function chain(...providers) {\n    return () => {\n        let promise = Promise.reject(new ProviderError(\"No providers in chain\"));\n        for (const provider of providers) {\n            promise = promise.catch((err) => {\n                if (err?.tryNextLink) {\n                    return provider();\n                }\n                throw err;\n            });\n        }\n        return promise;\n    };\n}\n", "export const fromStatic = (staticValue) => () => Promise.resolve(staticValue);\n", "export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n", "const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n", "export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n", "import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { Buffer } from \"buffer\";\nexport const fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return Buffer.from(input, offset, length);\n};\nexport const fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n};\n", "import { fromString } from \"@aws-sdk/util-buffer-from\";\nexport const fromUtf8 = (input) => {\n    const buf = fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\n", "import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n", "import { fromArrayBuffer } from \"@aws-sdk/util-buffer-from\";\nexport const toUtf8 = (input) => fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n", "export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n", "import { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(toUint8Array(data));\n    return hash.digest();\n};\n", "import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n", "export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n", "import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n", "import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n", "export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n", "export const cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n});\nexport const cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\n", "import { cloneRequest } from \"./cloneRequest\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n", "import { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n", "export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n", "import { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = encodeURIComponent(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n}\nconst formatDate = (now) => {\n    const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n", "import { memoize } from \"@aws-sdk/property-provider\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nexport const resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else if (input.regionInfoProvider) {\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: input.signingName || input.defaultSigningName,\n                signingRegion: await normalizeProvider(input.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            input.signingRegion = input.signingRegion || signingRegion;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexport const resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return memoize(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n", "export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n", "import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n", "import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n", "import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { getSkewCorrectedDate } from \"./utils/getSkewCorrectedDate\";\nimport { getUpdatedSystemClockOffset } from \"./utils/getUpdatedSystemClockOffset\";\nexport const awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const multiRegionOverride = authScheme?.name === \"sigv4a\" ? authScheme?.signingRegionSet?.join(\",\") : undefined;\n    const signer = await options.signer(authScheme);\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: getSkewCorrectedDate(options.systemClockOffset),\n            signingRegion: multiRegionOverride || context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nconst getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\nexport const awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nexport const getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n    },\n});\nexport const getSigV4AuthPlugin = getAwsAuthPlugin;\n", "export function resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\n", "{\n    \"partitions\": [{\n            \"id\": \"aws\",\n            \"outputs\": {\n                \"dnsSuffix\": \"amazonaws.com\",\n                \"dualStackDnsSuffix\": \"api.aws\",\n                \"name\": \"aws\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"af-south-1\": {\n                    \"description\": \"Africa (Cape Town)\"\n                },\n                \"ap-east-1\": {\n                    \"description\": \"Asia Pacific (Hong Kong)\"\n                },\n                \"ap-northeast-1\": {\n                    \"description\": \"Asia Pacific (Tokyo)\"\n                },\n                \"ap-northeast-2\": {\n                    \"description\": \"Asia Pacific (Seoul)\"\n                },\n                \"ap-northeast-3\": {\n                    \"description\": \"Asia Pacific (Osaka)\"\n                },\n                \"ap-south-1\": {\n                    \"description\": \"Asia Pacific (Mumbai)\"\n                },\n                \"ap-south-2\": {\n                    \"description\": \"Asia Pacific (Hyderabad)\"\n                },\n                \"ap-southeast-1\": {\n                    \"description\": \"Asia Pacific (Singapore)\"\n                },\n                \"ap-southeast-2\": {\n                    \"description\": \"Asia Pacific (Sydney)\"\n                },\n                \"ap-southeast-3\": {\n                    \"description\": \"Asia Pacific (Jakarta)\"\n                },\n                \"ap-southeast-4\": {\n                    \"description\": \"Asia Pacific (Melbourne)\"\n                },\n                \"aws-global\": {\n                    \"description\": \"AWS Standard global region\"\n                },\n                \"ca-central-1\": {\n                    \"description\": \"Canada (Central)\"\n                },\n                \"eu-central-1\": {\n                    \"description\": \"Europe (Frankfurt)\"\n                },\n                \"eu-central-2\": {\n                    \"description\": \"Europe (Zurich)\"\n                },\n                \"eu-north-1\": {\n                    \"description\": \"Europe (Stockholm)\"\n                },\n                \"eu-south-1\": {\n                    \"description\": \"Europe (Milan)\"\n                },\n                \"eu-south-2\": {\n                    \"description\": \"Europe (Spain)\"\n                },\n                \"eu-west-1\": {\n                    \"description\": \"Europe (Ireland)\"\n                },\n                \"eu-west-2\": {\n                    \"description\": \"Europe (London)\"\n                },\n                \"eu-west-3\": {\n                    \"description\": \"Europe (Paris)\"\n                },\n                \"me-central-1\": {\n                    \"description\": \"Middle East (UAE)\"\n                },\n                \"me-south-1\": {\n                    \"description\": \"Middle East (Bahrain)\"\n                },\n                \"sa-east-1\": {\n                    \"description\": \"South America (Sao Paulo)\"\n                },\n                \"us-east-1\": {\n                    \"description\": \"US East (N. Virginia)\"\n                },\n                \"us-east-2\": {\n                    \"description\": \"US East (Ohio)\"\n                },\n                \"us-west-1\": {\n                    \"description\": \"US West (N. California)\"\n                },\n                \"us-west-2\": {\n                    \"description\": \"US West (Oregon)\"\n                }\n            }\n        }, {\n            \"id\": \"aws-cn\",\n            \"outputs\": {\n                \"dnsSuffix\": \"amazonaws.com.cn\",\n                \"dualStackDnsSuffix\": \"api.amazonwebservices.com.cn\",\n                \"name\": \"aws-cn\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"aws-cn-global\": {\n                    \"description\": \"AWS China global region\"\n                },\n                \"cn-north-1\": {\n                    \"description\": \"China (Beijing)\"\n                },\n                \"cn-northwest-1\": {\n                    \"description\": \"China (Ningxia)\"\n                }\n            }\n        }, {\n            \"id\": \"aws-us-gov\",\n            \"outputs\": {\n                \"dnsSuffix\": \"amazonaws.com\",\n                \"dualStackDnsSuffix\": \"api.aws\",\n                \"name\": \"aws-us-gov\",\n                \"supportsDualStack\": true,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"aws-us-gov-global\": {\n                    \"description\": \"AWS GovCloud (US) global region\"\n                },\n                \"us-gov-east-1\": {\n                    \"description\": \"AWS GovCloud (US-East)\"\n                },\n                \"us-gov-west-1\": {\n                    \"description\": \"AWS GovCloud (US-West)\"\n                }\n            }\n        }, {\n            \"id\": \"aws-iso\",\n            \"outputs\": {\n                \"dnsSuffix\": \"c2s.ic.gov\",\n                \"dualStackDnsSuffix\": \"c2s.ic.gov\",\n                \"name\": \"aws-iso\",\n                \"supportsDualStack\": false,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"aws-iso-global\": {\n                    \"description\": \"AWS ISO (US) global region\"\n                },\n                \"us-iso-east-1\": {\n                    \"description\": \"US ISO East\"\n                },\n                \"us-iso-west-1\": {\n                    \"description\": \"US ISO WEST\"\n                }\n            }\n        }, {\n            \"id\": \"aws-iso-b\",\n            \"outputs\": {\n                \"dnsSuffix\": \"sc2s.sgov.gov\",\n                \"dualStackDnsSuffix\": \"sc2s.sgov.gov\",\n                \"name\": \"aws-iso-b\",\n                \"supportsDualStack\": false,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {\n                \"aws-iso-b-global\": {\n                    \"description\": \"AWS ISOB (US) global region\"\n                },\n                \"us-isob-east-1\": {\n                    \"description\": \"US ISOB East (Ohio)\"\n                }\n            }\n        }, {\n            \"id\": \"aws-iso-e\",\n            \"outputs\": {\n                \"dnsSuffix\": \"cloud.adc-e.uk\",\n                \"dualStackDnsSuffix\": \"cloud.adc-e.uk\",\n                \"name\": \"aws-iso-e\",\n                \"supportsDualStack\": false,\n                \"supportsFIPS\": true\n            },\n            \"regionRegex\": \"^eu\\\\-isoe\\\\-\\\\w+\\\\-\\\\d+$\",\n            \"regions\": {}\n        }],\n    \"version\": \"1.1\"\n}\n", "import partitionsInfo from \"./partitions.json\";\nlet selectedPartitionsInfo = partitionsInfo;\nlet selectedUserAgentPrefix = \"\";\nexport const partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\nexport const setPartitionInfo = (partitionsInfo, userAgentPrefix = \"\") => {\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n};\nexport const useDefaultPartitionInfo = () => {\n    setPartitionInfo(partitionsInfo, \"\");\n};\nexport const getUserAgentPrefix = () => selectedUserAgentPrefix;\n", "export const debugId = \"endpoints\";\n", "export function toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n", "export class EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n", "export * as aws from \"./aws\";\nexport * from \"./booleanEquals\";\nexport * from \"./getAttr\";\nexport * from \"./isSet\";\nexport * from \"./isValidHostLabel\";\nexport * from \"./not\";\nexport * from \"./parseURL\";\nexport * from \"./stringEquals\";\nexport * from \"./substring\";\nexport * from \"./uriEncode\";\n", "export * from \"./isVirtualHostableS3Bucket\";\nexport * from \"./parseArn\";\nexport * from \"./partition\";\n", "const IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nexport const isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n", "const VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nexport const isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n", "import { isIpAddress } from \"../isIpAddress\";\nimport { isValidHostLabel } from \"../isValidHostLabel\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n", "export const parseArn = (value) => {\n    const segments = value.split(\":\");\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourceId] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourceId[0] === \"\")\n        return null;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId: resourceId[0].includes(\"/\") ? resourceId[0].split(\"/\") : resourceId,\n    };\n};\n", "export const booleanEquals = (value1, value2) => value1 === value2;\n", "import { EndpointError } from \"../types\";\nexport const getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n", "import { EndpointError } from \"../types\";\nimport { getAttrPathList } from \"./getAttrPathList\";\nexport const getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n", "export const isSet = (value) => value != null;\n", "export const not = (value) => !value;\n", "export var HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation || (HttpAuthLocation = {}));\n", "export var HostAddressType;\n(function (HostAddressType) {\n    HostAddressType[\"AAAA\"] = \"AAAA\";\n    HostAddressType[\"A\"] = \"A\";\n})(HostAddressType || (HostAddressType = {}));\n", "export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n", "export var RequestHandlerProtocol;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));\n", "import { EndpointURLScheme } from \"@aws-sdk/types\";\nimport { isIpAddress } from \"./isIpAddress\";\nconst DEFAULT_PORTS = {\n    [EndpointURLScheme.HTTP]: 80,\n    [EndpointURLScheme.HTTPS]: 443,\n};\nexport const parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n", "export const stringEquals = (value1, value2) => value1 === value2;\n", "export const substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n", "export const uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n", "import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n", "export const getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n", "import { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getReferenceValue } from \"./getReferenceValue\";\nexport const evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n", "import * as lib from \"../lib\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    return fn.split(\".\").reduce((acc, key) => acc[key], lib)(...evaluatedArgs);\n};\n", "import { debugId, toDebugString } from \"../debug\";\nimport { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nexport const evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(debugId, `evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n", "import { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport const evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(debugId, `assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n", "import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n", "import { EndpointError } from \"../types\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nexport const getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n", "import { getEndpointProperty } from \"./getEndpointProperty\";\nexport const getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n", "import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n", "import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(debugId, `Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n", "import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n", "import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n", "import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n", "import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(debugId, `Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    if (options.endpointParams?.Endpoint) {\n        try {\n            const givenEndpoint = new URL(options.endpointParams.Endpoint);\n            const { protocol, port } = givenEndpoint;\n            endpoint.url.protocol = protocol;\n            endpoint.url.port = port;\n        }\n        catch (e) {\n        }\n    }\n    options.logger?.debug?.(debugId, `Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n", "export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n", "import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { getUserAgentPrefix } from \"@aws-sdk/util-endpoints\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const prefix = getUserAgentPrefix();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = ([name, version]) => {\n    const prefixSeparatorIndex = name.indexOf(\"/\");\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .map((item) => item?.replace(UA_ESCAPE_REGEX, \"_\"))\n        .join(\"/\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n", "export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"ssm\",\n    };\n};\n", "{\n  \"name\": \"@aws-sdk/client-ssm\",\n  \"description\": \"AWS SDK for JavaScript Ssm Client for Node.js, Browser and React Native\",\n  \"version\": \"3.329.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"tsc -p tsconfig.cjs.json\",\n    \"build:docs\": \"typedoc\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo ssm\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"3.0.0\",\n    \"@aws-crypto/sha256-js\": \"3.0.0\",\n    \"@aws-sdk/client-sts\": \"3.329.0\",\n    \"@aws-sdk/config-resolver\": \"3.329.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.329.0\",\n    \"@aws-sdk/fetch-http-handler\": \"3.329.0\",\n    \"@aws-sdk/hash-node\": \"3.329.0\",\n    \"@aws-sdk/invalid-dependency\": \"3.329.0\",\n    \"@aws-sdk/middleware-content-length\": \"3.329.0\",\n    \"@aws-sdk/middleware-endpoint\": \"3.329.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.329.0\",\n    \"@aws-sdk/middleware-logger\": \"3.329.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.329.0\",\n    \"@aws-sdk/middleware-retry\": \"3.329.0\",\n    \"@aws-sdk/middleware-serde\": \"3.329.0\",\n    \"@aws-sdk/middleware-signing\": \"3.329.0\",\n    \"@aws-sdk/middleware-stack\": \"3.329.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.329.0\",\n    \"@aws-sdk/node-config-provider\": \"3.329.0\",\n    \"@aws-sdk/node-http-handler\": \"3.329.0\",\n    \"@aws-sdk/protocol-http\": \"3.329.0\",\n    \"@aws-sdk/smithy-client\": \"3.329.0\",\n    \"@aws-sdk/types\": \"3.329.0\",\n    \"@aws-sdk/url-parser\": \"3.329.0\",\n    \"@aws-sdk/util-base64\": \"3.310.0\",\n    \"@aws-sdk/util-body-length-browser\": \"3.310.0\",\n    \"@aws-sdk/util-body-length-node\": \"3.310.0\",\n    \"@aws-sdk/util-defaults-mode-browser\": \"3.329.0\",\n    \"@aws-sdk/util-defaults-mode-node\": \"3.329.0\",\n    \"@aws-sdk/util-endpoints\": \"3.329.0\",\n    \"@aws-sdk/util-retry\": \"3.329.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.329.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.329.0\",\n    \"@aws-sdk/util-utf8\": \"3.310.0\",\n    \"@aws-sdk/util-waiter\": \"3.329.0\",\n    \"tslib\": \"^2.5.0\",\n    \"uuid\": \"^8.3.2\"\n  },\n  \"devDependencies\": {\n    \"@aws-sdk/service-client-documentation-generator\": \"3.310.0\",\n    \"@tsconfig/node14\": \"1.0.3\",\n    \"@types/node\": \"^14.14.31\",\n    \"@types/uuid\": \"^8.3.0\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typedoc\": \"0.23.23\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-ssm\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-ssm\"\n  }\n}\n", "import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getValueFromTextNode as __getValueFromTextNode, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@aws-sdk/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidAuthorizationMessageException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        Action: \"AssumeRole\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithSAMLRequest(input, context),\n        Action: \"AssumeRoleWithSAML\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        Action: \"AssumeRoleWithWebIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DecodeAuthorizationMessageRequest(input, context),\n        Action: \"DecodeAuthorizationMessage\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetAccessKeyInfoCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetAccessKeyInfoRequest(input, context),\n        Action: \"GetAccessKeyInfo\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetCallerIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetCallerIdentityRequest(input, context),\n        Action: \"GetCallerIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetFederationTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetFederationTokenRequest(input, context),\n        Action: \"GetFederationToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetSessionTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetSessionTokenRequest(input, context),\n        Action: \"GetSessionToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AssumeRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_AssumeRoleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nexport const de_AssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AssumeRoleWithSAMLCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_AssumeRoleWithSAMLCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AssumeRoleWithWebIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_AssumeRoleWithWebIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nexport const de_DecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DecodeAuthorizationMessageCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DecodeAuthorizationMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            throw await de_InvalidAuthorizationMessageExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nexport const de_GetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetAccessKeyInfoCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetAccessKeyInfoCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        errorCode,\n    });\n};\nexport const de_GetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetCallerIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetCallerIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        errorCode,\n    });\n};\nexport const de_GetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetFederationTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetFederationTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nexport const de_GetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetSessionTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetSessionTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAuthorizationMessageExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidAuthorizationMessageException(body.Error, context);\n    const exception = new InvalidAuthorizationMessageException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName != null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags != null) {\n        const memberEntries = se_tagListType(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.TransitiveTagKeys != null) {\n        const memberEntries = se_tagKeyListType(input.TransitiveTagKeys, context);\n        if (input.TransitiveTagKeys?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExternalId != null) {\n        entries[\"ExternalId\"] = input.ExternalId;\n    }\n    if (input.SerialNumber != null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode != null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    if (input.SourceIdentity != null) {\n        entries[\"SourceIdentity\"] = input.SourceIdentity;\n    }\n    return entries;\n};\nconst se_AssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.PrincipalArn != null) {\n        entries[\"PrincipalArn\"] = input.PrincipalArn;\n    }\n    if (input.SAMLAssertion != null) {\n        entries[\"SAMLAssertion\"] = input.SAMLAssertion;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName != null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.WebIdentityToken != null) {\n        entries[\"WebIdentityToken\"] = input.WebIdentityToken;\n    }\n    if (input.ProviderId != null) {\n        entries[\"ProviderId\"] = input.ProviderId;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst se_DecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input.EncodedMessage != null) {\n        entries[\"EncodedMessage\"] = input.EncodedMessage;\n    }\n    return entries;\n};\nconst se_GetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input.AccessKeyId != null) {\n        entries[\"AccessKeyId\"] = input.AccessKeyId;\n    }\n    return entries;\n};\nconst se_GetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst se_GetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags != null) {\n        const memberEntries = se_tagListType(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_GetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.SerialNumber != null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode != null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input.arn != null) {\n        entries[\"arn\"] = input.arn;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input.Key != null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value != null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[\"AssumedRoleId\"] !== undefined) {\n        contents.AssumedRoleId = __expectString(output[\"AssumedRoleId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = __expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = de_AssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = __expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithSAMLResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = de_AssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Subject\"] !== undefined) {\n        contents.Subject = __expectString(output[\"Subject\"]);\n    }\n    if (output[\"SubjectType\"] !== undefined) {\n        contents.SubjectType = __expectString(output[\"SubjectType\"]);\n    }\n    if (output[\"Issuer\"] !== undefined) {\n        contents.Issuer = __expectString(output[\"Issuer\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = __expectString(output[\"Audience\"]);\n    }\n    if (output[\"NameQualifier\"] !== undefined) {\n        contents.NameQualifier = __expectString(output[\"NameQualifier\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = __expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"SubjectFromWebIdentityToken\"] !== undefined) {\n        contents.SubjectFromWebIdentityToken = __expectString(output[\"SubjectFromWebIdentityToken\"]);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = de_AssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Provider\"] !== undefined) {\n        contents.Provider = __expectString(output[\"Provider\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = __expectString(output[\"Audience\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = __expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[\"AccessKeyId\"] !== undefined) {\n        contents.AccessKeyId = __expectString(output[\"AccessKeyId\"]);\n    }\n    if (output[\"SecretAccessKey\"] !== undefined) {\n        contents.SecretAccessKey = __expectString(output[\"SecretAccessKey\"]);\n    }\n    if (output[\"SessionToken\"] !== undefined) {\n        contents.SessionToken = __expectString(output[\"SessionToken\"]);\n    }\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"Expiration\"]));\n    }\n    return contents;\n};\nconst de_DecodeAuthorizationMessageResponse = (output, context) => {\n    const contents = {};\n    if (output[\"DecodedMessage\"] !== undefined) {\n        contents.DecodedMessage = __expectString(output[\"DecodedMessage\"]);\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_FederatedUser = (output, context) => {\n    const contents = {};\n    if (output[\"FederatedUserId\"] !== undefined) {\n        contents.FederatedUserId = __expectString(output[\"FederatedUserId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = __expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst de_GetAccessKeyInfoResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = __expectString(output[\"Account\"]);\n    }\n    return contents;\n};\nconst de_GetCallerIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[\"UserId\"] !== undefined) {\n        contents.UserId = __expectString(output[\"UserId\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = __expectString(output[\"Account\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = __expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst de_GetFederationTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"FederatedUser\"] !== undefined) {\n        contents.FederatedUser = de_FederatedUser(output[\"FederatedUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    return contents;\n};\nconst de_GetSessionTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_InvalidAuthorizationMessageException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        const parsedObj = parser.parse(encoded);\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return __getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n", "import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n", "import { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport class ExpiredTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PackedPolicyTooLargeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RegionDisabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPRejectedClaimException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIdentityTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport class IDPCommunicationErrorException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\nexport class InvalidAuthorizationMessageException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAuthorizationMessageException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAuthorizationMessageException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAuthorizationMessageException.prototype);\n    }\n}\n", "import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport class AssumeRoleCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, AssumeRoleCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use(getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_AssumeRoleCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_AssumeRoleCommand(output, context);\n    }\n}\n", "import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport class AssumeRoleWithWebIdentityCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, AssumeRoleWithWebIdentityCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithWebIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_AssumeRoleWithWebIdentityCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_AssumeRoleWithWebIdentityCommand(output, context);\n    }\n}\n", "import { resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nexport const resolveStsAuthConfig = (input, { stsClientCtor }) => resolveAwsAuthConfig({\n    ...input,\n    stsClientCtor,\n});\n", "export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\n", "{\n  \"name\": \"@aws-sdk/client-sts\",\n  \"description\": \"AWS SDK for JavaScript Sts Client for Node.js, Browser and React Native\",\n  \"version\": \"3.329.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"tsc -p tsconfig.cjs.json\",\n    \"build:docs\": \"typedoc\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo sts\",\n    \"test\": \"yarn test:unit\",\n    \"test:unit\": \"jest\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"3.0.0\",\n    \"@aws-crypto/sha256-js\": \"3.0.0\",\n    \"@aws-sdk/config-resolver\": \"3.329.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.329.0\",\n    \"@aws-sdk/fetch-http-handler\": \"3.329.0\",\n    \"@aws-sdk/hash-node\": \"3.329.0\",\n    \"@aws-sdk/invalid-dependency\": \"3.329.0\",\n    \"@aws-sdk/middleware-content-length\": \"3.329.0\",\n    \"@aws-sdk/middleware-endpoint\": \"3.329.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.329.0\",\n    \"@aws-sdk/middleware-logger\": \"3.329.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.329.0\",\n    \"@aws-sdk/middleware-retry\": \"3.329.0\",\n    \"@aws-sdk/middleware-sdk-sts\": \"3.329.0\",\n    \"@aws-sdk/middleware-serde\": \"3.329.0\",\n    \"@aws-sdk/middleware-signing\": \"3.329.0\",\n    \"@aws-sdk/middleware-stack\": \"3.329.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.329.0\",\n    \"@aws-sdk/node-config-provider\": \"3.329.0\",\n    \"@aws-sdk/node-http-handler\": \"3.329.0\",\n    \"@aws-sdk/protocol-http\": \"3.329.0\",\n    \"@aws-sdk/smithy-client\": \"3.329.0\",\n    \"@aws-sdk/types\": \"3.329.0\",\n    \"@aws-sdk/url-parser\": \"3.329.0\",\n    \"@aws-sdk/util-base64\": \"3.310.0\",\n    \"@aws-sdk/util-body-length-browser\": \"3.310.0\",\n    \"@aws-sdk/util-body-length-node\": \"3.310.0\",\n    \"@aws-sdk/util-defaults-mode-browser\": \"3.329.0\",\n    \"@aws-sdk/util-defaults-mode-node\": \"3.329.0\",\n    \"@aws-sdk/util-endpoints\": \"3.329.0\",\n    \"@aws-sdk/util-retry\": \"3.329.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.329.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.329.0\",\n    \"@aws-sdk/util-utf8\": \"3.310.0\",\n    \"fast-xml-parser\": \"4.1.2\",\n    \"tslib\": \"^2.5.0\"\n  },\n  \"devDependencies\": {\n    \"@aws-sdk/service-client-documentation-generator\": \"3.310.0\",\n    \"@tsconfig/node14\": \"1.0.3\",\n    \"@types/node\": \"^14.14.31\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typedoc\": \"0.23.23\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-sts\"\n  }\n}\n", "import { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst decorateDefaultRegion = (region) => {\n    if (typeof region !== \"function\") {\n        return region === undefined ? ASSUME_ROLE_DEFAULT_REGION : region;\n    }\n    return async () => {\n        try {\n            return await region();\n        }\n        catch (e) {\n            return ASSUME_ROLE_DEFAULT_REGION;\n        }\n    };\n};\nexport const getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexport const ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexport const ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexport const ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nexport const fromEnv = () => async () => {\n    const accessKeyId = process.env[ENV_KEY];\n    const secretAccessKey = process.env[ENV_SECRET];\n    const sessionToken = process.env[ENV_SESSION];\n    const expiry = process.env[ENV_EXPIRATION];\n    if (accessKeyId && secretAccessKey) {\n        return {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n        };\n    }\n    throw new CredentialsProviderError(\"Unable to find environment variable credentials.\");\n};\n", "import { homedir } from \"os\";\nimport { sep } from \"path\";\nexport const getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    return homedir();\n};\n", "export const ENV_PROFILE = \"AWS_PROFILE\";\nexport const DEFAULT_PROFILE = \"default\";\nexport const getProfileName = (init) => init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;\n", "import { createHash } from \"crypto\";\nimport { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const getSSOTokenFilepath = (id) => {\n    const hasher = createHash(\"sha1\");\n    const cacheName = hasher.update(id).digest(\"hex\");\n    return join(getHomeDir(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\n", "import { promises as fsPromises } from \"fs\";\nimport { getSSOTokenFilepath } from \"./getSSOTokenFilepath\";\nconst { readFile } = fsPromises;\nexport const getSSOTokenFromFile = async (id) => {\n    const ssoTokenFilepath = getSSOTokenFilepath(id);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\n", "import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nexport const getConfigFilepath = () => process.env[ENV_CONFIG_PATH] || join(getHomeDir(), \".aws\", \"config\");\n", "import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexport const getCredentialsFilepath = () => process.env[ENV_CREDENTIALS_PATH] || join(getHomeDir(), \".aws\", \"credentials\");\n", "const profileKeyRegex = /^profile\\s([\"'])?([^\\1]+)\\1$/;\nexport const getProfileData = (data) => Object.entries(data)\n    .filter(([key]) => profileKeyRegex.test(key))\n    .reduce((acc, [key, value]) => ({ ...acc, [profileKeyRegex.exec(key)[2]]: value }), {\n    ...(data.default && { default: data.default }),\n});\n", "const profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nexport const parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    for (let line of iniData.split(/\\r?\\n/)) {\n        line = line.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = line[0] === \"[\" && line[line.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = line.substring(1, line.length - 1);\n            if (profileNameBlockList.includes(currentSection)) {\n                throw new Error(`Found invalid profile name \"${currentSection}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = line.indexOf(\"=\");\n            const start = 0;\n            const end = line.length - 1;\n            const isAssignment = indexOfEqualsSign !== -1 && indexOfEqualsSign !== start && indexOfEqualsSign !== end;\n            if (isAssignment) {\n                const [name, value] = [\n                    line.substring(0, indexOfEqualsSign).trim(),\n                    line.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                map[currentSection] = map[currentSection] || {};\n                map[currentSection][name] = value;\n            }\n        }\n    }\n    return map;\n};\n", "import { promises as fsPromises } from \"fs\";\nconst { readFile } = fsPromises;\nconst filePromisesHash = {};\nexport const slurpFile = (path, options) => {\n    if (!filePromisesHash[path] || options?.ignoreCache) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\n", "import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getCredentialsFilepath } from \"./getCredentialsFilepath\";\nimport { getProfileData } from \"./getProfileData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\n    const parsedFiles = await Promise.all([\n        slurpFile(configFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .then(getProfileData)\n            .catch(swallowError),\n        slurpFile(filepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\n", "const ssoSessionKeyRegex = /^sso-session\\s([\"'])?([^\\1]+)\\1$/;\nexport const getSsoSessionData = (data) => Object.entries(data)\n    .filter(([key]) => ssoSessionKeyRegex.test(key))\n    .reduce((acc, [key, value]) => ({ ...acc, [ssoSessionKeyRegex.exec(key)[2]]: value }), {});\n", "import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getSsoSessionData } from \"./getSsoSessionData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSsoSessionData = async (init = {}) => slurpFile(init.configFilepath ?? getConfigFilepath())\n    .then(parseIni)\n    .then(getSsoSessionData)\n    .catch(swallowError);\n", "export const mergeConfigFiles = (...files) => {\n    const merged = {};\n    for (const file of files) {\n        for (const [key, values] of Object.entries(file)) {\n            if (merged[key] !== undefined) {\n                Object.assign(merged[key], values);\n            }\n            else {\n                merged[key] = values;\n            }\n        }\n    }\n    return merged;\n};\n", "import { loadSharedConfigFiles } from \"./loadSharedConfigFiles\";\nimport { mergeConfigFiles } from \"./mergeConfigFiles\";\nexport const parseKnownFiles = async (init) => {\n    const parsedFiles = await loadSharedConfigFiles(init);\n    return mergeConfigFiles(parsedFiles.configFile, parsedFiles.credentialsFile);\n};\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { parse } from \"url\";\nimport { httpRequest } from \"./remoteProvider/httpRequest\";\nimport { fromImdsCredentials, isImdsCredentials } from \"./remoteProvider/ImdsCredentials\";\nimport { providerConfigFromInit } from \"./remoteProvider/RemoteProviderInit\";\nimport { retry } from \"./remoteProvider/retry\";\nexport const ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nexport const ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nexport const ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nexport const fromContainerMetadata = (init = {}) => {\n    const { timeout, maxRetries } = providerConfigFromInit(init);\n    return () => retry(async () => {\n        const requestOptions = await getCmdsUri();\n        const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n        if (!isImdsCredentials(credsResponse)) {\n            throw new CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n        }\n        return fromImdsCredentials(credsResponse);\n    }, maxRetries);\n};\nconst requestFromEcsImds = async (timeout, options) => {\n    if (process.env[ENV_CMDS_AUTH_TOKEN]) {\n        options.headers = {\n            ...options.headers,\n            Authorization: process.env[ENV_CMDS_AUTH_TOKEN],\n        };\n    }\n    const buffer = await httpRequest({\n        ...options,\n        timeout,\n    });\n    return buffer.toString();\n};\nconst CMDS_IP = \"169.254.170.2\";\nconst GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nconst GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nconst getCmdsUri = async () => {\n    if (process.env[ENV_CMDS_RELATIVE_URI]) {\n        return {\n            hostname: CMDS_IP,\n            path: process.env[ENV_CMDS_RELATIVE_URI],\n        };\n    }\n    if (process.env[ENV_CMDS_FULL_URI]) {\n        const parsed = parse(process.env[ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            throw new CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, false);\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            throw new CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, false);\n        }\n        return {\n            ...parsed,\n            port: parsed.port ? parseInt(parsed.port, 10) : undefined,\n        };\n    }\n    throw new CredentialsProviderError(\"The container metadata credential provider cannot be used unless\" +\n        ` the ${ENV_CMDS_RELATIVE_URI} or ${ENV_CMDS_FULL_URI} environment` +\n        \" variable is set\", false);\n};\n", "import { ProviderError } from \"@aws-sdk/property-provider\";\nimport { Buffer } from \"buffer\";\nimport { request } from \"http\";\nexport function httpRequest(options) {\n    return new Promise((resolve, reject) => {\n        const req = request({\n            method: \"GET\",\n            ...options,\n            hostname: options.hostname?.replace(/^\\[(.+)\\]$/, \"$1\"),\n        });\n        req.on(\"error\", (err) => {\n            reject(Object.assign(new ProviderError(\"Unable to connect to instance metadata service\"), err));\n            req.destroy();\n        });\n        req.on(\"timeout\", () => {\n            reject(new ProviderError(\"TimeoutError from instance metadata service\"));\n            req.destroy();\n        });\n        req.on(\"response\", (res) => {\n            const { statusCode = 400 } = res;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\n                req.destroy();\n            }\n            const chunks = [];\n            res.on(\"data\", (chunk) => {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", () => {\n                resolve(Buffer.concat(chunks));\n                req.destroy();\n            });\n        });\n        req.end();\n    });\n}\n", "export const isImdsCredentials = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.AccessKeyId === \"string\" &&\n    typeof arg.SecretAccessKey === \"string\" &&\n    typeof arg.Token === \"string\" &&\n    typeof arg.Expiration === \"string\";\nexport const fromImdsCredentials = (creds) => ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n});\n", "export const DEFAULT_TIMEOUT = 1000;\nexport const DEFAULT_MAX_RETRIES = 0;\nexport const providerConfigFromInit = ({ maxRetries = DEFAULT_MAX_RETRIES, timeout = DEFAULT_TIMEOUT, }) => ({ maxRetries, timeout });\n", "export const retry = (toRetry, maxRetries) => {\n    let promise = toRetry();\n    for (let i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const fromEnv = (envVarSelector) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Cannot load config from environment variables with getter: ${envVarSelector}`);\n    }\n};\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName, loadSharedConfigFiles } from \"@aws-sdk/shared-ini-file-loader\";\nexport const fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = getProfileName(init);\n    const { configFile, credentialsFile } = await loadSharedConfigFiles(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const configValue = configSelector(mergedProfile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message ||\n            `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\n    }\n};\n", "import { fromStatic as convertToProvider } from \"@aws-sdk/property-provider\";\nconst isFunction = (func) => typeof func === \"function\";\nexport const fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : convertToProvider(defaultValue);\n", "import { chain, memoize } from \"@aws-sdk/property-provider\";\nimport { fromEnv } from \"./fromEnv\";\nimport { fromSharedConfigFiles } from \"./fromSharedConfigFiles\";\nimport { fromStatic } from \"./fromStatic\";\nexport const loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => memoize(chain(fromEnv(environmentVariableSelector), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\n", "export var Endpoint;\n(function (Endpoint) {\n    Endpoint[\"IPv4\"] = \"http://169.254.169.254\";\n    Endpoint[\"IPv6\"] = \"http://[fd00:ec2::254]\";\n})(Endpoint || (Endpoint = {}));\n", "export const ENV_ENDPOINT_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT\";\nexport const CONFIG_ENDPOINT_NAME = \"ec2_metadata_service_endpoint\";\nexport const ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_ENDPOINT_NAME],\n    configFileSelector: (profile) => profile[CONFIG_ENDPOINT_NAME],\n    default: undefined,\n};\n", "export var EndpointMode;\n(function (EndpointMode) {\n    EndpointMode[\"IPv4\"] = \"IPv4\";\n    EndpointMode[\"IPv6\"] = \"IPv6\";\n})(EndpointMode || (EndpointMode = {}));\n", "import { EndpointMode } from \"./EndpointMode\";\nexport const ENV_ENDPOINT_MODE_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE\";\nexport const CONFIG_ENDPOINT_MODE_NAME = \"ec2_metadata_service_endpoint_mode\";\nexport const ENDPOINT_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_ENDPOINT_MODE_NAME],\n    configFileSelector: (profile) => profile[CONFIG_ENDPOINT_MODE_NAME],\n    default: EndpointMode.IPv4,\n};\n", "import { loadConfig } from \"@aws-sdk/node-config-provider\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { Endpoint as InstanceMetadataEndpoint } from \"../config/Endpoint\";\nimport { ENDPOINT_CONFIG_OPTIONS } from \"../config/EndpointConfigOptions\";\nimport { EndpointMode } from \"../config/EndpointMode\";\nimport { ENDPOINT_MODE_CONFIG_OPTIONS, } from \"../config/EndpointModeConfigOptions\";\nexport const getInstanceMetadataEndpoint = async () => parseUrl((await getFromEndpointConfig()) || (await getFromEndpointModeConfig()));\nconst getFromEndpointConfig = async () => loadConfig(ENDPOINT_CONFIG_OPTIONS)();\nconst getFromEndpointModeConfig = async () => {\n    const endpointMode = await loadConfig(ENDPOINT_MODE_CONFIG_OPTIONS)();\n    switch (endpointMode) {\n        case EndpointMode.IPv4:\n            return InstanceMetadataEndpoint.IPv4;\n        case EndpointMode.IPv6:\n            return InstanceMetadataEndpoint.IPv6;\n        default:\n            throw new Error(`Unsupported endpoint mode: ${endpointMode}.` + ` Select from ${Object.values(EndpointMode)}`);\n    }\n};\n", "const STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 5 * 60;\nconst STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;\nconst STATIC_STABILITY_DOC_URL = \"https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\";\nexport const getExtendedInstanceMetadataCredentials = (credentials, logger) => {\n    const refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS +\n        Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);\n    const newExpiration = new Date(Date.now() + refreshInterval * 1000);\n    logger.warn(\"Attempting credential expiration extension due to a credential service availability issue. A refresh of these \" +\n        \"credentials will be attempted after ${new Date(newExpiration)}.\\nFor more information, please visit: \" +\n        STATIC_STABILITY_DOC_URL);\n    const originalExpiration = credentials.originalExpiration ?? credentials.expiration;\n    return {\n        ...credentials,\n        ...(originalExpiration ? { originalExpiration } : {}),\n        expiration: newExpiration,\n    };\n};\n", "import { getExtendedInstanceMetadataCredentials } from \"./getExtendedInstanceMetadataCredentials\";\nexport const staticStabilityProvider = (provider, options = {}) => {\n    const logger = options?.logger || console;\n    let pastCredentials;\n    return async () => {\n        let credentials;\n        try {\n            credentials = await provider();\n            if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {\n                credentials = getExtendedInstanceMetadataCredentials(credentials, logger);\n            }\n        }\n        catch (e) {\n            if (pastCredentials) {\n                logger.warn(\"Credential renew failed: \", e);\n                credentials = getExtendedInstanceMetadataCredentials(pastCredentials, logger);\n            }\n            else {\n                throw e;\n            }\n        }\n        pastCredentials = credentials;\n        return credentials;\n    };\n};\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { httpRequest } from \"./remoteProvider/httpRequest\";\nimport { fromImdsCredentials, isImdsCredentials } from \"./remoteProvider/ImdsCredentials\";\nimport { providerConfigFromInit } from \"./remoteProvider/RemoteProviderInit\";\nimport { retry } from \"./remoteProvider/retry\";\nimport { getInstanceMetadataEndpoint } from \"./utils/getInstanceMetadataEndpoint\";\nimport { staticStabilityProvider } from \"./utils/staticStabilityProvider\";\nconst IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nconst IMDS_TOKEN_PATH = \"/latest/api/token\";\nexport const fromInstanceMetadata = (init = {}) => staticStabilityProvider(getInstanceImdsProvider(init), { logger: init.logger });\nconst getInstanceImdsProvider = (init) => {\n    let disableFetchToken = false;\n    const { timeout, maxRetries } = providerConfigFromInit(init);\n    const getCredentials = async (maxRetries, options) => {\n        const profile = (await retry(async () => {\n            let profile;\n            try {\n                profile = await getProfile(options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return profile;\n        }, maxRetries)).trim();\n        return retry(async () => {\n            let creds;\n            try {\n                creds = await getCredentialsFromProfile(profile, options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return creds;\n        }, maxRetries);\n    };\n    return async () => {\n        const endpoint = await getInstanceMetadataEndpoint();\n        if (disableFetchToken) {\n            return getCredentials(maxRetries, { ...endpoint, timeout });\n        }\n        else {\n            let token;\n            try {\n                token = (await getMetadataToken({ ...endpoint, timeout })).toString();\n            }\n            catch (error) {\n                if (error?.statusCode === 400) {\n                    throw Object.assign(error, {\n                        message: \"EC2 Metadata token request returned error\",\n                    });\n                }\n                else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n                    disableFetchToken = true;\n                }\n                return getCredentials(maxRetries, { ...endpoint, timeout });\n            }\n            return getCredentials(maxRetries, {\n                ...endpoint,\n                headers: {\n                    \"x-aws-ec2-metadata-token\": token,\n                },\n                timeout,\n            });\n        }\n    };\n};\nconst getMetadataToken = async (options) => httpRequest({\n    ...options,\n    path: IMDS_TOKEN_PATH,\n    method: \"PUT\",\n    headers: {\n        \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n    },\n});\nconst getProfile = async (options) => (await httpRequest({ ...options, path: IMDS_PATH })).toString();\nconst getCredentialsFromProfile = async (profile, options) => {\n    const credsResponse = JSON.parse((await httpRequest({\n        ...options,\n        path: IMDS_PATH + profile,\n    })).toString());\n    if (!isImdsCredentials(credsResponse)) {\n        throw new CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n    }\n    return fromImdsCredentials(credsResponse);\n};\n", "import { fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { fromContainerMetadata, fromInstanceMetadata } from \"@aws-sdk/credential-provider-imds\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const resolveCredentialSource = (credentialSource, profileName) => {\n    const sourceProvidersMap = {\n        EcsContainer: fromContainerMetadata,\n        Ec2InstanceMetadata: fromInstanceMetadata,\n        Environment: fromEnv,\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource]();\n    }\n    else {\n        throw new CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\n    }\n};\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName } from \"@aws-sdk/shared-ini-file-loader\";\nimport { resolveCredentialSource } from \"./resolveCredentialSource\";\nimport { resolveProfileData } from \"./resolveProfileData\";\nexport const isAssumeRoleProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1 &&\n    (isAssumeRoleWithSourceProfile(arg) || isAssumeRoleWithProviderProfile(arg));\nconst isAssumeRoleWithSourceProfile = (arg) => typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\nconst isAssumeRoleWithProviderProfile = (arg) => typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\nexport const resolveAssumeRoleCredentials = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (!options.roleAssumer) {\n        throw new CredentialsProviderError(`Profile ${profileName} requires a role to be assumed, but no role assumption callback was provided.`, false);\n    }\n    const { source_profile } = data;\n    if (source_profile && source_profile in visitedProfiles) {\n        throw new CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n            ` ${getProfileName(options)}. Profiles visited: ` +\n            Object.keys(visitedProfiles).join(\", \"), false);\n    }\n    const sourceCredsProvider = source_profile\n        ? resolveProfileData(source_profile, profiles, options, {\n            ...visitedProfiles,\n            [source_profile]: true,\n        })\n        : resolveCredentialSource(data.credential_source, profileName)();\n    const params = {\n        RoleArn: data.role_arn,\n        RoleSessionName: data.role_session_name || `aws-sdk-js-${Date.now()}`,\n        ExternalId: data.external_id,\n    };\n    const { mfa_serial } = data;\n    if (mfa_serial) {\n        if (!options.mfaCodeProvider) {\n            throw new CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication, but no MFA code callback was provided.`, false);\n        }\n        params.SerialNumber = mfa_serial;\n        params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n    }\n    const sourceCreds = await sourceCredsProvider;\n    return options.roleAssumer(sourceCreds, params);\n};\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { exec } from \"child_process\";\nimport { promisify } from \"util\";\nimport { getValidatedProcessCredentials } from \"./getValidatedProcessCredentials\";\nexport const resolveProcessCredentials = async (profileName, profiles) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            const execPromise = promisify(exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials(profileName, data);\n            }\n            catch (error) {\n                throw new CredentialsProviderError(error.message);\n            }\n        }\n        else {\n            throw new CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\n        }\n    }\n    else {\n        throw new CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n};\n", "export const getValidatedProcessCredentials = (profileName, data) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    return {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n    };\n};\n", "import { getProfileName, parseKnownFiles } from \"@aws-sdk/shared-ini-file-loader\";\nimport { resolveProcessCredentials } from \"./resolveProcessCredentials\";\nexport const fromProcess = (init = {}) => async () => {\n    const profiles = await parseKnownFiles(init);\n    return resolveProcessCredentials(getProfileName(init), profiles);\n};\n", "import { fromProcess } from \"@aws-sdk/credential-provider-process\";\nexport const isProcessProfile = (arg) => Boolean(arg) && typeof arg === \"object\" && typeof arg.credential_process === \"string\";\nexport const resolveProcessCredentials = async (options, profile) => fromProcess({\n    ...options,\n    profile,\n})();\n", "export const isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_session === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\n", "import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class SSOServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOServiceException.prototype);\n    }\n}\n", "import { SENSITIVE_STRING } from \"@aws-sdk/smithy-client\";\nimport { SSOServiceException as __BaseException } from \"./SSOServiceException\";\nexport class InvalidRequestException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n    }\n}\nexport class ResourceNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport class TooManyRequestsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRequestsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexport class UnauthorizedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedException.prototype);\n    }\n}\nexport const GetRoleCredentialsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const RoleCredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.secretAccessKey && { secretAccessKey: SENSITIVE_STRING }),\n    ...(obj.sessionToken && { sessionToken: SENSITIVE_STRING }),\n});\nexport const GetRoleCredentialsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.roleCredentials && { roleCredentials: RoleCredentialsFilterSensitiveLog(obj.roleCredentials) }),\n});\nexport const ListAccountRolesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const ListAccountsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const LogoutRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\n", "import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { _json, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map, take, withBaseException, } from \"@aws-sdk/smithy-client\";\nimport { InvalidRequestException, ResourceNotFoundException, TooManyRequestsException, UnauthorizedException, } from \"../models/models_0\";\nimport { SSOServiceException as __BaseException } from \"../models/SSOServiceException\";\nexport const se_GetRoleCredentialsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/federation/credentials\";\n    const query = map({\n        role_name: [, __expectNonNull(input.roleName, `roleName`)],\n        account_id: [, __expectNonNull(input.accountId, `accountId`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListAccountRolesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/roles\";\n    const query = map({\n        next_token: [, input.nextToken],\n        max_result: [() => input.maxResults !== void 0, () => input.maxResults.toString()],\n        account_id: [, __expectNonNull(input.accountId, `accountId`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListAccountsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/accounts\";\n    const query = map({\n        next_token: [, input.nextToken],\n        max_result: [() => input.maxResults !== void 0, () => input.maxResults.toString()],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_LogoutCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/logout\";\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const de_GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetRoleCredentialsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        roleCredentials: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_GetRoleCredentialsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListAccountRolesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        nextToken: __expectString,\n        roleList: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_ListAccountRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListAccountsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        accountList: _json,\n        nextToken: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_ListAccountsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_LogoutCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_LogoutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnauthorizedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n", "import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { GetRoleCredentialsRequestFilterSensitiveLog, GetRoleCredentialsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_GetRoleCredentialsCommand, se_GetRoleCredentialsCommand } from \"../protocols/Aws_restJson1\";\nexport class GetRoleCredentialsCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, GetRoleCredentialsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"GetRoleCredentialsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: GetRoleCredentialsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: GetRoleCredentialsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_GetRoleCredentialsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_GetRoleCredentialsCommand(output, context);\n    }\n}\n", "export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssoportal\",\n    };\n};\n", "{\n  \"name\": \"@aws-sdk/client-sso\",\n  \"description\": \"AWS SDK for JavaScript Sso Client for Node.js, Browser and React Native\",\n  \"version\": \"3.329.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"tsc -p tsconfig.cjs.json\",\n    \"build:docs\": \"typedoc\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo sso\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"3.0.0\",\n    \"@aws-crypto/sha256-js\": \"3.0.0\",\n    \"@aws-sdk/config-resolver\": \"3.329.0\",\n    \"@aws-sdk/fetch-http-handler\": \"3.329.0\",\n    \"@aws-sdk/hash-node\": \"3.329.0\",\n    \"@aws-sdk/invalid-dependency\": \"3.329.0\",\n    \"@aws-sdk/middleware-content-length\": \"3.329.0\",\n    \"@aws-sdk/middleware-endpoint\": \"3.329.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.329.0\",\n    \"@aws-sdk/middleware-logger\": \"3.329.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.329.0\",\n    \"@aws-sdk/middleware-retry\": \"3.329.0\",\n    \"@aws-sdk/middleware-serde\": \"3.329.0\",\n    \"@aws-sdk/middleware-stack\": \"3.329.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.329.0\",\n    \"@aws-sdk/node-config-provider\": \"3.329.0\",\n    \"@aws-sdk/node-http-handler\": \"3.329.0\",\n    \"@aws-sdk/protocol-http\": \"3.329.0\",\n    \"@aws-sdk/smithy-client\": \"3.329.0\",\n    \"@aws-sdk/types\": \"3.329.0\",\n    \"@aws-sdk/url-parser\": \"3.329.0\",\n    \"@aws-sdk/util-base64\": \"3.310.0\",\n    \"@aws-sdk/util-body-length-browser\": \"3.310.0\",\n    \"@aws-sdk/util-body-length-node\": \"3.310.0\",\n    \"@aws-sdk/util-defaults-mode-browser\": \"3.329.0\",\n    \"@aws-sdk/util-defaults-mode-node\": \"3.329.0\",\n    \"@aws-sdk/util-endpoints\": \"3.329.0\",\n    \"@aws-sdk/util-retry\": \"3.329.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.329.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.329.0\",\n    \"@aws-sdk/util-utf8\": \"3.310.0\",\n    \"tslib\": \"^2.5.0\"\n  },\n  \"devDependencies\": {\n    \"@aws-sdk/service-client-documentation-generator\": \"3.310.0\",\n    \"@tsconfig/node14\": \"1.0.3\",\n    \"@types/node\": \"^14.14.31\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typedoc\": \"0.23.23\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sso\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-sso\"\n  }\n}\n", "import { fromArrayBuffer, fromString } from \"@aws-sdk/util-buffer-from\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { Buffer } from \"buffer\";\nimport { createHash, createHmac } from \"crypto\";\nexport class Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.algorithmIdentifier = algorithmIdentifier;\n        this.secret = secret;\n        this.reset();\n    }\n    update(toHash, encoding) {\n        this.hash.update(toUint8Array(castSourceData(toHash, encoding)));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n    reset() {\n        this.hash = this.secret\n            ? createHmac(this.algorithmIdentifier, castSourceData(this.secret))\n            : createHash(this.algorithmIdentifier);\n    }\n}\nfunction castSourceData(toCast, encoding) {\n    if (Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return fromString(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return fromArrayBuffer(toCast);\n}\n", "import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n", "import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { Agent as hAgent, request as hRequest } from \"http\";\nimport { Agent as hsAgent, request as hsRequest } from \"https\";\nimport { NODEJS_TIMEOUT_ERROR_CODES } from \"./constants\";\nimport { getTransformedHeaders } from \"./get-transformed-headers\";\nimport { setConnectionTimeout } from \"./set-connection-timeout\";\nimport { setSocketTimeout } from \"./set-socket-timeout\";\nimport { writeRequestBody } from \"./write-request-body\";\nimport { setSocketKeepAlive } from \"./set-socket-keep-alive\";\nexport const DEFAULT_REQUEST_TIMEOUT = 0;\nexport class NodeHttpHandler {\n    constructor(options) {\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((_options) => {\n                    resolve(this.resolveDefaultConfig(_options));\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(this.resolveDefaultConfig(options));\n            }\n        });\n    }\n    resolveDefaultConfig(options) {\n        const { requestTimeout, connectionTimeout, socketTimeout, httpAgent, httpsAgent } = options || {};\n        const keepAlive = true;\n        const maxSockets = 50;\n        return {\n            connectionTimeout,\n            requestTimeout: requestTimeout ?? socketTimeout,\n            httpAgent: httpAgent || new hAgent({ keepAlive, maxSockets }),\n            httpsAgent: httpsAgent || new hsAgent({ keepAlive, maxSockets }),\n        };\n    }\n    destroy() {\n        this.config?.httpAgent?.destroy();\n        this.config?.httpsAgent?.destroy();\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        return new Promise((resolve, reject) => {\n            if (!this.config) {\n                throw new Error(\"Node HTTP request handler config is not resolved\");\n            }\n            if (abortSignal?.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const isSSL = request.protocol === \"https:\";\n            const queryString = buildQueryString(request.query || {});\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: request.hostname,\n                method: request.method,\n                path: queryString ? `${request.path}?${queryString}` : request.path,\n                port: request.port,\n                agent: isSSL ? this.config.httpsAgent : this.config.httpAgent,\n            };\n            const requestFunc = isSSL ? hsRequest : hRequest;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    headers: getTransformedHeaders(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            setConnectionTimeout(req, reject, this.config.connectionTimeout);\n            setSocketTimeout(req, reject, this.config.requestTimeout);\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.abort();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            const httpAgent = nodeHttpsOptions.agent;\n            if (typeof httpAgent === \"object\" && \"keepAlive\" in httpAgent) {\n                setSocketKeepAlive(req, {\n                    keepAlive: httpAgent.keepAlive,\n                    keepAliveMsecs: httpAgent.keepAliveMsecs,\n                });\n            }\n            writeRequestBody(req, request);\n        });\n    }\n}\n", "export const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n", "const getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexport { getTransformedHeaders };\n", "export const setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        if (socket.connecting) {\n            const timeoutId = setTimeout(() => {\n                request.destroy();\n                reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                    name: \"TimeoutError\",\n                }));\n            }, timeoutInMs);\n            socket.on(\"connect\", () => {\n                clearTimeout(timeoutId);\n            });\n        }\n    });\n};\n", "export const setSocketTimeout = (request, reject, timeoutInMs = 0) => {\n    request.setTimeout(timeoutInMs, () => {\n        request.destroy();\n        reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n    });\n};\n", "import { Readable } from \"stream\";\nexport function writeRequestBody(httpRequest, request) {\n    const expect = request.headers[\"Expect\"] || request.headers[\"expect\"];\n    if (expect === \"100-continue\") {\n        httpRequest.on(\"continue\", () => {\n            writeBody(httpRequest, request.body);\n        });\n    }\n    else {\n        writeBody(httpRequest, request.body);\n    }\n}\nfunction writeBody(httpRequest, body) {\n    if (body instanceof Readable) {\n        body.pipe(httpRequest);\n    }\n    else if (body) {\n        httpRequest.end(Buffer.from(body));\n    }\n    else {\n        httpRequest.end();\n    }\n}\n", "export const setSocketKeepAlive = (request, { keepAlive, keepAliveMsecs }) => {\n    if (keepAlive !== true) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);\n    });\n};\n", "export class NodeHttp2ConnectionPool {\n    constructor(sessions) {\n        this.sessions = [];\n        this.sessions = sessions ?? [];\n    }\n    poll() {\n        if (this.sessions.length > 0) {\n            return this.sessions.shift();\n        }\n    }\n    offerLast(session) {\n        this.sessions.push(session);\n    }\n    contains(session) {\n        return this.sessions.includes(session);\n    }\n    remove(session) {\n        this.sessions = this.sessions.filter((s) => s !== session);\n    }\n    [Symbol.iterator]() {\n        return this.sessions[Symbol.iterator]();\n    }\n    destroy(connection) {\n        for (const session of this.sessions) {\n            if (session === connection) {\n                if (!session.destroyed) {\n                    session.destroy();\n                }\n            }\n        }\n    }\n}\n", "import { Writable } from \"stream\";\nexport class Collector extends Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\n", "import { Collector } from \"./collector\";\nexport const streamCollector = (stream) => new Promise((resolve, reject) => {\n    const collector = new Collector();\n    stream.pipe(collector);\n    stream.on(\"error\", (err) => {\n        collector.end();\n        reject(err);\n    });\n    collector.on(\"error\", reject);\n    collector.on(\"finish\", function () {\n        const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n        resolve(bytes);\n    });\n});\n", "import { fstatSync, lstatSync } from \"fs\";\nexport const calculateBodyLength = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.path === \"string\" || Buffer.isBuffer(body.path)) {\n        return lstatSync(body.path).size;\n    }\n    else if (typeof body.fd === \"number\") {\n        return fstatSync(body.fd).size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n", "import { loadConfig } from \"@aws-sdk/node-config-provider\";\nimport { platform, release } from \"os\";\nimport { env, versions } from \"process\";\nimport { isCrtAvailable } from \"./is-crt-available\";\nexport const UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexport const UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\nexport const defaultUserAgent = ({ serviceId, clientVersion }) => {\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [`os/${platform()}`, release()],\n        [\"lang/js\"],\n        [\"md/nodejs\", `${versions.node}`],\n    ];\n    const crtAvailable = isCrtAvailable();\n    if (crtAvailable) {\n        sections.push(crtAvailable);\n    }\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    if (env.AWS_EXECUTION_ENV) {\n        sections.push([`exec-env/${env.AWS_EXECUTION_ENV}`]);\n    }\n    const appIdPromise = loadConfig({\n        environmentVariableSelector: (env) => env[UA_APP_ID_ENV_NAME],\n        configFileSelector: (profile) => profile[UA_APP_ID_INI_NAME],\n        default: undefined,\n    })();\n    let resolvedUserAgent = undefined;\n    return async () => {\n        if (!resolvedUserAgent) {\n            const appId = await appIdPromise;\n            resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        }\n        return resolvedUserAgent;\n    };\n};\n", "export const isCrtAvailable = () => {\n    try {\n        if (typeof require === \"function\" && typeof module !== \"undefined\" && require(\"aws-crt\")) {\n            return [\"md/crt-avail\"];\n        }\n        return null;\n    }\n    catch (e) {\n        return null;\n    }\n};\n", "import { fromString } from \"@aws-sdk/util-buffer-from\";\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nexport const fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = fromString(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\n", "import { fromArrayBuffer } from \"@aws-sdk/util-buffer-from\";\nexport const toBase64 = (input) => fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n", "const p = \"required\", q = \"fn\", r = \"argv\", s = \"ref\";\nconst a = \"PartitionResult\", b = \"tree\", c = \"error\", d = \"endpoint\", e = { [p]: false, \"type\": \"String\" }, f = { [p]: true, \"default\": false, \"type\": \"Boolean\" }, g = { [s]: \"Endpoint\" }, h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] }, i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] }, j = {}, k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] }, l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] }, m = [g], n = [h], o = [i];\nconst _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nexport const ruleSet = _data;\n", "import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n", "import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2019-06-10\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"SSO\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n", "export const AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nexport const AWS_REGION_ENV = \"AWS_REGION\";\nexport const AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nexport const IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n", "const AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nconst AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nexport const NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        return env[AWS_DEFAULTS_MODE_ENV];\n    },\n    configFileSelector: (profile) => {\n        return profile[AWS_DEFAULTS_MODE_CONFIG];\n    },\n    default: \"legacy\",\n};\n", "import { NODE_REGION_CONFIG_OPTIONS } from \"@aws-sdk/config-resolver\";\nimport { getInstanceMetadataEndpoint, httpRequest } from \"@aws-sdk/credential-provider-imds\";\nimport { loadConfig } from \"@aws-sdk/node-config-provider\";\nimport { memoize } from \"@aws-sdk/property-provider\";\nimport { AWS_DEFAULT_REGION_ENV, AWS_EXECUTION_ENV, AWS_REGION_ENV, DEFAULTS_MODE_OPTIONS, ENV_IMDS_DISABLED, IMDS_REGION_PATH, } from \"./constants\";\nimport { NODE_DEFAULTS_MODE_CONFIG_OPTIONS } from \"./defaultsModeConfig\";\nexport const resolveDefaultsModeConfig = ({ region = loadConfig(NODE_REGION_CONFIG_OPTIONS), defaultsMode = loadConfig(NODE_DEFAULTS_MODE_CONFIG_OPTIONS), } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return resolveNodeDefaultsModeAuto(region);\n        case \"in-region\":\n        case \"cross-region\":\n        case \"mobile\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst resolveNodeDefaultsModeAuto = async (clientRegion) => {\n    if (clientRegion) {\n        const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n        const inferredRegion = await inferPhysicalRegion();\n        if (!inferredRegion) {\n            return \"standard\";\n        }\n        if (resolvedRegion === inferredRegion) {\n            return \"in-region\";\n        }\n        else {\n            return \"cross-region\";\n        }\n    }\n    return \"standard\";\n};\nconst inferPhysicalRegion = async () => {\n    if (process.env[AWS_EXECUTION_ENV] && (process.env[AWS_REGION_ENV] || process.env[AWS_DEFAULT_REGION_ENV])) {\n        return process.env[AWS_REGION_ENV] ?? process.env[AWS_DEFAULT_REGION_ENV];\n    }\n    if (!process.env[ENV_IMDS_DISABLED]) {\n        try {\n            const endpoint = await getInstanceMetadataEndpoint();\n            return (await httpRequest({ ...endpoint, path: IMDS_REGION_PATH })).toString();\n        }\n        catch (e) {\n        }\n    }\n};\n", "import packageInfo from \"../package.json\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n", "import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class SSOClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n", "export const EXPIRE_WINDOW_MS = 5 * 60 * 1000;\nexport const REFRESH_MESSAGE = `To refresh this SSO session run 'aws sso login' with the corresponding profile.`;\n", "import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class SSOOIDCServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOOIDCServiceException.prototype);\n    }\n}\n", "import { SSOOIDCServiceException as __BaseException } from \"./SSOOIDCServiceException\";\nexport class AccessDeniedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AccessDeniedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AccessDeniedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AccessDeniedException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class AuthorizationPendingException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AuthorizationPendingException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AuthorizationPendingException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AuthorizationPendingException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class ExpiredTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InternalServerException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InternalServerException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"InternalServerException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServerException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidClientException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidGrantException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidGrantException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidGrantException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidGrantException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidRequestException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidScopeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidScopeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidScopeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidScopeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class SlowDownException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"SlowDownException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"SlowDownException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, SlowDownException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class UnauthorizedClientException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class UnsupportedGrantTypeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedGrantTypeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedGrantTypeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedGrantTypeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidClientMetadataException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidClientMetadataException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidClientMetadataException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidClientMetadataException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\n", "import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { _json, decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map, take, withBaseException, } from \"@aws-sdk/smithy-client\";\nimport { AccessDeniedException, AuthorizationPendingException, ExpiredTokenException, InternalServerException, InvalidClientException, InvalidClientMetadataException, InvalidGrantException, InvalidRequestException, InvalidScopeException, SlowDownException, UnauthorizedClientException, UnsupportedGrantTypeException, } from \"../models/models_0\";\nimport { SSOOIDCServiceException as __BaseException } from \"../models/SSOOIDCServiceException\";\nexport const se_CreateTokenCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/token\";\n    let body;\n    body = JSON.stringify(take(input, {\n        clientId: [],\n        clientSecret: [],\n        code: [],\n        deviceCode: [],\n        grantType: [],\n        redirectUri: [],\n        refreshToken: [],\n        scope: (_) => _json(_),\n    }));\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const se_RegisterClientCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/client/register\";\n    let body;\n    body = JSON.stringify(take(input, {\n        clientName: [],\n        clientType: [],\n        scopes: (_) => _json(_),\n    }));\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const se_StartDeviceAuthorizationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/device_authorization\";\n    let body;\n    body = JSON.stringify(take(input, {\n        clientId: [],\n        clientSecret: [],\n        startUrl: [],\n    }));\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const de_CreateTokenCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CreateTokenCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        accessToken: __expectString,\n        expiresIn: __expectInt32,\n        idToken: __expectString,\n        refreshToken: __expectString,\n        tokenType: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_CreateTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ssooidc#AccessDeniedException\":\n            throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n        case \"AuthorizationPendingException\":\n        case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\n            throw await de_AuthorizationPendingExceptionRes(parsedOutput, context);\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.ssooidc#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await de_InvalidClientExceptionRes(parsedOutput, context);\n        case \"InvalidGrantException\":\n        case \"com.amazonaws.ssooidc#InvalidGrantException\":\n            throw await de_InvalidGrantExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await de_SlowDownExceptionRes(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n        case \"UnsupportedGrantTypeException\":\n        case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\n            throw await de_UnsupportedGrantTypeExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RegisterClientCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_RegisterClientCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        authorizationEndpoint: __expectString,\n        clientId: __expectString,\n        clientIdIssuedAt: __expectLong,\n        clientSecret: __expectString,\n        clientSecretExpiresAt: __expectLong,\n        tokenEndpoint: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_RegisterClientCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientMetadataException\":\n        case \"com.amazonaws.ssooidc#InvalidClientMetadataException\":\n            throw await de_InvalidClientMetadataExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_StartDeviceAuthorizationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_StartDeviceAuthorizationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        deviceCode: __expectString,\n        expiresIn: __expectInt32,\n        interval: __expectInt32,\n        userCode: __expectString,\n        verificationUri: __expectString,\n        verificationUriComplete: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_StartDeviceAuthorizationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await de_InvalidClientExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await de_SlowDownExceptionRes(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_AccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_AuthorizationPendingExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new AuthorizationPendingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InternalServerExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InternalServerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidClientExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidClientMetadataExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientMetadataException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidGrantExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidGrantException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidScopeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidScopeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SlowDownExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new SlowDownException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnauthorizedClientExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnsupportedGrantTypeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnsupportedGrantTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n", "import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_CreateTokenCommand, se_CreateTokenCommand } from \"../protocols/Aws_restJson1\";\nexport class CreateTokenCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, CreateTokenCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOOIDCClient\";\n        const commandName = \"CreateTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_CreateTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_CreateTokenCommand(output, context);\n    }\n}\n", "export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssooidc\",\n    };\n};\n", "{\n  \"name\": \"@aws-sdk/client-sso-oidc\",\n  \"description\": \"AWS SDK for JavaScript Sso Oidc Client for Node.js, Browser and React Native\",\n  \"version\": \"3.329.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"tsc -p tsconfig.cjs.json\",\n    \"build:docs\": \"typedoc\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo sso-oidc\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"3.0.0\",\n    \"@aws-crypto/sha256-js\": \"3.0.0\",\n    \"@aws-sdk/config-resolver\": \"3.329.0\",\n    \"@aws-sdk/fetch-http-handler\": \"3.329.0\",\n    \"@aws-sdk/hash-node\": \"3.329.0\",\n    \"@aws-sdk/invalid-dependency\": \"3.329.0\",\n    \"@aws-sdk/middleware-content-length\": \"3.329.0\",\n    \"@aws-sdk/middleware-endpoint\": \"3.329.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.329.0\",\n    \"@aws-sdk/middleware-logger\": \"3.329.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.329.0\",\n    \"@aws-sdk/middleware-retry\": \"3.329.0\",\n    \"@aws-sdk/middleware-serde\": \"3.329.0\",\n    \"@aws-sdk/middleware-stack\": \"3.329.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.329.0\",\n    \"@aws-sdk/node-config-provider\": \"3.329.0\",\n    \"@aws-sdk/node-http-handler\": \"3.329.0\",\n    \"@aws-sdk/protocol-http\": \"3.329.0\",\n    \"@aws-sdk/smithy-client\": \"3.329.0\",\n    \"@aws-sdk/types\": \"3.329.0\",\n    \"@aws-sdk/url-parser\": \"3.329.0\",\n    \"@aws-sdk/util-base64\": \"3.310.0\",\n    \"@aws-sdk/util-body-length-browser\": \"3.310.0\",\n    \"@aws-sdk/util-body-length-node\": \"3.310.0\",\n    \"@aws-sdk/util-defaults-mode-browser\": \"3.329.0\",\n    \"@aws-sdk/util-defaults-mode-node\": \"3.329.0\",\n    \"@aws-sdk/util-endpoints\": \"3.329.0\",\n    \"@aws-sdk/util-retry\": \"3.329.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.329.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.329.0\",\n    \"@aws-sdk/util-utf8\": \"3.310.0\",\n    \"tslib\": \"^2.5.0\"\n  },\n  \"devDependencies\": {\n    \"@aws-sdk/service-client-documentation-generator\": \"3.310.0\",\n    \"@tsconfig/node14\": \"1.0.3\",\n    \"@types/node\": \"^14.14.31\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typedoc\": \"0.23.23\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sso-oidc\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-sso-oidc\"\n  }\n}\n", "const p = \"required\", q = \"fn\", r = \"argv\", s = \"ref\";\nconst a = \"PartitionResult\", b = \"tree\", c = \"error\", d = \"endpoint\", e = { [p]: false, \"type\": \"String\" }, f = { [p]: true, \"default\": false, \"type\": \"Boolean\" }, g = { [s]: \"Endpoint\" }, h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] }, i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] }, j = {}, k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] }, l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] }, m = [g], n = [h], o = [i];\nconst _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nexport const ruleSet = _data;\n", "import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n", "import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2019-06-10\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"SSO OIDC\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n", "import packageInfo from \"../package.json\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n", "import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class SSOOIDCClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n", "import { SSOOIDCClient } from \"@aws-sdk/client-sso-oidc\";\nconst ssoOidcClientsHash = {};\nexport const getSsoOidcClient = (ssoRegion) => {\n    if (ssoOidcClientsHash[ssoRegion]) {\n        return ssoOidcClientsHash[ssoRegion];\n    }\n    const ssoOidcClient = new SSOOIDCClient({ region: ssoRegion });\n    ssoOidcClientsHash[ssoRegion] = ssoOidcClient;\n    return ssoOidcClient;\n};\n", "import { CreateTokenCommand } from \"@aws-sdk/client-sso-oidc\";\nimport { getSsoOidcClient } from \"./getSsoOidcClient\";\nexport const getNewSsoOidcToken = (ssoToken, ssoRegion) => {\n    const ssoOidcClient = getSsoOidcClient(ssoRegion);\n    return ssoOidcClient.send(new CreateTokenCommand({\n        clientId: ssoToken.clientId,\n        clientSecret: ssoToken.clientSecret,\n        refreshToken: ssoToken.refreshToken,\n        grantType: \"refresh_token\",\n    }));\n};\n", "import { TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenExpiry = (token) => {\n    if (token.expiration && token.expiration.getTime() < Date.now()) {\n        throw new TokenProviderError(`Token is expired. ${REFRESH_MESSAGE}`, false);\n    }\n};\n", "import { TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenKey = (key, value, forRefresh = false) => {\n    if (typeof value === \"undefined\") {\n        throw new TokenProviderError(`Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${REFRESH_MESSAGE}`, false);\n    }\n};\n", "import { getSSOTokenFilepath } from \"@aws-sdk/shared-ini-file-loader\";\nimport { promises as fsPromises } from \"fs\";\nconst { writeFile } = fsPromises;\nexport const writeSSOTokenToFile = (id, ssoToken) => {\n    const tokenFilepath = getSSOTokenFilepath(id);\n    const tokenString = JSON.stringify(ssoToken, null, 2);\n    return writeFile(tokenFilepath, tokenString);\n};\n", "import { TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName, getSSOTokenFromFile, loadSsoSessionData, parseKnownFiles, } from \"@aws-sdk/shared-ini-file-loader\";\nimport { EXPIRE_WINDOW_MS, REFRESH_MESSAGE } from \"./constants\";\nimport { getNewSsoOidcToken } from \"./getNewSsoOidcToken\";\nimport { validateTokenExpiry } from \"./validateTokenExpiry\";\nimport { validateTokenKey } from \"./validateTokenKey\";\nimport { writeSSOTokenToFile } from \"./writeSSOTokenToFile\";\nconst lastRefreshAttemptTime = new Date(0);\nexport const fromSso = (init = {}) => async () => {\n    const profiles = await parseKnownFiles(init);\n    const profileName = getProfileName(init);\n    const profile = profiles[profileName];\n    if (!profile) {\n        throw new TokenProviderError(`Profile '${profileName}' could not be found in shared credentials file.`, false);\n    }\n    else if (!profile[\"sso_session\"]) {\n        throw new TokenProviderError(`Profile '${profileName}' is missing required property 'sso_session'.`);\n    }\n    const ssoSessionName = profile[\"sso_session\"];\n    const ssoSessions = await loadSsoSessionData(init);\n    const ssoSession = ssoSessions[ssoSessionName];\n    if (!ssoSession) {\n        throw new TokenProviderError(`Sso session '${ssoSessionName}' could not be found in shared credentials file.`, false);\n    }\n    for (const ssoSessionRequiredKey of [\"sso_start_url\", \"sso_region\"]) {\n        if (!ssoSession[ssoSessionRequiredKey]) {\n            throw new TokenProviderError(`Sso session '${ssoSessionName}' is missing required property '${ssoSessionRequiredKey}'.`, false);\n        }\n    }\n    const ssoStartUrl = ssoSession[\"sso_start_url\"];\n    const ssoRegion = ssoSession[\"sso_region\"];\n    let ssoToken;\n    try {\n        ssoToken = await getSSOTokenFromFile(ssoSessionName);\n    }\n    catch (e) {\n        throw new TokenProviderError(`The SSO session token associated with profile=${profileName} was not found or is invalid. ${REFRESH_MESSAGE}`, false);\n    }\n    validateTokenKey(\"accessToken\", ssoToken.accessToken);\n    validateTokenKey(\"expiresAt\", ssoToken.expiresAt);\n    const { accessToken, expiresAt } = ssoToken;\n    const existingToken = { token: accessToken, expiration: new Date(expiresAt) };\n    if (existingToken.expiration.getTime() - Date.now() > EXPIRE_WINDOW_MS) {\n        return existingToken;\n    }\n    if (Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1000) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n    validateTokenKey(\"clientId\", ssoToken.clientId, true);\n    validateTokenKey(\"clientSecret\", ssoToken.clientSecret, true);\n    validateTokenKey(\"refreshToken\", ssoToken.refreshToken, true);\n    try {\n        lastRefreshAttemptTime.setTime(Date.now());\n        const newSsoOidcToken = await getNewSsoOidcToken(ssoToken, ssoRegion);\n        validateTokenKey(\"accessToken\", newSsoOidcToken.accessToken);\n        validateTokenKey(\"expiresIn\", newSsoOidcToken.expiresIn);\n        const newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1000);\n        try {\n            await writeSSOTokenToFile(ssoSessionName, {\n                ...ssoToken,\n                accessToken: newSsoOidcToken.accessToken,\n                expiresAt: newTokenExpiration.toISOString(),\n                refreshToken: newSsoOidcToken.refreshToken,\n            });\n        }\n        catch (error) {\n        }\n        return {\n            token: newSsoOidcToken.accessToken,\n            expiration: newTokenExpiration,\n        };\n    }\n    catch (error) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n};\n", "import { GetRoleCredentialsCommand, SSOClient } from \"@aws-sdk/client-sso\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getSSOTokenFromFile } from \"@aws-sdk/shared-ini-file-loader\";\nimport { fromSso as getSsoTokenProvider } from \"@aws-sdk/token-providers\";\nconst EXPIRE_WINDOW_MS = 15 * 60 * 1000;\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nexport const resolveSSOCredentials = async ({ ssoStartUrl, ssoSession, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, profile, }) => {\n    let token;\n    const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n    if (ssoSession) {\n        try {\n            const _token = await getSsoTokenProvider({ profile })();\n            token = {\n                accessToken: _token.token,\n                expiresAt: new Date(_token.expiration).toISOString(),\n            };\n        }\n        catch (e) {\n            throw new CredentialsProviderError(e.message, SHOULD_FAIL_CREDENTIAL_CHAIN);\n        }\n    }\n    else {\n        try {\n            token = await getSSOTokenFromFile(ssoStartUrl);\n        }\n        catch (e) {\n            throw new CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n        }\n    }\n    if (new Date(token.expiresAt).getTime() - Date.now() <= EXPIRE_WINDOW_MS) {\n        throw new CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { accessToken } = token;\n    const sso = ssoClient || new SSOClient({ region: ssoRegion });\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw CredentialsProviderError.from(e, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration } = {} } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new CredentialsProviderError(\"SSO returns an invalid temporary credential.\", SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return { accessKeyId, secretAccessKey, sessionToken, expiration: new Date(expiration) };\n};\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const validateSsoProfile = (profile) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", ` +\n            `\"sso_region\", \"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, false);\n    }\n    return profile;\n};\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName, loadSsoSessionData, parseKnownFiles, } from \"@aws-sdk/shared-ini-file-loader\";\nimport { isSsoProfile } from \"./isSsoProfile\";\nimport { resolveSSOCredentials } from \"./resolveSSOCredentials\";\nimport { validateSsoProfile } from \"./validateSsoProfile\";\nexport const fromSSO = (init = {}) => async () => {\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, ssoSession } = init;\n    const profileName = getProfileName(init);\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        const profiles = await parseKnownFiles(init);\n        const profile = profiles[profileName];\n        if (!profile) {\n            throw new CredentialsProviderError(`Profile ${profileName} was not found.`);\n        }\n        if (!isSsoProfile(profile)) {\n            throw new CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`);\n        }\n        if (profile?.sso_session) {\n            const ssoSessions = await loadSsoSessionData(init);\n            const session = ssoSessions[profile.sso_session];\n            const conflictMsg = ` configurations in profile ${profileName} and sso-session ${profile.sso_session}`;\n            if (ssoRegion && ssoRegion !== session.sso_region) {\n                throw new CredentialsProviderError(`Conflicting SSO region` + conflictMsg, false);\n            }\n            if (ssoStartUrl && ssoStartUrl !== session.sso_start_url) {\n                throw new CredentialsProviderError(`Conflicting SSO start_url` + conflictMsg, false);\n            }\n            profile.sso_region = session.sso_region;\n            profile.sso_start_url = session.sso_start_url;\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name, sso_session } = validateSsoProfile(profile);\n        return resolveSSOCredentials({\n            ssoStartUrl: sso_start_url,\n            ssoSession: sso_session,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n            profile: profileName,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new CredentialsProviderError(\"Incomplete configuration. The fromSSO() argument hash must include \" +\n            '\"ssoStartUrl\", \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"');\n    }\n    else {\n        return resolveSSOCredentials({\n            ssoStartUrl,\n            ssoSession,\n            ssoAccountId,\n            ssoRegion,\n            ssoRoleName,\n            ssoClient,\n            profile: profileName,\n        });\n    }\n};\n", "import { fromSSO, validateSsoProfile } from \"@aws-sdk/credential-provider-sso\";\nexport { isSsoProfile } from \"@aws-sdk/credential-provider-sso\";\nexport const resolveSsoCredentials = (data) => {\n    const { sso_start_url, sso_account_id, sso_session, sso_region, sso_role_name } = validateSsoProfile(data);\n    return fromSSO({\n        ssoStartUrl: sso_start_url,\n        ssoAccountId: sso_account_id,\n        ssoSession: sso_session,\n        ssoRegion: sso_region,\n        ssoRoleName: sso_role_name,\n    })();\n};\n", "export const isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1;\nexport const resolveStaticCredentials = (profile) => Promise.resolve({\n    accessKeyId: profile.aws_access_key_id,\n    secretAccessKey: profile.aws_secret_access_key,\n    sessionToken: profile.aws_session_token,\n});\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { readFileSync } from \"fs\";\nimport { fromWebToken } from \"./fromWebToken\";\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nexport const fromTokenFile = (init = {}) => async () => {\n    return resolveTokenFile(init);\n};\nconst resolveTokenFile = (init) => {\n    const webIdentityTokenFile = init?.webIdentityTokenFile ?? process.env[ENV_TOKEN_FILE];\n    const roleArn = init?.roleArn ?? process.env[ENV_ROLE_ARN];\n    const roleSessionName = init?.roleSessionName ?? process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new CredentialsProviderError(\"Web identity configuration not specified\");\n    }\n    return fromWebToken({\n        ...init,\n        webIdentityToken: readFileSync(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\n", "import { fromTokenFile } from \"@aws-sdk/credential-provider-web-identity\";\nexport const isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nexport const resolveWebIdentityCredentials = async (profile, options) => fromTokenFile({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n})();\n", "import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { isAssumeRoleProfile, resolveAssumeRoleCredentials } from \"./resolveAssumeRoleCredentials\";\nimport { isProcessProfile, resolveProcessCredentials } from \"./resolveProcessCredentials\";\nimport { isSsoProfile, resolveSsoCredentials } from \"./resolveSsoCredentials\";\nimport { isStaticCredsProfile, resolveStaticCredentials } from \"./resolveStaticCredentials\";\nimport { isWebIdentityProfile, resolveWebIdentityCredentials } from \"./resolveWebIdentityCredentials\";\nexport const resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    if (isAssumeRoleProfile(data)) {\n        return resolveAssumeRoleCredentials(profileName, profiles, options, visitedProfiles);\n    }\n    if (isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    if (isWebIdentityProfile(data)) {\n        return resolveWebIdentityCredentials(data, options);\n    }\n    if (isProcessProfile(data)) {\n        return resolveProcessCredentials(options, profileName);\n    }\n    if (isSsoProfile(data)) {\n        return resolveSsoCredentials(data);\n    }\n    throw new CredentialsProviderError(`Profile ${profileName} could not be found or parsed in shared credentials file.`);\n};\n", "import { getProfileName, parseKnownFiles } from \"@aws-sdk/shared-ini-file-loader\";\nimport { resolveProfileData } from \"./resolveProfileData\";\nexport const fromIni = (init = {}) => async () => {\n    const profiles = await parseKnownFiles(init);\n    return resolveProfileData(getProfileName(init), profiles, init);\n};\n", "import { ENV_CMDS_FULL_URI, ENV_CMDS_RELATIVE_URI, fromContainerMetadata, fromInstanceMetadata, } from \"@aws-sdk/credential-provider-imds\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const remoteProvider = (init) => {\n    if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {\n        return fromContainerMetadata(init);\n    }\n    if (process.env[ENV_IMDS_DISABLED]) {\n        return async () => {\n            throw new CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\");\n        };\n    }\n    return fromInstanceMetadata(init);\n};\n", "import { fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { fromIni } from \"@aws-sdk/credential-provider-ini\";\nimport { fromProcess } from \"@aws-sdk/credential-provider-process\";\nimport { fromSSO } from \"@aws-sdk/credential-provider-sso\";\nimport { fromTokenFile } from \"@aws-sdk/credential-provider-web-identity\";\nimport { chain, CredentialsProviderError, memoize } from \"@aws-sdk/property-provider\";\nimport { ENV_PROFILE } from \"@aws-sdk/shared-ini-file-loader\";\nimport { remoteProvider } from \"./remoteProvider\";\nexport const defaultProvider = (init = {}) => memoize(chain(...(init.profile || process.env[ENV_PROFILE] ? [] : [fromEnv()]), fromSSO(init), fromIni(init), fromProcess(init), fromTokenFile(init), remoteProvider(init), async () => {\n    throw new CredentialsProviderError(\"Could not load credentials from any providers\", false);\n}), (credentials) => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, (credentials) => credentials.expiration !== undefined);\n", "const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"tree\", e = \"stringEquals\", f = \"sigv4\", g = \"sts\", h = \"us-east-1\", i = \"endpoint\", j = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": f, \"signingName\": g, \"signingRegion\": h }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: e, [I]: [q, \"aws-global\"] }], [i]: u, [G]: i }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: c, [I]: [true, { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], [G]: d, rules: [{ conditions: [{ [H]: e, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: i }, w, { conditions: [{ [H]: e, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, h] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: i }, { endpoint: { url: j, properties: { authSchemes: [{ name: f, signingName: g, signingRegion: \"{Region}\" }] }, headers: v }, [G]: i }] }, { conditions: C, [G]: d, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { [G]: d, rules: [{ conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: i }] }] }, { [G]: d, rules: [{ conditions: [p], [G]: d, rules: [{ conditions: [r], [G]: d, rules: [{ conditions: [x, y], [G]: d, rules: [{ conditions: [z, B], [G]: d, rules: [{ [G]: d, rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: i }] }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }] }, { conditions: D, [G]: d, rules: [{ conditions: [z], [G]: d, rules: [{ [G]: d, rules: [{ conditions: [{ [H]: e, [I]: [\"aws-us-gov\", { [H]: l, [I]: [A, \"name\"] }] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: i }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: i }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }] }, { conditions: E, [G]: d, rules: [{ conditions: [B], [G]: d, rules: [{ [G]: d, rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: i }] }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }] }, { [G]: d, rules: [w, { endpoint: { url: j, properties: v, headers: v }, [G]: i }] }] }] }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] }] };\nexport const ruleSet = _data;\n", "import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n", "import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2011-06-15\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"STS\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n", "import packageInfo from \"../package.json\";\nimport { decorateDefaultCredentialProvider } from \"./defaultStsRoleAssumers\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { defaultProvider as credentialDefaultProvider } from \"@aws-sdk/credential-provider-node\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? decorateDefaultCredentialProvider(credentialDefaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n", "import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { resolveStsAuthConfig } from \"@aws-sdk/middleware-sdk-sts\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class STSClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveStsAuthConfig(_config_5, { stsClientCtor: STSClient });\n        const _config_7 = resolveUserAgentConfig(_config_6);\n        super(_config_7);\n        this.config = _config_7;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n", "import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n", "const s = \"required\", t = \"fn\", u = \"argv\", v = \"ref\";\nconst a = \"isSet\", b = \"tree\", c = \"error\", d = \"endpoint\", e = \"PartitionResult\", f = \"getAttr\", g = { [s]: false, \"type\": \"String\" }, h = { [s]: true, \"default\": false, \"type\": \"Boolean\" }, i = { [v]: \"Endpoint\" }, j = { [t]: \"booleanEquals\", [u]: [{ [v]: \"UseFIPS\" }, true] }, k = { [t]: \"booleanEquals\", [u]: [{ [v]: \"UseDualStack\" }, true] }, l = {}, m = { [t]: \"booleanEquals\", [u]: [true, { [t]: f, [u]: [{ [v]: e }, \"supportsFIPS\"] }] }, n = { [v]: e }, o = { [t]: \"booleanEquals\", [u]: [true, { [t]: f, [u]: [n, \"supportsDualStack\"] }] }, p = [j], q = [k], r = [{ [v]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: g, UseDualStack: h, UseFIPS: h, Endpoint: g }, rules: [{ conditions: [{ [t]: a, [u]: [i] }], type: b, rules: [{ conditions: p, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: q, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: i, properties: l, headers: l }, type: d }] }] }, { type: b, rules: [{ conditions: [{ [t]: a, [u]: r }], type: b, rules: [{ conditions: [{ [t]: \"aws.partition\", [u]: r, assign: e }], type: b, rules: [{ conditions: [j, k], type: b, rules: [{ conditions: [m, o], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://ssm-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: l, headers: l }, type: d }] }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: p, type: b, rules: [{ conditions: [m], type: b, rules: [{ type: b, rules: [{ conditions: [{ [t]: \"stringEquals\", [u]: [\"aws-us-gov\", { [t]: f, [u]: [n, \"name\"] }] }], endpoint: { url: \"https://ssm.{Region}.amazonaws.com\", properties: l, headers: l }, type: d }, { endpoint: { url: \"https://ssm-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: l, headers: l }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: q, type: b, rules: [{ conditions: [o], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://ssm.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: l, headers: l }, type: d }] }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { type: b, rules: [{ endpoint: { url: \"https://ssm.{Region}.{PartitionResult#dnsSuffix}\", properties: l, headers: l }, type: d }] }] }] }, { error: \"Invalid Configuration: Missing Region\", type: c }] }] };\nexport const ruleSet = _data;\n", "import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n", "import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2014-11-06\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"SSM\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n", "import packageInfo from \"../package.json\";\nimport { decorateDefaultCredentialProvider } from \"@aws-sdk/client-sts\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { defaultProvider as credentialDefaultProvider } from \"@aws-sdk/credential-provider-node\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? decorateDefaultCredentialProvider(credentialDefaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n", "import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig, } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class SSMClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveAwsAuthConfig(_config_5);\n        const _config_7 = resolveUserAgentConfig(_config_6);\n        super(_config_7);\n        this.config = _config_7;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getAwsAuthPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n", "import { GetParametersCommand, SSMClient, } from \"@aws-sdk/client-ssm\";\nconst ssm = new SSMClient({ region: process.env.SST_REGION });\n// Example:\n// {\n//   Bucket: {\n//     myBucket: {\n//       name: \"my-bucket\",\n//     }\n//   }\n// }\nlet allVariables = {};\n// NOTE: in some setups, top level await must be assigned to a variable,\n//       otherwise it would throw a top level await error.\n//       https://discord.com/channels/983865673656705025/1089184080534446110\nconst _placeholder = await parseEnvironment();\nexport function createProxy(constructName) {\n    const result = new Proxy({}, {\n        get(target, prop) {\n            if (typeof prop === \"string\") {\n                // If SST_APP and SST_STAGE are not set, it is likely the\n                // user is using an older version of SST.\n                // Note: cannot run this check at the top level b/c SvelteKit\n                //       run code analysis after build. The code analysis runs\n                //       the top level code, and would fail b/c \"SST_APP\" and\n                //       \"SST_STAGE\" are undefined at build time.\n                for (const builtInEnv of [\"SST_APP\", \"SST_STAGE\"]) {\n                    if (!process.env[builtInEnv]) {\n                        throw new Error(`Cannot find the ${builtInEnv} environment variable. This is usually the case when you are using an older version of SST. Please update SST to the latest version to use the SST Config feature.`);\n                    }\n                }\n                // normalize prop to convert kebab cases like `my-table` to `my_table`\n                const normProp = normalizeId(prop);\n                if (!(normProp in target)) {\n                    throw new Error(`Cannot use ${constructName}.${String(prop)}. Please make sure it is bound to this function.`);\n                }\n                return Reflect.get(target, normProp);\n            }\n            return Reflect.get(target, prop);\n        },\n    });\n    Object.assign(result, getVariables2(constructName));\n    return result;\n}\nexport function getVariables2(constructName) {\n    return allVariables[constructName] || {};\n}\nasync function parseEnvironment() {\n    const variablesFromSsm = [];\n    const variablesFromSecret = [];\n    Object.keys(process.env)\n        .filter((name) => name.startsWith(\"SST_\"))\n        .forEach((name) => {\n        const variable = parseEnvName(name);\n        // Ignore if env var is not in the correct format\n        if (!variable.constructName ||\n            !variable.constructId ||\n            !variable.propName) {\n            return;\n        }\n        const value = process.env[name];\n        if (value === \"__FETCH_FROM_SSM__\") {\n            variablesFromSsm.push(variable);\n        }\n        else if (value.startsWith(\"__FETCH_FROM_SECRET__:\")) {\n            variablesFromSecret.push([variable, value.split(\":\")[1]]);\n        }\n        else {\n            storeVariable(variable, value);\n        }\n    });\n    // Fetch values from SSM\n    await fetchValuesFromSSM(variablesFromSsm);\n    // Fetch values from Secrets\n    variablesFromSecret.forEach(([variable, secretName]) => {\n        const value = allVariables[\"Secret\"]?.[secretName]?.value;\n        if (value) {\n            storeVariable(variable, value);\n        }\n    });\n    return allVariables;\n}\nasync function fetchValuesFromSSM(variablesFromSsm) {\n    // Get all env vars that need to be fetched from SSM\n    const ssmPaths = variablesFromSsm.map((variable) => buildSsmPath(variable));\n    if (ssmPaths.length === 0)\n        return;\n    // Fetch\n    const results = await loadSecrets(ssmPaths);\n    results.validParams.forEach((item) => {\n        const variable = parseSsmPath(item.Name);\n        storeVariable(variable, item.Value);\n    });\n    // Get all fallback values to be fetched\n    const ssmFallbackPaths = results.invalidParams\n        .map((name) => parseSsmPath(name))\n        .filter((variable) => variable.constructName === \"Secret\")\n        .map((variable) => buildSsmFallbackPath(variable));\n    if (ssmFallbackPaths.length === 0)\n        return;\n    // Fetch fallback values\n    const fallbackResults = await loadSecrets(ssmFallbackPaths);\n    fallbackResults.validParams.forEach((item) => {\n        const variable = parseSsmFallbackPath(item.Name);\n        storeVariable(variable, item.Value);\n    });\n    // Throw error if any values are missing\n    const missingSecrets = fallbackResults.invalidParams\n        .map((name) => parseSsmFallbackPath(name))\n        .filter((variable) => variable.constructName === \"Secret\")\n        .map((variable) => variable.constructId);\n    if (missingSecrets.length > 0) {\n        throw new Error(`The following secrets were not found: ${missingSecrets.join(\", \")}`);\n    }\n}\nasync function loadSecrets(paths) {\n    // Split paths into chunks of 10\n    const chunks = [];\n    for (let i = 0; i < paths.length; i += 10) {\n        chunks.push(paths.slice(i, i + 10));\n    }\n    // Fetch secrets\n    const validParams = [];\n    const invalidParams = [];\n    await Promise.all(chunks.map(async (chunk) => {\n        const command = new GetParametersCommand({\n            Names: chunk,\n            WithDecryption: true,\n        });\n        const result = await ssm.send(command);\n        validParams.push(...(result.Parameters || []));\n        invalidParams.push(...(result.InvalidParameters || []));\n    }));\n    return { validParams, invalidParams };\n}\nfunction parseEnvName(env) {\n    const [_SST, constructName, propName, ...idParts] = env.split(\"_\");\n    return {\n        constructName,\n        constructId: idParts.join(\"_\"),\n        propName,\n    };\n}\nfunction parseSsmPath(path) {\n    const prefix = ssmPrefix();\n    const parts = path.substring(prefix.length).split(\"/\");\n    return {\n        constructName: parts[0],\n        constructId: parts[1],\n        propName: parts[2],\n    };\n}\nfunction parseSsmFallbackPath(path) {\n    const parts = path.split(\"/\");\n    return {\n        constructName: parts[4],\n        constructId: parts[5],\n        propName: parts[6],\n    };\n}\nfunction buildSsmPath(data) {\n    return `${ssmPrefix()}${data.constructName}/${data.constructId}/${data.propName}`;\n}\nfunction buildSsmFallbackPath(data) {\n    return `/sst/${process.env.SST_APP}/.fallback/${data.constructName}/${data.constructId}/${data.propName}`;\n}\nfunction normalizeId(name) {\n    return name.replace(/-/g, \"_\");\n}\nfunction ssmPrefix() {\n    return process.env.SST_SSM_PREFIX || \"\";\n}\nfunction storeVariable(variable, value) {\n    const { constructId: id, constructName: c, propName: prop } = variable;\n    allVariables[c] = allVariables[c] || {};\n    allVariables[c][id] = allVariables[c][id] || {};\n    allVariables[c][id][prop] = value;\n}\n", "export const Context = {\n    create,\n    reset,\n    memo,\n};\nconst state = {\n    requestID: \"\",\n    contexts: new Map(),\n    tracking: [],\n};\nfunction create(cb, name) {\n    const id = typeof cb === \"string\" ? cb : name || Symbol(cb?.toString());\n    return {\n        use() {\n            let result = state.contexts.get(id);\n            if (!result) {\n                if (!cb || typeof cb === \"string\")\n                    throw new Error(`\"${String(id)}\" context was not provided.`);\n                state.tracking.push(id);\n                const value = cb();\n                state.tracking.pop();\n                result = {\n                    value,\n                    dependants: new Set(),\n                };\n                state.contexts.set(id, result);\n            }\n            const last = state.tracking[state.tracking.length - 1];\n            // Use is being called within another context booting up so mark it as a dependent\n            if (last)\n                result.dependants.add(last);\n            return result.value;\n        },\n        provide(value) {\n            // If a new request has started, automatically clear all contexts\n            const requestID = global[Symbol.for(\"aws.lambda.runtime.requestId\")];\n            if (state.requestID !== requestID) {\n                state.requestID = requestID;\n                reset();\n            }\n            // If the context is already set, we need to reset its dependants\n            resetDependencies(id);\n            state.contexts.set(id, {\n                value,\n                dependants: new Set(),\n            });\n        },\n    };\n}\nfunction reset() {\n    state.contexts.clear();\n}\nfunction resetDependencies(id) {\n    const info = state.contexts.get(id);\n    if (!info)\n        return;\n    for (const dependantID of info.dependants) {\n        resetDependencies(dependantID);\n        state.contexts.delete(dependantID);\n    }\n}\nexport function memo(cb, name) {\n    const ctx = create(cb, name);\n    return ctx.use;\n}\n", "import { Context } from \"./context.js\";\nconst RequestContext = Context.create(\"RequestContext\");\nexport function useEvent(type) {\n    const ctx = RequestContext.use();\n    if (ctx.type !== type)\n        throw new Error(`Expected ${type} event`);\n    return ctx.event;\n}\nexport function useLambdaContext() {\n    const ctx = RequestContext.use();\n    return ctx.context;\n}\nexport function Handler(type, cb) {\n    return function handler(event, context) {\n        RequestContext.provide({ type, event: event, context });\n        return cb(event, context);\n    };\n}\n", "import { createProxy } from \"../util/index.js\";\nimport { Context } from \"../../context/context.js\";\nimport { useEvent, Handler } from \"../../context/handler.js\";\nexport const Api = /* @__PURE__ */ createProxy(\"Api\");\nexport const AppSyncApi = \n/* @__PURE__ */ createProxy(\"AppSyncApi\");\nexport const ApiGatewayV1Api = \n/* @__PURE__ */ createProxy(\"ApiGatewayV1Api\");\nexport const WebSocketApi = \n/* @__PURE__ */ createProxy(\"WebSocketApi\");\n/**\n * Create a new api handler that can be used to create an authenticated session.\n *\n * @example\n * ```ts\n * export const handler = ApiHandler({\n * })\n * ```\n */\nexport function ApiHandler(cb) {\n    return Handler(\"api\", async (evt, ctx) => {\n        const result = await cb(evt, ctx);\n        const serialized = useResponse().serialize(result || {});\n        return serialized;\n    });\n}\nexport const useCookies = /* @__PURE__ */ Context.memo(() => {\n    const evt = useEvent(\"api\");\n    const cookies = evt.cookies || [];\n    return Object.fromEntries(cookies.map((c) => c.split(\"=\")).map(([k, v]) => [k, decodeURIComponent(v)]));\n});\nexport function useCookie(name) {\n    const cookies = useCookies();\n    return cookies[name];\n}\nexport const useBody = /* @__PURE__ */ Context.memo(() => {\n    const evt = useEvent(\"api\");\n    if (!evt.body)\n        return;\n    const body = evt.isBase64Encoded\n        ? Buffer.from(evt.body, \"base64\").toString()\n        : evt.body;\n    return body;\n});\nexport const useJsonBody = /* @__PURE__ */ Context.memo(() => {\n    const body = useBody();\n    if (!body)\n        return;\n    return JSON.parse(body);\n});\nexport const useFormData = /* @__PURE__ */ Context.memo(() => {\n    const body = useBody();\n    if (!body)\n        return;\n    const params = new URLSearchParams(body);\n    return params;\n});\nexport const usePath = /* @__PURE__ */ Context.memo(() => {\n    const evt = useEvent(\"api\");\n    return evt.rawPath.split(\"/\").filter(Boolean);\n});\nexport const useResponse = /* @__PURE__ */ Context.memo(() => {\n    const response = {\n        headers: {},\n        cookies: [],\n    };\n    const result = {\n        cookies(values, options) {\n            for (const [key, value] of Object.entries(values)) {\n                result.cookie({\n                    key,\n                    value,\n                    ...options,\n                });\n            }\n            return result;\n        },\n        cookie(input) {\n            const value = encodeURIComponent(input.value);\n            const parts = [input.key + \"=\" + value];\n            if (input.domain)\n                parts.push(\"Domain=\" + input.domain);\n            if (input.path)\n                parts.push(\"Path=\" + input.path);\n            if (input.expires)\n                parts.push(\"Expires=\" + input.expires.toUTCString());\n            if (input.maxAge)\n                parts.push(\"Max-Age=\" + input.maxAge);\n            if (input.httpOnly)\n                parts.push(\"HttpOnly\");\n            if (input.secure)\n                parts.push(\"Secure\");\n            if (input.sameSite)\n                parts.push(\"SameSite=\" + input.sameSite);\n            response.cookies.push(parts.join(\"; \"));\n            return result;\n        },\n        status(code) {\n            response.statusCode = code;\n            return result;\n        },\n        header(key, value) {\n            response.headers[key] = value;\n            return result;\n        },\n        serialize(input) {\n            return {\n                ...response,\n                ...input,\n                cookies: [...(input.cookies || []), ...response.cookies],\n                headers: {\n                    ...response.headers,\n                    ...input.headers,\n                },\n            };\n        },\n    };\n    return result;\n});\nexport function useDomainName() {\n    const evt = useEvent(\"api\");\n    return evt.requestContext.domainName;\n}\nexport function useMethod() {\n    const evt = useEvent(\"api\");\n    return evt.requestContext.http.method;\n}\nexport function useHeaders() {\n    const evt = useEvent(\"api\");\n    return evt.headers || {};\n}\nexport function useHeader(key) {\n    const headers = useHeaders();\n    return headers[key];\n}\nexport function useFormValue(name) {\n    const params = useFormData();\n    return params?.get(name);\n}\nexport function useQueryParams() {\n    const evt = useEvent(\"api\");\n    const query = evt.queryStringParameters || {};\n    return query;\n}\nexport function useQueryParam(name) {\n    return useQueryParams()[name];\n}\nexport function usePathParams() {\n    const evt = useEvent(\"api\");\n    const path = evt.pathParameters || {};\n    return path;\n}\nexport function usePathParam(name) {\n    return usePathParams()[name];\n}\n", "import { getVariables2 } from \"../util/index.js\";\nimport { Handler } from \"../../context/handler.js\";\nimport { useDomainName, usePath } from \"../api/index.js\";\nconst className = \"Auth\";\n// Each function can only be attached to one Auth construct, so we can\n// assume there is only one entry in authData.\nconst authData = getVariables2(className);\nconst authValues = Object.values(authData);\nlet prefix;\nlet publicKey;\nlet privateKey;\nif (authValues.length !== 0) {\n    prefix = authValues[0].prefix;\n    publicKey = authValues[0].publicKey;\n    privateKey = authValues[0].privateKey;\n}\nexport function getPublicKey() {\n    if (!publicKey) {\n        throw new Error(`Cannot use ${className}.publicKey. Please make sure it is bound to this function.`);\n    }\n    return publicKey;\n}\nexport function getPrivateKey() {\n    if (!privateKey) {\n        throw new Error(`Cannot use ${className}.privateKey. Please make sure it is bound to this function.`);\n    }\n    return privateKey;\n}\nexport function getPrefix() {\n    if (!prefix) {\n        throw new Error(`Cannot use ${className}.prefix. Please make sure it is bound to this function.`);\n    }\n    return prefix;\n}\n/**\n * Create a new auth handler that can be used to create an authenticated session.\n *\n * @example\n * ```ts\n * export const handler = AuthHandler({\n *   providers: {\n *     google: {\n *       adapter: GoogleAdapter,\n *       clientId: \"...\",\n *       onSuccess: (claims) => {\n *       }\n *     }\n *   }\n * })\n * ```\n */\nexport function AuthHandler(config) {\n    return Handler(\"api\", async () => {\n        const path = usePath();\n        const prefix = getPrefix().split(\"/\").filter(Boolean).join(\"/\");\n        if (path.join(\"/\") === prefix) {\n            return {\n                statusCode: 200,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(Object.fromEntries(Object.keys(config.providers).map((x) => [\n                    x,\n                    `https://${useDomainName()}/${prefix}/${x}/authorize`,\n                ])), null, 4),\n            };\n        }\n        const [providerName] = path.slice(-2);\n        const provider = config.providers[providerName];\n        if (!provider)\n            throw new Error(\"No matching provider found\");\n        return provider();\n    });\n}\n", "import { createSigner, createVerifier } from \"fast-jwt\";\nimport { Context } from \"../../context/context.js\";\nimport { useCookie, useHeader } from \"../api/index.js\";\nimport { getPrivateKey, getPublicKey } from \"./auth.js\";\nconst SessionMemo = /* @__PURE__ */ Context.memo(() => {\n    let token = \"\";\n    const header = useHeader(\"authorization\");\n    if (header)\n        token = header.substring(7);\n    const cookie = useCookie(\"auth-token\");\n    if (cookie)\n        token = cookie;\n    if (token) {\n        const jwt = createVerifier({\n            algorithms: [\"RS512\"],\n            key: getPublicKey(),\n        })(token);\n        return jwt;\n    }\n    return {\n        type: \"public\",\n        properties: {},\n    };\n});\n// This is a crazy TS hack to prevent the types from being evaluated too soon\nexport function useSession() {\n    const ctx = SessionMemo();\n    return ctx;\n}\n/**\n * Creates a new session token with provided information\n *\n * @example\n * ```js\n * Session.create({\n *   type: \"user\",\n *   properties: {\n *     userID: \"123\"\n *   }\n * })\n * ```\n */\nfunction create(input) {\n    const signer = createSigner({\n        ...input.options,\n        key: getPrivateKey(),\n        algorithm: \"RS512\",\n    });\n    const token = signer({\n        type: input.type,\n        properties: input.properties,\n    });\n    return token;\n}\n/**\n * Returns a 302 redirect with an auth-token cookie set with the provided session information\n *\n * @example\n * ```js\n * Session.cookie({\n *   type: \"user\",\n *   properties: {\n *     userID: \"123\"\n *   },\n *   redirect: \"https://app.example.com/\"\n * })\n * ```\n */\nexport function cookie(input) {\n    const token = create(input);\n    const expires = new Date(Date.now() + (input.options?.expiresIn || 1000 * 60 * 60 * 24 * 7));\n    return {\n        statusCode: 302,\n        headers: {\n            location: input.redirect,\n        },\n        cookies: [\n            `auth-token=${token}; HttpOnly; SameSite=None; Secure; Path=/; Expires=${expires}`,\n        ],\n    };\n}\n/**\n * Returns a 302 redirect with a query parameter named token set with the jwt value\n *\n * @example\n * ```js\n * Session.parameter({\n *   type: \"user\",\n *   properties: {\n *     userID: \"123\"\n *   },\n *   redirect: \"https://app.example.com/\"\n * })\n * ```\n */\nexport function parameter(input) {\n    const token = create(input);\n    return {\n        statusCode: 302,\n        headers: {\n            location: input.redirect + \"?token=\" + token,\n        },\n    };\n}\nexport const Session = {\n    create,\n    cookie,\n    parameter,\n};\n", "export function createAdapter(adapter) {\n    return adapter;\n}\n", "import mod from './index.js';\n\nexport default mod;\nexport const Issuer = mod.Issuer;\nexport const Strategy = mod.Strategy;\nexport const TokenSet = mod.TokenSet;\nexport const errors = mod.errors;\nexport const custom = mod.custom;\nexport const generators = mod.generators;\n", "import { generators } from \"openid-client\";\nimport { useCookie, useDomainName, usePath, useQueryParams, } from \"../../api/index.js\";\nimport { createAdapter } from \"./adapter.js\";\nexport const OauthAdapter = /* @__PURE__ */ createAdapter((config) => {\n    return async function () {\n        const [step] = usePath().slice(-1);\n        const callback = \"https://\" +\n            [useDomainName(), ...usePath().slice(0, -1), \"callback\"].join(\"/\");\n        const client = new config.issuer.Client({\n            client_id: config.clientID,\n            client_secret: config.clientSecret,\n            redirect_uris: [callback],\n            response_types: [\"code\"],\n        });\n        if (step === \"authorize\") {\n            const code_verifier = generators.codeVerifier();\n            const state = generators.state();\n            const code_challenge = generators.codeChallenge(code_verifier);\n            const url = client.authorizationUrl({\n                scope: config.scope,\n                code_challenge: code_challenge,\n                code_challenge_method: \"S256\",\n                state,\n                prompt: config.prompt,\n            });\n            const expires = new Date(Date.now() + 1000 * 30).toUTCString();\n            return {\n                statusCode: 302,\n                cookies: [\n                    `auth-code-verifier=${code_verifier}; HttpOnly; expires=${expires}`,\n                    `auth-state=${state}; HttpOnly; expires=${expires}`,\n                ],\n                headers: {\n                    location: url,\n                },\n            };\n        }\n        if (step === \"callback\") {\n            const params = useQueryParams();\n            const code_verifier = useCookie(\"auth-code-verifier\");\n            const state = useCookie(\"auth-state\");\n            const tokenset = await client[config.issuer.metadata.userinfo_endpoint\n                ? \"callback\"\n                : \"oauthCallback\"](callback, params, {\n                code_verifier,\n                state,\n            });\n            return config.onSuccess(tokenset, client);\n        }\n        throw new Error(\"Invalid auth request\");\n    };\n});\n", "import { generators } from \"openid-client\";\nimport { useCookie, useDomainName, useFormData, usePath, } from \"../../api/index.js\";\nimport { createAdapter } from \"./adapter.js\";\nexport const OidcAdapter = /* @__PURE__ */ createAdapter((config) => {\n    return async function () {\n        const [step] = usePath().slice(-1);\n        const callback = \"https://\" +\n            [useDomainName(), ...usePath().slice(0, -1), \"callback\"].join(\"/\");\n        const client = new config.issuer.Client({\n            client_id: config.clientID,\n            redirect_uris: [callback],\n            response_types: [\"id_token\"],\n        });\n        if (step === \"authorize\") {\n            const nonce = generators.nonce();\n            const state = generators.state();\n            const url = client.authorizationUrl({\n                scope: config.scope,\n                response_mode: \"form_post\",\n                nonce,\n                state,\n            });\n            const expires = new Date(Date.now() + 1000 * 30).toUTCString();\n            return {\n                statusCode: 302,\n                cookies: [\n                    `auth-nonce=${nonce}; HttpOnly; expires=${expires}`,\n                    `auth-state=${state}; HttpOnly; expires=${expires}`,\n                ],\n                headers: {\n                    location: url,\n                },\n            };\n        }\n        if (step === \"callback\") {\n            const form = useFormData();\n            if (!form)\n                throw new Error(\"Missing body\");\n            const params = Object.fromEntries(form.entries());\n            const nonce = useCookie(\"auth-nonce\");\n            const state = useCookie(\"auth-state\");\n            const tokenset = await client.callback(callback, params, {\n                nonce,\n                state,\n            });\n            return config.onSuccess(tokenset, client);\n        }\n        throw new Error(\"Invalid auth request\");\n    };\n});\n", "import { Issuer } from \"openid-client\";\nimport { createAdapter } from \"./adapter.js\";\nimport { OauthAdapter } from \"./oauth.js\";\nimport { OidcAdapter } from \"./oidc.js\";\nconst issuer = await Issuer.discover(\"https://accounts.google.com\");\nexport const GoogleAdapter = /* @__PURE__ */ createAdapter((config) => {\n    if (\"clientSecret\" in config) {\n        return OauthAdapter({\n            issuer,\n            ...config,\n        });\n    }\n    return OidcAdapter({\n        issuer,\n        scope: \"openid email profile\",\n        ...config,\n    });\n});\n", "import { createProxy } from \"../util/index.js\";\nexport const Table = \n/* @__PURE__ */\ncreateProxy(\"Table\");\n", "import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class DynamoDBServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, DynamoDBServiceException.prototype);\n    }\n}\n", "import { DynamoDBServiceException as __BaseException } from \"./DynamoDBServiceException\";\nexport const AttributeAction = {\n    ADD: \"ADD\",\n    DELETE: \"DELETE\",\n    PUT: \"PUT\",\n};\nexport const ScalarAttributeType = {\n    B: \"B\",\n    N: \"N\",\n    S: \"S\",\n};\nexport const BackupStatus = {\n    AVAILABLE: \"AVAILABLE\",\n    CREATING: \"CREATING\",\n    DELETED: \"DELETED\",\n};\nexport const BackupType = {\n    AWS_BACKUP: \"AWS_BACKUP\",\n    SYSTEM: \"SYSTEM\",\n    USER: \"USER\",\n};\nexport const BillingMode = {\n    PAY_PER_REQUEST: \"PAY_PER_REQUEST\",\n    PROVISIONED: \"PROVISIONED\",\n};\nexport const KeyType = {\n    HASH: \"HASH\",\n    RANGE: \"RANGE\",\n};\nexport const ProjectionType = {\n    ALL: \"ALL\",\n    INCLUDE: \"INCLUDE\",\n    KEYS_ONLY: \"KEYS_ONLY\",\n};\nexport const SSEType = {\n    AES256: \"AES256\",\n    KMS: \"KMS\",\n};\nexport const SSEStatus = {\n    DISABLED: \"DISABLED\",\n    DISABLING: \"DISABLING\",\n    ENABLED: \"ENABLED\",\n    ENABLING: \"ENABLING\",\n    UPDATING: \"UPDATING\",\n};\nexport const StreamViewType = {\n    KEYS_ONLY: \"KEYS_ONLY\",\n    NEW_AND_OLD_IMAGES: \"NEW_AND_OLD_IMAGES\",\n    NEW_IMAGE: \"NEW_IMAGE\",\n    OLD_IMAGE: \"OLD_IMAGE\",\n};\nexport const TimeToLiveStatus = {\n    DISABLED: \"DISABLED\",\n    DISABLING: \"DISABLING\",\n    ENABLED: \"ENABLED\",\n    ENABLING: \"ENABLING\",\n};\nexport class BackupInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"BackupInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BackupInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BackupInUseException.prototype);\n    }\n}\nexport class BackupNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"BackupNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BackupNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BackupNotFoundException.prototype);\n    }\n}\nexport const BackupTypeFilter = {\n    ALL: \"ALL\",\n    AWS_BACKUP: \"AWS_BACKUP\",\n    SYSTEM: \"SYSTEM\",\n    USER: \"USER\",\n};\nexport const ReturnConsumedCapacity = {\n    INDEXES: \"INDEXES\",\n    NONE: \"NONE\",\n    TOTAL: \"TOTAL\",\n};\nexport const BatchStatementErrorCodeEnum = {\n    AccessDenied: \"AccessDenied\",\n    ConditionalCheckFailed: \"ConditionalCheckFailed\",\n    DuplicateItem: \"DuplicateItem\",\n    InternalServerError: \"InternalServerError\",\n    ItemCollectionSizeLimitExceeded: \"ItemCollectionSizeLimitExceeded\",\n    ProvisionedThroughputExceeded: \"ProvisionedThroughputExceeded\",\n    RequestLimitExceeded: \"RequestLimitExceeded\",\n    ResourceNotFound: \"ResourceNotFound\",\n    ThrottlingError: \"ThrottlingError\",\n    TransactionConflict: \"TransactionConflict\",\n    ValidationError: \"ValidationError\",\n};\nexport class InternalServerError extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InternalServerError\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"InternalServerError\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServerError.prototype);\n    }\n}\nexport class RequestLimitExceeded extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RequestLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RequestLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RequestLimitExceeded.prototype);\n    }\n}\nexport class InvalidEndpointException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidEndpointException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidEndpointException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidEndpointException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ProvisionedThroughputExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ProvisionedThroughputExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ProvisionedThroughputExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ProvisionedThroughputExceededException.prototype);\n    }\n}\nexport class ResourceNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport const ReturnItemCollectionMetrics = {\n    NONE: \"NONE\",\n    SIZE: \"SIZE\",\n};\nexport class ItemCollectionSizeLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ItemCollectionSizeLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ItemCollectionSizeLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ItemCollectionSizeLimitExceededException.prototype);\n    }\n}\nexport const ComparisonOperator = {\n    BEGINS_WITH: \"BEGINS_WITH\",\n    BETWEEN: \"BETWEEN\",\n    CONTAINS: \"CONTAINS\",\n    EQ: \"EQ\",\n    GE: \"GE\",\n    GT: \"GT\",\n    IN: \"IN\",\n    LE: \"LE\",\n    LT: \"LT\",\n    NE: \"NE\",\n    NOT_CONTAINS: \"NOT_CONTAINS\",\n    NOT_NULL: \"NOT_NULL\",\n    NULL: \"NULL\",\n};\nexport class ConditionalCheckFailedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ConditionalCheckFailedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ConditionalCheckFailedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ConditionalCheckFailedException.prototype);\n    }\n}\nexport const ConditionalOperator = {\n    AND: \"AND\",\n    OR: \"OR\",\n};\nexport const ReturnValuesOnConditionCheckFailure = {\n    ALL_OLD: \"ALL_OLD\",\n    NONE: \"NONE\",\n};\nexport const ContinuousBackupsStatus = {\n    DISABLED: \"DISABLED\",\n    ENABLED: \"ENABLED\",\n};\nexport const PointInTimeRecoveryStatus = {\n    DISABLED: \"DISABLED\",\n    ENABLED: \"ENABLED\",\n};\nexport class ContinuousBackupsUnavailableException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ContinuousBackupsUnavailableException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ContinuousBackupsUnavailableException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ContinuousBackupsUnavailableException.prototype);\n    }\n}\nexport const ContributorInsightsAction = {\n    DISABLE: \"DISABLE\",\n    ENABLE: \"ENABLE\",\n};\nexport const ContributorInsightsStatus = {\n    DISABLED: \"DISABLED\",\n    DISABLING: \"DISABLING\",\n    ENABLED: \"ENABLED\",\n    ENABLING: \"ENABLING\",\n    FAILED: \"FAILED\",\n};\nexport class LimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"LimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n    }\n}\nexport class TableInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TableInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TableInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TableInUseException.prototype);\n    }\n}\nexport class TableNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TableNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TableNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TableNotFoundException.prototype);\n    }\n}\nexport const GlobalTableStatus = {\n    ACTIVE: \"ACTIVE\",\n    CREATING: \"CREATING\",\n    DELETING: \"DELETING\",\n    UPDATING: \"UPDATING\",\n};\nexport const ReplicaStatus = {\n    ACTIVE: \"ACTIVE\",\n    CREATING: \"CREATING\",\n    CREATION_FAILED: \"CREATION_FAILED\",\n    DELETING: \"DELETING\",\n    INACCESSIBLE_ENCRYPTION_CREDENTIALS: \"INACCESSIBLE_ENCRYPTION_CREDENTIALS\",\n    REGION_DISABLED: \"REGION_DISABLED\",\n    UPDATING: \"UPDATING\",\n};\nexport const TableClass = {\n    STANDARD: \"STANDARD\",\n    STANDARD_INFREQUENT_ACCESS: \"STANDARD_INFREQUENT_ACCESS\",\n};\nexport class GlobalTableAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"GlobalTableAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"GlobalTableAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, GlobalTableAlreadyExistsException.prototype);\n    }\n}\nexport const IndexStatus = {\n    ACTIVE: \"ACTIVE\",\n    CREATING: \"CREATING\",\n    DELETING: \"DELETING\",\n    UPDATING: \"UPDATING\",\n};\nexport const TableStatus = {\n    ACTIVE: \"ACTIVE\",\n    ARCHIVED: \"ARCHIVED\",\n    ARCHIVING: \"ARCHIVING\",\n    CREATING: \"CREATING\",\n    DELETING: \"DELETING\",\n    INACCESSIBLE_ENCRYPTION_CREDENTIALS: \"INACCESSIBLE_ENCRYPTION_CREDENTIALS\",\n    UPDATING: \"UPDATING\",\n};\nexport class ResourceInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceInUseException.prototype);\n    }\n}\nexport const ReturnValue = {\n    ALL_NEW: \"ALL_NEW\",\n    ALL_OLD: \"ALL_OLD\",\n    NONE: \"NONE\",\n    UPDATED_NEW: \"UPDATED_NEW\",\n    UPDATED_OLD: \"UPDATED_OLD\",\n};\nexport class TransactionConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TransactionConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TransactionConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TransactionConflictException.prototype);\n    }\n}\nexport const ExportFormat = {\n    DYNAMODB_JSON: \"DYNAMODB_JSON\",\n    ION: \"ION\",\n};\nexport const ExportStatus = {\n    COMPLETED: \"COMPLETED\",\n    FAILED: \"FAILED\",\n    IN_PROGRESS: \"IN_PROGRESS\",\n};\nexport const S3SseAlgorithm = {\n    AES256: \"AES256\",\n    KMS: \"KMS\",\n};\nexport class ExportNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExportNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExportNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExportNotFoundException.prototype);\n    }\n}\nexport class GlobalTableNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"GlobalTableNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"GlobalTableNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, GlobalTableNotFoundException.prototype);\n    }\n}\nexport const ImportStatus = {\n    CANCELLED: \"CANCELLED\",\n    CANCELLING: \"CANCELLING\",\n    COMPLETED: \"COMPLETED\",\n    FAILED: \"FAILED\",\n    IN_PROGRESS: \"IN_PROGRESS\",\n};\nexport const InputCompressionType = {\n    GZIP: \"GZIP\",\n    NONE: \"NONE\",\n    ZSTD: \"ZSTD\",\n};\nexport const InputFormat = {\n    CSV: \"CSV\",\n    DYNAMODB_JSON: \"DYNAMODB_JSON\",\n    ION: \"ION\",\n};\nexport class ImportNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ImportNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ImportNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ImportNotFoundException.prototype);\n    }\n}\nexport const DestinationStatus = {\n    ACTIVE: \"ACTIVE\",\n    DISABLED: \"DISABLED\",\n    DISABLING: \"DISABLING\",\n    ENABLE_FAILED: \"ENABLE_FAILED\",\n    ENABLING: \"ENABLING\",\n};\nexport class DuplicateItemException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"DuplicateItemException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DuplicateItemException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DuplicateItemException.prototype);\n    }\n}\nexport class IdempotentParameterMismatchException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IdempotentParameterMismatchException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IdempotentParameterMismatchException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IdempotentParameterMismatchException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class TransactionInProgressException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TransactionInProgressException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TransactionInProgressException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TransactionInProgressException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ExportConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExportConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExportConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExportConflictException.prototype);\n    }\n}\nexport class InvalidExportTimeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidExportTimeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidExportTimeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidExportTimeException.prototype);\n    }\n}\nexport class PointInTimeRecoveryUnavailableException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"PointInTimeRecoveryUnavailableException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PointInTimeRecoveryUnavailableException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PointInTimeRecoveryUnavailableException.prototype);\n    }\n}\nexport class ImportConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ImportConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ImportConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ImportConflictException.prototype);\n    }\n}\nexport const Select = {\n    ALL_ATTRIBUTES: \"ALL_ATTRIBUTES\",\n    ALL_PROJECTED_ATTRIBUTES: \"ALL_PROJECTED_ATTRIBUTES\",\n    COUNT: \"COUNT\",\n    SPECIFIC_ATTRIBUTES: \"SPECIFIC_ATTRIBUTES\",\n};\nexport class TableAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TableAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TableAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TableAlreadyExistsException.prototype);\n    }\n}\nexport class InvalidRestoreTimeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRestoreTimeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRestoreTimeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRestoreTimeException.prototype);\n    }\n}\nexport class ReplicaAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ReplicaAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ReplicaAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ReplicaAlreadyExistsException.prototype);\n    }\n}\nexport class ReplicaNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ReplicaNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ReplicaNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ReplicaNotFoundException.prototype);\n    }\n}\nexport class IndexNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IndexNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IndexNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IndexNotFoundException.prototype);\n    }\n}\nexport var AttributeValue;\n(function (AttributeValue) {\n    AttributeValue.visit = (value, visitor) => {\n        if (value.S !== undefined)\n            return visitor.S(value.S);\n        if (value.N !== undefined)\n            return visitor.N(value.N);\n        if (value.B !== undefined)\n            return visitor.B(value.B);\n        if (value.SS !== undefined)\n            return visitor.SS(value.SS);\n        if (value.NS !== undefined)\n            return visitor.NS(value.NS);\n        if (value.BS !== undefined)\n            return visitor.BS(value.BS);\n        if (value.M !== undefined)\n            return visitor.M(value.M);\n        if (value.L !== undefined)\n            return visitor.L(value.L);\n        if (value.NULL !== undefined)\n            return visitor.NULL(value.NULL);\n        if (value.BOOL !== undefined)\n            return visitor.BOOL(value.BOOL);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(AttributeValue || (AttributeValue = {}));\nexport class TransactionCanceledException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TransactionCanceledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TransactionCanceledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TransactionCanceledException.prototype);\n        this.Message = opts.Message;\n        this.CancellationReasons = opts.CancellationReasons;\n    }\n}\n", "import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { _json, decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, expectUnion as __expectUnion, limitedParseDouble as __limitedParseDouble, parseEpochTimestamp as __parseEpochTimestamp, serializeFloat as __serializeFloat, take, withBaseException, } from \"@aws-sdk/smithy-client\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\nimport { DynamoDBServiceException as __BaseException } from \"../models/DynamoDBServiceException\";\nimport { AttributeValue, BackupInUseException, BackupNotFoundException, ConditionalCheckFailedException, ContinuousBackupsUnavailableException, DuplicateItemException, ExportConflictException, ExportNotFoundException, GlobalTableAlreadyExistsException, GlobalTableNotFoundException, IdempotentParameterMismatchException, ImportConflictException, ImportNotFoundException, IndexNotFoundException, InternalServerError, InvalidEndpointException, InvalidExportTimeException, InvalidRestoreTimeException, ItemCollectionSizeLimitExceededException, LimitExceededException, PointInTimeRecoveryUnavailableException, ProvisionedThroughputExceededException, ReplicaAlreadyExistsException, ReplicaNotFoundException, RequestLimitExceeded, ResourceInUseException, ResourceNotFoundException, TableAlreadyExistsException, TableInUseException, TableNotFoundException, TransactionCanceledException, TransactionConflictException, TransactionInProgressException, } from \"../models/models_0\";\nexport const se_BatchExecuteStatementCommand = async (input, context) => {\n    const headers = sharedHeaders(\"BatchExecuteStatement\");\n    let body;\n    body = JSON.stringify(se_BatchExecuteStatementInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_BatchGetItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"BatchGetItem\");\n    let body;\n    body = JSON.stringify(se_BatchGetItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_BatchWriteItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"BatchWriteItem\");\n    let body;\n    body = JSON.stringify(se_BatchWriteItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateBackupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateBackup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateGlobalTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateGlobalTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteBackupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteBackup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteItem\");\n    let body;\n    body = JSON.stringify(se_DeleteItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeBackupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeBackup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeContinuousBackupsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeContinuousBackups\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeContributorInsightsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeContributorInsights\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeEndpointsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeEndpoints\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeExportCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeExport\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeGlobalTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeGlobalTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeGlobalTableSettingsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeGlobalTableSettings\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeImportCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeImport\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeKinesisStreamingDestinationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeKinesisStreamingDestination\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeLimitsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeLimits\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeTableReplicaAutoScalingCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeTableReplicaAutoScaling\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeTimeToLiveCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeTimeToLive\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DisableKinesisStreamingDestinationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DisableKinesisStreamingDestination\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_EnableKinesisStreamingDestinationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"EnableKinesisStreamingDestination\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ExecuteStatementCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ExecuteStatement\");\n    let body;\n    body = JSON.stringify(se_ExecuteStatementInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ExecuteTransactionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ExecuteTransaction\");\n    let body;\n    body = JSON.stringify(se_ExecuteTransactionInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ExportTableToPointInTimeCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ExportTableToPointInTime\");\n    let body;\n    body = JSON.stringify(se_ExportTableToPointInTimeInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetItem\");\n    let body;\n    body = JSON.stringify(se_GetItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ImportTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ImportTable\");\n    let body;\n    body = JSON.stringify(se_ImportTableInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListBackupsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListBackups\");\n    let body;\n    body = JSON.stringify(se_ListBackupsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListContributorInsightsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListContributorInsights\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListExportsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListExports\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListGlobalTablesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListGlobalTables\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListImportsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListImports\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListTablesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListTables\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListTagsOfResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListTagsOfResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_PutItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"PutItem\");\n    let body;\n    body = JSON.stringify(se_PutItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_QueryCommand = async (input, context) => {\n    const headers = sharedHeaders(\"Query\");\n    let body;\n    body = JSON.stringify(se_QueryInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_RestoreTableFromBackupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RestoreTableFromBackup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_RestoreTableToPointInTimeCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RestoreTableToPointInTime\");\n    let body;\n    body = JSON.stringify(se_RestoreTableToPointInTimeInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ScanCommand = async (input, context) => {\n    const headers = sharedHeaders(\"Scan\");\n    let body;\n    body = JSON.stringify(se_ScanInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TagResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TransactGetItemsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TransactGetItems\");\n    let body;\n    body = JSON.stringify(se_TransactGetItemsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TransactWriteItemsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TransactWriteItems\");\n    let body;\n    body = JSON.stringify(se_TransactWriteItemsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UntagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UntagResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateContinuousBackupsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateContinuousBackups\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateContributorInsightsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateContributorInsights\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateGlobalTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateGlobalTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateGlobalTableSettingsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateGlobalTableSettings\");\n    let body;\n    body = JSON.stringify(se_UpdateGlobalTableSettingsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateItem\");\n    let body;\n    body = JSON.stringify(se_UpdateItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateTableReplicaAutoScalingCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateTableReplicaAutoScaling\");\n    let body;\n    body = JSON.stringify(se_UpdateTableReplicaAutoScalingInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateTimeToLiveCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateTimeToLive\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_BatchExecuteStatementCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_BatchExecuteStatementCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_BatchExecuteStatementOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_BatchExecuteStatementCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_BatchGetItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_BatchGetItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_BatchGetItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_BatchGetItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_BatchWriteItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_BatchWriteItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_BatchWriteItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_BatchWriteItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await de_ItemCollectionSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupInUseException\":\n        case \"com.amazonaws.dynamodb#BackupInUseException\":\n            throw await de_BackupInUseExceptionRes(parsedOutput, context);\n        case \"ContinuousBackupsUnavailableException\":\n        case \"com.amazonaws.dynamodb#ContinuousBackupsUnavailableException\":\n            throw await de_ContinuousBackupsUnavailableExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"TableInUseException\":\n        case \"com.amazonaws.dynamodb#TableInUseException\":\n            throw await de_TableInUseExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateGlobalTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateGlobalTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateGlobalTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateGlobalTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#GlobalTableAlreadyExistsException\":\n            throw await de_GlobalTableAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupInUseException\":\n        case \"com.amazonaws.dynamodb#BackupInUseException\":\n            throw await de_BackupInUseExceptionRes(parsedOutput, context);\n        case \"BackupNotFoundException\":\n        case \"com.amazonaws.dynamodb#BackupNotFoundException\":\n            throw await de_BackupNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await de_ConditionalCheckFailedExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await de_ItemCollectionSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await de_TransactionConflictExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupNotFoundException\":\n        case \"com.amazonaws.dynamodb#BackupNotFoundException\":\n            throw await de_BackupNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeContinuousBackupsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeContinuousBackupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeContinuousBackupsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeContinuousBackupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeContributorInsightsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeContributorInsightsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeContributorInsightsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeContributorInsightsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeEndpointsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeEndpointsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeEndpointsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DescribeExportCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeExportCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeExportOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeExportCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExportNotFoundException\":\n        case \"com.amazonaws.dynamodb#ExportNotFoundException\":\n            throw await de_ExportNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeGlobalTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeGlobalTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeGlobalTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeGlobalTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await de_GlobalTableNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeGlobalTableSettingsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeGlobalTableSettingsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeGlobalTableSettingsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeGlobalTableSettingsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await de_GlobalTableNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeImportCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeImportCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeImportOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeImportCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ImportNotFoundException\":\n        case \"com.amazonaws.dynamodb#ImportNotFoundException\":\n            throw await de_ImportNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeKinesisStreamingDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeKinesisStreamingDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeKinesisStreamingDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeLimitsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeLimitsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeLimitsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeTableReplicaAutoScalingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeTableReplicaAutoScalingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeTableReplicaAutoScalingOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeTableReplicaAutoScalingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeTimeToLiveCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeTimeToLiveCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeTimeToLiveCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DisableKinesisStreamingDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DisableKinesisStreamingDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DisableKinesisStreamingDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_EnableKinesisStreamingDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_EnableKinesisStreamingDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_EnableKinesisStreamingDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ExecuteStatementCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ExecuteStatementCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ExecuteStatementOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ExecuteStatementCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await de_ConditionalCheckFailedExceptionRes(parsedOutput, context);\n        case \"DuplicateItemException\":\n        case \"com.amazonaws.dynamodb#DuplicateItemException\":\n            throw await de_DuplicateItemExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await de_ItemCollectionSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await de_TransactionConflictExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ExecuteTransactionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ExecuteTransactionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ExecuteTransactionOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ExecuteTransactionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"IdempotentParameterMismatchException\":\n        case \"com.amazonaws.dynamodb#IdempotentParameterMismatchException\":\n            throw await de_IdempotentParameterMismatchExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionCanceledException\":\n        case \"com.amazonaws.dynamodb#TransactionCanceledException\":\n            throw await de_TransactionCanceledExceptionRes(parsedOutput, context);\n        case \"TransactionInProgressException\":\n        case \"com.amazonaws.dynamodb#TransactionInProgressException\":\n            throw await de_TransactionInProgressExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ExportTableToPointInTimeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ExportTableToPointInTimeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ExportTableToPointInTimeOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ExportTableToPointInTimeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExportConflictException\":\n        case \"com.amazonaws.dynamodb#ExportConflictException\":\n            throw await de_ExportConflictExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidExportTimeException\":\n        case \"com.amazonaws.dynamodb#InvalidExportTimeException\":\n            throw await de_InvalidExportTimeExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"PointInTimeRecoveryUnavailableException\":\n        case \"com.amazonaws.dynamodb#PointInTimeRecoveryUnavailableException\":\n            throw await de_PointInTimeRecoveryUnavailableExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ImportTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ImportTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ImportTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ImportTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ImportConflictException\":\n        case \"com.amazonaws.dynamodb#ImportConflictException\":\n            throw await de_ImportConflictExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListBackupsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListBackupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListBackupsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListBackupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListContributorInsightsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListContributorInsightsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListContributorInsightsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListExportsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListExportsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListExportsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListGlobalTablesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListGlobalTablesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListGlobalTablesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListImportsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListImportsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListImportsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListImportsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListTablesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListTablesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListTablesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListTagsOfResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListTagsOfResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListTagsOfResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_PutItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_PutItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_PutItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await de_ConditionalCheckFailedExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await de_ItemCollectionSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await de_TransactionConflictExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_QueryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_QueryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_QueryOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_QueryCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RestoreTableFromBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_RestoreTableFromBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_RestoreTableFromBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RestoreTableFromBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupInUseException\":\n        case \"com.amazonaws.dynamodb#BackupInUseException\":\n            throw await de_BackupInUseExceptionRes(parsedOutput, context);\n        case \"BackupNotFoundException\":\n        case \"com.amazonaws.dynamodb#BackupNotFoundException\":\n            throw await de_BackupNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"TableAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#TableAlreadyExistsException\":\n            throw await de_TableAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"TableInUseException\":\n        case \"com.amazonaws.dynamodb#TableInUseException\":\n            throw await de_TableInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RestoreTableToPointInTimeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_RestoreTableToPointInTimeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_RestoreTableToPointInTimeOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RestoreTableToPointInTimeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"InvalidRestoreTimeException\":\n        case \"com.amazonaws.dynamodb#InvalidRestoreTimeException\":\n            throw await de_InvalidRestoreTimeExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"PointInTimeRecoveryUnavailableException\":\n        case \"com.amazonaws.dynamodb#PointInTimeRecoveryUnavailableException\":\n            throw await de_PointInTimeRecoveryUnavailableExceptionRes(parsedOutput, context);\n        case \"TableAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#TableAlreadyExistsException\":\n            throw await de_TableAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"TableInUseException\":\n        case \"com.amazonaws.dynamodb#TableInUseException\":\n            throw await de_TableInUseExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ScanCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ScanCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ScanOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ScanCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_TagResourceCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_TagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_TransactGetItemsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_TransactGetItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_TransactGetItemsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_TransactGetItemsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionCanceledException\":\n        case \"com.amazonaws.dynamodb#TransactionCanceledException\":\n            throw await de_TransactionCanceledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_TransactWriteItemsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_TransactWriteItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_TransactWriteItemsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_TransactWriteItemsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"IdempotentParameterMismatchException\":\n        case \"com.amazonaws.dynamodb#IdempotentParameterMismatchException\":\n            throw await de_IdempotentParameterMismatchExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionCanceledException\":\n        case \"com.amazonaws.dynamodb#TransactionCanceledException\":\n            throw await de_TransactionCanceledExceptionRes(parsedOutput, context);\n        case \"TransactionInProgressException\":\n        case \"com.amazonaws.dynamodb#TransactionInProgressException\":\n            throw await de_TransactionInProgressExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UntagResourceCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_UntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateContinuousBackupsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateContinuousBackupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateContinuousBackupsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateContinuousBackupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ContinuousBackupsUnavailableException\":\n        case \"com.amazonaws.dynamodb#ContinuousBackupsUnavailableException\":\n            throw await de_ContinuousBackupsUnavailableExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateContributorInsightsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateContributorInsightsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateContributorInsightsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateGlobalTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateGlobalTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateGlobalTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateGlobalTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await de_GlobalTableNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ReplicaAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#ReplicaAlreadyExistsException\":\n            throw await de_ReplicaAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"ReplicaNotFoundException\":\n        case \"com.amazonaws.dynamodb#ReplicaNotFoundException\":\n            throw await de_ReplicaNotFoundExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateGlobalTableSettingsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateGlobalTableSettingsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateGlobalTableSettingsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateGlobalTableSettingsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await de_GlobalTableNotFoundExceptionRes(parsedOutput, context);\n        case \"IndexNotFoundException\":\n        case \"com.amazonaws.dynamodb#IndexNotFoundException\":\n            throw await de_IndexNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ReplicaNotFoundException\":\n        case \"com.amazonaws.dynamodb#ReplicaNotFoundException\":\n            throw await de_ReplicaNotFoundExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await de_ConditionalCheckFailedExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await de_ItemCollectionSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await de_TransactionConflictExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateTableReplicaAutoScalingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateTableReplicaAutoScalingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateTableReplicaAutoScalingOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateTableReplicaAutoScalingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateTimeToLiveCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateTimeToLiveCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateTimeToLiveCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_BackupInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new BackupInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_BackupNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new BackupNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ConditionalCheckFailedExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ConditionalCheckFailedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ContinuousBackupsUnavailableExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ContinuousBackupsUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DuplicateItemExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DuplicateItemException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ExportConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ExportConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ExportNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ExportNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_GlobalTableAlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new GlobalTableAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_GlobalTableNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new GlobalTableNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IdempotentParameterMismatchExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new IdempotentParameterMismatchException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ImportConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ImportConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ImportNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ImportNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IndexNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new IndexNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InternalServerErrorRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InternalServerError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidEndpointExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidEndpointException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidExportTimeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidExportTimeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidRestoreTimeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidRestoreTimeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ItemCollectionSizeLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ItemCollectionSizeLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_LimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PointInTimeRecoveryUnavailableExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new PointInTimeRecoveryUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ProvisionedThroughputExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ProvisionedThroughputExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ReplicaAlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ReplicaAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ReplicaNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ReplicaNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RequestLimitExceededRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new RequestLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TableAlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TableAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TableInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TableInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TableNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TableNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TransactionCanceledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_TransactionCanceledException(body, context);\n    const exception = new TransactionCanceledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TransactionConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TransactionConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TransactionInProgressExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TransactionInProgressException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AttributeUpdates = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_AttributeValueUpdate(value, context);\n        return acc;\n    }, {});\n};\nconst se_AttributeValue = (input, context) => {\n    return AttributeValue.visit(input, {\n        B: (value) => ({ B: context.base64Encoder(value) }),\n        BOOL: (value) => ({ BOOL: value }),\n        BS: (value) => ({ BS: se_BinarySetAttributeValue(value, context) }),\n        L: (value) => ({ L: se_ListAttributeValue(value, context) }),\n        M: (value) => ({ M: se_MapAttributeValue(value, context) }),\n        N: (value) => ({ N: value }),\n        NS: (value) => ({ NS: _json(value) }),\n        NULL: (value) => ({ NULL: value }),\n        S: (value) => ({ S: value }),\n        SS: (value) => ({ SS: _json(value) }),\n        _: (name, value) => ({ name: value }),\n    });\n};\nconst se_AttributeValueList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_AttributeValue(entry, context);\n    });\n};\nconst se_AttributeValueUpdate = (input, context) => {\n    return take(input, {\n        Action: [],\n        Value: (_) => se_AttributeValue(_, context),\n    });\n};\nconst se_AutoScalingPolicyUpdate = (input, context) => {\n    return take(input, {\n        PolicyName: [],\n        TargetTrackingScalingPolicyConfiguration: (_) => se_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate(_, context),\n    });\n};\nconst se_AutoScalingSettingsUpdate = (input, context) => {\n    return take(input, {\n        AutoScalingDisabled: [],\n        AutoScalingRoleArn: [],\n        MaximumUnits: [],\n        MinimumUnits: [],\n        ScalingPolicyUpdate: (_) => se_AutoScalingPolicyUpdate(_, context),\n    });\n};\nconst se_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate = (input, context) => {\n    return take(input, {\n        DisableScaleIn: [],\n        ScaleInCooldown: [],\n        ScaleOutCooldown: [],\n        TargetValue: __serializeFloat,\n    });\n};\nconst se_BatchExecuteStatementInput = (input, context) => {\n    return take(input, {\n        ReturnConsumedCapacity: [],\n        Statements: (_) => se_PartiQLBatchRequest(_, context),\n    });\n};\nconst se_BatchGetItemInput = (input, context) => {\n    return take(input, {\n        RequestItems: (_) => se_BatchGetRequestMap(_, context),\n        ReturnConsumedCapacity: [],\n    });\n};\nconst se_BatchGetRequestMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_KeysAndAttributes(value, context);\n        return acc;\n    }, {});\n};\nconst se_BatchStatementRequest = (input, context) => {\n    return take(input, {\n        ConsistentRead: [],\n        Parameters: (_) => se_PreparedStatementParameters(_, context),\n        Statement: [],\n    });\n};\nconst se_BatchWriteItemInput = (input, context) => {\n    return take(input, {\n        RequestItems: (_) => se_BatchWriteItemRequestMap(_, context),\n        ReturnConsumedCapacity: [],\n        ReturnItemCollectionMetrics: [],\n    });\n};\nconst se_BatchWriteItemRequestMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_WriteRequests(value, context);\n        return acc;\n    }, {});\n};\nconst se_BinarySetAttributeValue = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return context.base64Encoder(entry);\n    });\n};\nconst se_Condition = (input, context) => {\n    return take(input, {\n        AttributeValueList: (_) => se_AttributeValueList(_, context),\n        ComparisonOperator: [],\n    });\n};\nconst se_ConditionCheck = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Key: (_) => se_Key(_, context),\n        ReturnValuesOnConditionCheckFailure: [],\n        TableName: [],\n    });\n};\nconst se_Delete = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Key: (_) => se_Key(_, context),\n        ReturnValuesOnConditionCheckFailure: [],\n        TableName: [],\n    });\n};\nconst se_DeleteItemInput = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ConditionalOperator: [],\n        Expected: (_) => se_ExpectedAttributeMap(_, context),\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Key: (_) => se_Key(_, context),\n        ReturnConsumedCapacity: [],\n        ReturnItemCollectionMetrics: [],\n        ReturnValues: [],\n        TableName: [],\n    });\n};\nconst se_DeleteRequest = (input, context) => {\n    return take(input, {\n        Key: (_) => se_Key(_, context),\n    });\n};\nconst se_ExecuteStatementInput = (input, context) => {\n    return take(input, {\n        ConsistentRead: [],\n        Limit: [],\n        NextToken: [],\n        Parameters: (_) => se_PreparedStatementParameters(_, context),\n        ReturnConsumedCapacity: [],\n        Statement: [],\n    });\n};\nconst se_ExecuteTransactionInput = (input, context) => {\n    return take(input, {\n        ClientRequestToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        ReturnConsumedCapacity: [],\n        TransactStatements: (_) => se_ParameterizedStatements(_, context),\n    });\n};\nconst se_ExpectedAttributeMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_ExpectedAttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst se_ExpectedAttributeValue = (input, context) => {\n    return take(input, {\n        AttributeValueList: (_) => se_AttributeValueList(_, context),\n        ComparisonOperator: [],\n        Exists: [],\n        Value: (_) => se_AttributeValue(_, context),\n    });\n};\nconst se_ExportTableToPointInTimeInput = (input, context) => {\n    return take(input, {\n        ClientToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        ExportFormat: [],\n        ExportTime: (_) => Math.round(_.getTime() / 1000),\n        S3Bucket: [],\n        S3BucketOwner: [],\n        S3Prefix: [],\n        S3SseAlgorithm: [],\n        S3SseKmsKeyId: [],\n        TableArn: [],\n    });\n};\nconst se_ExpressionAttributeValueMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst se_FilterConditionMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_Condition(value, context);\n        return acc;\n    }, {});\n};\nconst se_Get = (input, context) => {\n    return take(input, {\n        ExpressionAttributeNames: _json,\n        Key: (_) => se_Key(_, context),\n        ProjectionExpression: [],\n        TableName: [],\n    });\n};\nconst se_GetItemInput = (input, context) => {\n    return take(input, {\n        AttributesToGet: _json,\n        ConsistentRead: [],\n        ExpressionAttributeNames: _json,\n        Key: (_) => se_Key(_, context),\n        ProjectionExpression: [],\n        ReturnConsumedCapacity: [],\n        TableName: [],\n    });\n};\nconst se_GlobalSecondaryIndexAutoScalingUpdate = (input, context) => {\n    return take(input, {\n        IndexName: [],\n        ProvisionedWriteCapacityAutoScalingUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n    });\n};\nconst se_GlobalSecondaryIndexAutoScalingUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_GlobalSecondaryIndexAutoScalingUpdate(entry, context);\n    });\n};\nconst se_GlobalTableGlobalSecondaryIndexSettingsUpdate = (input, context) => {\n    return take(input, {\n        IndexName: [],\n        ProvisionedWriteCapacityAutoScalingSettingsUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n        ProvisionedWriteCapacityUnits: [],\n    });\n};\nconst se_GlobalTableGlobalSecondaryIndexSettingsUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_GlobalTableGlobalSecondaryIndexSettingsUpdate(entry, context);\n    });\n};\nconst se_ImportTableInput = (input, context) => {\n    return take(input, {\n        ClientToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        InputCompressionType: [],\n        InputFormat: [],\n        InputFormatOptions: _json,\n        S3BucketSource: _json,\n        TableCreationParameters: _json,\n    });\n};\nconst se_Key = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst se_KeyConditions = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_Condition(value, context);\n        return acc;\n    }, {});\n};\nconst se_KeyList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_Key(entry, context);\n    });\n};\nconst se_KeysAndAttributes = (input, context) => {\n    return take(input, {\n        AttributesToGet: _json,\n        ConsistentRead: [],\n        ExpressionAttributeNames: _json,\n        Keys: (_) => se_KeyList(_, context),\n        ProjectionExpression: [],\n    });\n};\nconst se_ListAttributeValue = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_AttributeValue(entry, context);\n    });\n};\nconst se_ListBackupsInput = (input, context) => {\n    return take(input, {\n        BackupType: [],\n        ExclusiveStartBackupArn: [],\n        Limit: [],\n        TableName: [],\n        TimeRangeLowerBound: (_) => Math.round(_.getTime() / 1000),\n        TimeRangeUpperBound: (_) => Math.round(_.getTime() / 1000),\n    });\n};\nconst se_MapAttributeValue = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst se_ParameterizedStatement = (input, context) => {\n    return take(input, {\n        Parameters: (_) => se_PreparedStatementParameters(_, context),\n        Statement: [],\n    });\n};\nconst se_ParameterizedStatements = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ParameterizedStatement(entry, context);\n    });\n};\nconst se_PartiQLBatchRequest = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_BatchStatementRequest(entry, context);\n    });\n};\nconst se_PreparedStatementParameters = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_AttributeValue(entry, context);\n    });\n};\nconst se_Put = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Item: (_) => se_PutItemInputAttributeMap(_, context),\n        ReturnValuesOnConditionCheckFailure: [],\n        TableName: [],\n    });\n};\nconst se_PutItemInput = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ConditionalOperator: [],\n        Expected: (_) => se_ExpectedAttributeMap(_, context),\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Item: (_) => se_PutItemInputAttributeMap(_, context),\n        ReturnConsumedCapacity: [],\n        ReturnItemCollectionMetrics: [],\n        ReturnValues: [],\n        TableName: [],\n    });\n};\nconst se_PutItemInputAttributeMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst se_PutRequest = (input, context) => {\n    return take(input, {\n        Item: (_) => se_PutItemInputAttributeMap(_, context),\n    });\n};\nconst se_QueryInput = (input, context) => {\n    return take(input, {\n        AttributesToGet: _json,\n        ConditionalOperator: [],\n        ConsistentRead: [],\n        ExclusiveStartKey: (_) => se_Key(_, context),\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        FilterExpression: [],\n        IndexName: [],\n        KeyConditionExpression: [],\n        KeyConditions: (_) => se_KeyConditions(_, context),\n        Limit: [],\n        ProjectionExpression: [],\n        QueryFilter: (_) => se_FilterConditionMap(_, context),\n        ReturnConsumedCapacity: [],\n        ScanIndexForward: [],\n        Select: [],\n        TableName: [],\n    });\n};\nconst se_ReplicaAutoScalingUpdate = (input, context) => {\n    return take(input, {\n        RegionName: [],\n        ReplicaGlobalSecondaryIndexUpdates: (_) => se_ReplicaGlobalSecondaryIndexAutoScalingUpdateList(_, context),\n        ReplicaProvisionedReadCapacityAutoScalingUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n    });\n};\nconst se_ReplicaAutoScalingUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ReplicaAutoScalingUpdate(entry, context);\n    });\n};\nconst se_ReplicaGlobalSecondaryIndexAutoScalingUpdate = (input, context) => {\n    return take(input, {\n        IndexName: [],\n        ProvisionedReadCapacityAutoScalingUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n    });\n};\nconst se_ReplicaGlobalSecondaryIndexAutoScalingUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ReplicaGlobalSecondaryIndexAutoScalingUpdate(entry, context);\n    });\n};\nconst se_ReplicaGlobalSecondaryIndexSettingsUpdate = (input, context) => {\n    return take(input, {\n        IndexName: [],\n        ProvisionedReadCapacityAutoScalingSettingsUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n        ProvisionedReadCapacityUnits: [],\n    });\n};\nconst se_ReplicaGlobalSecondaryIndexSettingsUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ReplicaGlobalSecondaryIndexSettingsUpdate(entry, context);\n    });\n};\nconst se_ReplicaSettingsUpdate = (input, context) => {\n    return take(input, {\n        RegionName: [],\n        ReplicaGlobalSecondaryIndexSettingsUpdate: (_) => se_ReplicaGlobalSecondaryIndexSettingsUpdateList(_, context),\n        ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n        ReplicaProvisionedReadCapacityUnits: [],\n        ReplicaTableClass: [],\n    });\n};\nconst se_ReplicaSettingsUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ReplicaSettingsUpdate(entry, context);\n    });\n};\nconst se_RestoreTableToPointInTimeInput = (input, context) => {\n    return take(input, {\n        BillingModeOverride: [],\n        GlobalSecondaryIndexOverride: _json,\n        LocalSecondaryIndexOverride: _json,\n        ProvisionedThroughputOverride: _json,\n        RestoreDateTime: (_) => Math.round(_.getTime() / 1000),\n        SSESpecificationOverride: _json,\n        SourceTableArn: [],\n        SourceTableName: [],\n        TargetTableName: [],\n        UseLatestRestorableTime: [],\n    });\n};\nconst se_ScanInput = (input, context) => {\n    return take(input, {\n        AttributesToGet: _json,\n        ConditionalOperator: [],\n        ConsistentRead: [],\n        ExclusiveStartKey: (_) => se_Key(_, context),\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        FilterExpression: [],\n        IndexName: [],\n        Limit: [],\n        ProjectionExpression: [],\n        ReturnConsumedCapacity: [],\n        ScanFilter: (_) => se_FilterConditionMap(_, context),\n        Segment: [],\n        Select: [],\n        TableName: [],\n        TotalSegments: [],\n    });\n};\nconst se_TransactGetItem = (input, context) => {\n    return take(input, {\n        Get: (_) => se_Get(_, context),\n    });\n};\nconst se_TransactGetItemList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_TransactGetItem(entry, context);\n    });\n};\nconst se_TransactGetItemsInput = (input, context) => {\n    return take(input, {\n        ReturnConsumedCapacity: [],\n        TransactItems: (_) => se_TransactGetItemList(_, context),\n    });\n};\nconst se_TransactWriteItem = (input, context) => {\n    return take(input, {\n        ConditionCheck: (_) => se_ConditionCheck(_, context),\n        Delete: (_) => se_Delete(_, context),\n        Put: (_) => se_Put(_, context),\n        Update: (_) => se_Update(_, context),\n    });\n};\nconst se_TransactWriteItemList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_TransactWriteItem(entry, context);\n    });\n};\nconst se_TransactWriteItemsInput = (input, context) => {\n    return take(input, {\n        ClientRequestToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        ReturnConsumedCapacity: [],\n        ReturnItemCollectionMetrics: [],\n        TransactItems: (_) => se_TransactWriteItemList(_, context),\n    });\n};\nconst se_Update = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Key: (_) => se_Key(_, context),\n        ReturnValuesOnConditionCheckFailure: [],\n        TableName: [],\n        UpdateExpression: [],\n    });\n};\nconst se_UpdateGlobalTableSettingsInput = (input, context) => {\n    return take(input, {\n        GlobalTableBillingMode: [],\n        GlobalTableGlobalSecondaryIndexSettingsUpdate: (_) => se_GlobalTableGlobalSecondaryIndexSettingsUpdateList(_, context),\n        GlobalTableName: [],\n        GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n        GlobalTableProvisionedWriteCapacityUnits: [],\n        ReplicaSettingsUpdate: (_) => se_ReplicaSettingsUpdateList(_, context),\n    });\n};\nconst se_UpdateItemInput = (input, context) => {\n    return take(input, {\n        AttributeUpdates: (_) => se_AttributeUpdates(_, context),\n        ConditionExpression: [],\n        ConditionalOperator: [],\n        Expected: (_) => se_ExpectedAttributeMap(_, context),\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Key: (_) => se_Key(_, context),\n        ReturnConsumedCapacity: [],\n        ReturnItemCollectionMetrics: [],\n        ReturnValues: [],\n        TableName: [],\n        UpdateExpression: [],\n    });\n};\nconst se_UpdateTableReplicaAutoScalingInput = (input, context) => {\n    return take(input, {\n        GlobalSecondaryIndexUpdates: (_) => se_GlobalSecondaryIndexAutoScalingUpdateList(_, context),\n        ProvisionedWriteCapacityAutoScalingUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n        ReplicaUpdates: (_) => se_ReplicaAutoScalingUpdateList(_, context),\n        TableName: [],\n    });\n};\nconst se_WriteRequest = (input, context) => {\n    return take(input, {\n        DeleteRequest: (_) => se_DeleteRequest(_, context),\n        PutRequest: (_) => se_PutRequest(_, context),\n    });\n};\nconst se_WriteRequests = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_WriteRequest(entry, context);\n    });\n};\nconst de_ArchivalSummary = (output, context) => {\n    return take(output, {\n        ArchivalBackupArn: __expectString,\n        ArchivalDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ArchivalReason: __expectString,\n    });\n};\nconst de_AttributeMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst de_AttributeValue = (output, context) => {\n    if (output.B != null) {\n        return {\n            B: context.base64Decoder(output.B),\n        };\n    }\n    if (__expectBoolean(output.BOOL) !== undefined) {\n        return { BOOL: __expectBoolean(output.BOOL) };\n    }\n    if (output.BS != null) {\n        return {\n            BS: de_BinarySetAttributeValue(output.BS, context),\n        };\n    }\n    if (output.L != null) {\n        return {\n            L: de_ListAttributeValue(output.L, context),\n        };\n    }\n    if (output.M != null) {\n        return {\n            M: de_MapAttributeValue(output.M, context),\n        };\n    }\n    if (__expectString(output.N) !== undefined) {\n        return { N: __expectString(output.N) };\n    }\n    if (output.NS != null) {\n        return {\n            NS: _json(output.NS),\n        };\n    }\n    if (__expectBoolean(output.NULL) !== undefined) {\n        return { NULL: __expectBoolean(output.NULL) };\n    }\n    if (__expectString(output.S) !== undefined) {\n        return { S: __expectString(output.S) };\n    }\n    if (output.SS != null) {\n        return {\n            SS: _json(output.SS),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_AutoScalingPolicyDescription = (output, context) => {\n    return take(output, {\n        PolicyName: __expectString,\n        TargetTrackingScalingPolicyConfiguration: (_) => de_AutoScalingTargetTrackingScalingPolicyConfigurationDescription(_, context),\n    });\n};\nconst de_AutoScalingPolicyDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AutoScalingPolicyDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_AutoScalingSettingsDescription = (output, context) => {\n    return take(output, {\n        AutoScalingDisabled: __expectBoolean,\n        AutoScalingRoleArn: __expectString,\n        MaximumUnits: __expectLong,\n        MinimumUnits: __expectLong,\n        ScalingPolicies: (_) => de_AutoScalingPolicyDescriptionList(_, context),\n    });\n};\nconst de_AutoScalingTargetTrackingScalingPolicyConfigurationDescription = (output, context) => {\n    return take(output, {\n        DisableScaleIn: __expectBoolean,\n        ScaleInCooldown: __expectInt32,\n        ScaleOutCooldown: __expectInt32,\n        TargetValue: __limitedParseDouble,\n    });\n};\nconst de_BackupDescription = (output, context) => {\n    return take(output, {\n        BackupDetails: (_) => de_BackupDetails(_, context),\n        SourceTableDetails: (_) => de_SourceTableDetails(_, context),\n        SourceTableFeatureDetails: (_) => de_SourceTableFeatureDetails(_, context),\n    });\n};\nconst de_BackupDetails = (output, context) => {\n    return take(output, {\n        BackupArn: __expectString,\n        BackupCreationDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        BackupExpiryDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        BackupName: __expectString,\n        BackupSizeBytes: __expectLong,\n        BackupStatus: __expectString,\n        BackupType: __expectString,\n    });\n};\nconst de_BackupSummaries = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_BackupSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_BackupSummary = (output, context) => {\n    return take(output, {\n        BackupArn: __expectString,\n        BackupCreationDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        BackupExpiryDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        BackupName: __expectString,\n        BackupSizeBytes: __expectLong,\n        BackupStatus: __expectString,\n        BackupType: __expectString,\n        TableArn: __expectString,\n        TableId: __expectString,\n        TableName: __expectString,\n    });\n};\nconst de_BatchExecuteStatementOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        Responses: (_) => de_PartiQLBatchResponse(_, context),\n    });\n};\nconst de_BatchGetItemOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        Responses: (_) => de_BatchGetResponseMap(_, context),\n        UnprocessedKeys: (_) => de_BatchGetRequestMap(_, context),\n    });\n};\nconst de_BatchGetRequestMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_KeysAndAttributes(value, context);\n        return acc;\n    }, {});\n};\nconst de_BatchGetResponseMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_ItemList(value, context);\n        return acc;\n    }, {});\n};\nconst de_BatchStatementResponse = (output, context) => {\n    return take(output, {\n        Error: _json,\n        Item: (_) => de_AttributeMap(_, context),\n        TableName: __expectString,\n    });\n};\nconst de_BatchWriteItemOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        ItemCollectionMetrics: (_) => de_ItemCollectionMetricsPerTable(_, context),\n        UnprocessedItems: (_) => de_BatchWriteItemRequestMap(_, context),\n    });\n};\nconst de_BatchWriteItemRequestMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_WriteRequests(value, context);\n        return acc;\n    }, {});\n};\nconst de_BillingModeSummary = (output, context) => {\n    return take(output, {\n        BillingMode: __expectString,\n        LastUpdateToPayPerRequestDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n    });\n};\nconst de_BinarySetAttributeValue = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return context.base64Decoder(entry);\n    });\n    return retVal;\n};\nconst de_CancellationReason = (output, context) => {\n    return take(output, {\n        Code: __expectString,\n        Item: (_) => de_AttributeMap(_, context),\n        Message: __expectString,\n    });\n};\nconst de_CancellationReasonList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CancellationReason(entry, context);\n    });\n    return retVal;\n};\nconst de_Capacity = (output, context) => {\n    return take(output, {\n        CapacityUnits: __limitedParseDouble,\n        ReadCapacityUnits: __limitedParseDouble,\n        WriteCapacityUnits: __limitedParseDouble,\n    });\n};\nconst de_ConsumedCapacity = (output, context) => {\n    return take(output, {\n        CapacityUnits: __limitedParseDouble,\n        GlobalSecondaryIndexes: (_) => de_SecondaryIndexesCapacityMap(_, context),\n        LocalSecondaryIndexes: (_) => de_SecondaryIndexesCapacityMap(_, context),\n        ReadCapacityUnits: __limitedParseDouble,\n        Table: (_) => de_Capacity(_, context),\n        TableName: __expectString,\n        WriteCapacityUnits: __limitedParseDouble,\n    });\n};\nconst de_ConsumedCapacityMultiple = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ConsumedCapacity(entry, context);\n    });\n    return retVal;\n};\nconst de_ContinuousBackupsDescription = (output, context) => {\n    return take(output, {\n        ContinuousBackupsStatus: __expectString,\n        PointInTimeRecoveryDescription: (_) => de_PointInTimeRecoveryDescription(_, context),\n    });\n};\nconst de_CreateBackupOutput = (output, context) => {\n    return take(output, {\n        BackupDetails: (_) => de_BackupDetails(_, context),\n    });\n};\nconst de_CreateGlobalTableOutput = (output, context) => {\n    return take(output, {\n        GlobalTableDescription: (_) => de_GlobalTableDescription(_, context),\n    });\n};\nconst de_CreateTableOutput = (output, context) => {\n    return take(output, {\n        TableDescription: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_DeleteBackupOutput = (output, context) => {\n    return take(output, {\n        BackupDescription: (_) => de_BackupDescription(_, context),\n    });\n};\nconst de_DeleteItemOutput = (output, context) => {\n    return take(output, {\n        Attributes: (_) => de_AttributeMap(_, context),\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        ItemCollectionMetrics: (_) => de_ItemCollectionMetrics(_, context),\n    });\n};\nconst de_DeleteRequest = (output, context) => {\n    return take(output, {\n        Key: (_) => de_Key(_, context),\n    });\n};\nconst de_DeleteTableOutput = (output, context) => {\n    return take(output, {\n        TableDescription: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_DescribeBackupOutput = (output, context) => {\n    return take(output, {\n        BackupDescription: (_) => de_BackupDescription(_, context),\n    });\n};\nconst de_DescribeContinuousBackupsOutput = (output, context) => {\n    return take(output, {\n        ContinuousBackupsDescription: (_) => de_ContinuousBackupsDescription(_, context),\n    });\n};\nconst de_DescribeContributorInsightsOutput = (output, context) => {\n    return take(output, {\n        ContributorInsightsRuleList: _json,\n        ContributorInsightsStatus: __expectString,\n        FailureException: _json,\n        IndexName: __expectString,\n        LastUpdateDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableName: __expectString,\n    });\n};\nconst de_DescribeExportOutput = (output, context) => {\n    return take(output, {\n        ExportDescription: (_) => de_ExportDescription(_, context),\n    });\n};\nconst de_DescribeGlobalTableOutput = (output, context) => {\n    return take(output, {\n        GlobalTableDescription: (_) => de_GlobalTableDescription(_, context),\n    });\n};\nconst de_DescribeGlobalTableSettingsOutput = (output, context) => {\n    return take(output, {\n        GlobalTableName: __expectString,\n        ReplicaSettings: (_) => de_ReplicaSettingsDescriptionList(_, context),\n    });\n};\nconst de_DescribeImportOutput = (output, context) => {\n    return take(output, {\n        ImportTableDescription: (_) => de_ImportTableDescription(_, context),\n    });\n};\nconst de_DescribeTableOutput = (output, context) => {\n    return take(output, {\n        Table: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_DescribeTableReplicaAutoScalingOutput = (output, context) => {\n    return take(output, {\n        TableAutoScalingDescription: (_) => de_TableAutoScalingDescription(_, context),\n    });\n};\nconst de_ExecuteStatementOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        Items: (_) => de_ItemList(_, context),\n        LastEvaluatedKey: (_) => de_Key(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_ExecuteTransactionOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        Responses: (_) => de_ItemResponseList(_, context),\n    });\n};\nconst de_ExportDescription = (output, context) => {\n    return take(output, {\n        BilledSizeBytes: __expectLong,\n        ClientToken: __expectString,\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ExportArn: __expectString,\n        ExportFormat: __expectString,\n        ExportManifest: __expectString,\n        ExportStatus: __expectString,\n        ExportTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        FailureCode: __expectString,\n        FailureMessage: __expectString,\n        ItemCount: __expectLong,\n        S3Bucket: __expectString,\n        S3BucketOwner: __expectString,\n        S3Prefix: __expectString,\n        S3SseAlgorithm: __expectString,\n        S3SseKmsKeyId: __expectString,\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableArn: __expectString,\n        TableId: __expectString,\n    });\n};\nconst de_ExportTableToPointInTimeOutput = (output, context) => {\n    return take(output, {\n        ExportDescription: (_) => de_ExportDescription(_, context),\n    });\n};\nconst de_GetItemOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        Item: (_) => de_AttributeMap(_, context),\n    });\n};\nconst de_GlobalSecondaryIndexDescription = (output, context) => {\n    return take(output, {\n        Backfilling: __expectBoolean,\n        IndexArn: __expectString,\n        IndexName: __expectString,\n        IndexSizeBytes: __expectLong,\n        IndexStatus: __expectString,\n        ItemCount: __expectLong,\n        KeySchema: _json,\n        Projection: _json,\n        ProvisionedThroughput: (_) => de_ProvisionedThroughputDescription(_, context),\n    });\n};\nconst de_GlobalSecondaryIndexDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_GlobalSecondaryIndexDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_GlobalTableDescription = (output, context) => {\n    return take(output, {\n        CreationDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        GlobalTableArn: __expectString,\n        GlobalTableName: __expectString,\n        GlobalTableStatus: __expectString,\n        ReplicationGroup: (_) => de_ReplicaDescriptionList(_, context),\n    });\n};\nconst de_ImportSummary = (output, context) => {\n    return take(output, {\n        CloudWatchLogGroupArn: __expectString,\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ImportArn: __expectString,\n        ImportStatus: __expectString,\n        InputFormat: __expectString,\n        S3BucketSource: _json,\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableArn: __expectString,\n    });\n};\nconst de_ImportSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ImportSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_ImportTableDescription = (output, context) => {\n    return take(output, {\n        ClientToken: __expectString,\n        CloudWatchLogGroupArn: __expectString,\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ErrorCount: __expectLong,\n        FailureCode: __expectString,\n        FailureMessage: __expectString,\n        ImportArn: __expectString,\n        ImportStatus: __expectString,\n        ImportedItemCount: __expectLong,\n        InputCompressionType: __expectString,\n        InputFormat: __expectString,\n        InputFormatOptions: _json,\n        ProcessedItemCount: __expectLong,\n        ProcessedSizeBytes: __expectLong,\n        S3BucketSource: _json,\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableArn: __expectString,\n        TableCreationParameters: _json,\n        TableId: __expectString,\n    });\n};\nconst de_ImportTableOutput = (output, context) => {\n    return take(output, {\n        ImportTableDescription: (_) => de_ImportTableDescription(_, context),\n    });\n};\nconst de_ItemCollectionKeyAttributeMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst de_ItemCollectionMetrics = (output, context) => {\n    return take(output, {\n        ItemCollectionKey: (_) => de_ItemCollectionKeyAttributeMap(_, context),\n        SizeEstimateRangeGB: (_) => de_ItemCollectionSizeEstimateRange(_, context),\n    });\n};\nconst de_ItemCollectionMetricsMultiple = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ItemCollectionMetrics(entry, context);\n    });\n    return retVal;\n};\nconst de_ItemCollectionMetricsPerTable = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_ItemCollectionMetricsMultiple(value, context);\n        return acc;\n    }, {});\n};\nconst de_ItemCollectionSizeEstimateRange = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __limitedParseDouble(entry);\n    });\n    return retVal;\n};\nconst de_ItemList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AttributeMap(entry, context);\n    });\n    return retVal;\n};\nconst de_ItemResponse = (output, context) => {\n    return take(output, {\n        Item: (_) => de_AttributeMap(_, context),\n    });\n};\nconst de_ItemResponseList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ItemResponse(entry, context);\n    });\n    return retVal;\n};\nconst de_Key = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst de_KeyList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Key(entry, context);\n    });\n    return retVal;\n};\nconst de_KeysAndAttributes = (output, context) => {\n    return take(output, {\n        AttributesToGet: _json,\n        ConsistentRead: __expectBoolean,\n        ExpressionAttributeNames: _json,\n        Keys: (_) => de_KeyList(_, context),\n        ProjectionExpression: __expectString,\n    });\n};\nconst de_ListAttributeValue = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AttributeValue(__expectUnion(entry), context);\n    });\n    return retVal;\n};\nconst de_ListBackupsOutput = (output, context) => {\n    return take(output, {\n        BackupSummaries: (_) => de_BackupSummaries(_, context),\n        LastEvaluatedBackupArn: __expectString,\n    });\n};\nconst de_ListImportsOutput = (output, context) => {\n    return take(output, {\n        ImportSummaryList: (_) => de_ImportSummaryList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_MapAttributeValue = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst de_PartiQLBatchResponse = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_BatchStatementResponse(entry, context);\n    });\n    return retVal;\n};\nconst de_PointInTimeRecoveryDescription = (output, context) => {\n    return take(output, {\n        EarliestRestorableDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LatestRestorableDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        PointInTimeRecoveryStatus: __expectString,\n    });\n};\nconst de_ProvisionedThroughputDescription = (output, context) => {\n    return take(output, {\n        LastDecreaseDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastIncreaseDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        NumberOfDecreasesToday: __expectLong,\n        ReadCapacityUnits: __expectLong,\n        WriteCapacityUnits: __expectLong,\n    });\n};\nconst de_PutItemInputAttributeMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst de_PutItemOutput = (output, context) => {\n    return take(output, {\n        Attributes: (_) => de_AttributeMap(_, context),\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        ItemCollectionMetrics: (_) => de_ItemCollectionMetrics(_, context),\n    });\n};\nconst de_PutRequest = (output, context) => {\n    return take(output, {\n        Item: (_) => de_PutItemInputAttributeMap(_, context),\n    });\n};\nconst de_QueryOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        Count: __expectInt32,\n        Items: (_) => de_ItemList(_, context),\n        LastEvaluatedKey: (_) => de_Key(_, context),\n        ScannedCount: __expectInt32,\n    });\n};\nconst de_ReplicaAutoScalingDescription = (output, context) => {\n    return take(output, {\n        GlobalSecondaryIndexes: (_) => de_ReplicaGlobalSecondaryIndexAutoScalingDescriptionList(_, context),\n        RegionName: __expectString,\n        ReplicaProvisionedReadCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ReplicaProvisionedWriteCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ReplicaStatus: __expectString,\n    });\n};\nconst de_ReplicaAutoScalingDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicaAutoScalingDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_ReplicaDescription = (output, context) => {\n    return take(output, {\n        GlobalSecondaryIndexes: _json,\n        KMSMasterKeyId: __expectString,\n        ProvisionedThroughputOverride: _json,\n        RegionName: __expectString,\n        ReplicaInaccessibleDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ReplicaStatus: __expectString,\n        ReplicaStatusDescription: __expectString,\n        ReplicaStatusPercentProgress: __expectString,\n        ReplicaTableClassSummary: (_) => de_TableClassSummary(_, context),\n    });\n};\nconst de_ReplicaDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicaDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_ReplicaGlobalSecondaryIndexAutoScalingDescription = (output, context) => {\n    return take(output, {\n        IndexName: __expectString,\n        IndexStatus: __expectString,\n        ProvisionedReadCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ProvisionedWriteCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n    });\n};\nconst de_ReplicaGlobalSecondaryIndexAutoScalingDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicaGlobalSecondaryIndexAutoScalingDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_ReplicaGlobalSecondaryIndexSettingsDescription = (output, context) => {\n    return take(output, {\n        IndexName: __expectString,\n        IndexStatus: __expectString,\n        ProvisionedReadCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ProvisionedReadCapacityUnits: __expectLong,\n        ProvisionedWriteCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ProvisionedWriteCapacityUnits: __expectLong,\n    });\n};\nconst de_ReplicaGlobalSecondaryIndexSettingsDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicaGlobalSecondaryIndexSettingsDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_ReplicaSettingsDescription = (output, context) => {\n    return take(output, {\n        RegionName: __expectString,\n        ReplicaBillingModeSummary: (_) => de_BillingModeSummary(_, context),\n        ReplicaGlobalSecondaryIndexSettings: (_) => de_ReplicaGlobalSecondaryIndexSettingsDescriptionList(_, context),\n        ReplicaProvisionedReadCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ReplicaProvisionedReadCapacityUnits: __expectLong,\n        ReplicaProvisionedWriteCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ReplicaProvisionedWriteCapacityUnits: __expectLong,\n        ReplicaStatus: __expectString,\n        ReplicaTableClassSummary: (_) => de_TableClassSummary(_, context),\n    });\n};\nconst de_ReplicaSettingsDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicaSettingsDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_RestoreSummary = (output, context) => {\n    return take(output, {\n        RestoreDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        RestoreInProgress: __expectBoolean,\n        SourceBackupArn: __expectString,\n        SourceTableArn: __expectString,\n    });\n};\nconst de_RestoreTableFromBackupOutput = (output, context) => {\n    return take(output, {\n        TableDescription: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_RestoreTableToPointInTimeOutput = (output, context) => {\n    return take(output, {\n        TableDescription: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_ScanOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        Count: __expectInt32,\n        Items: (_) => de_ItemList(_, context),\n        LastEvaluatedKey: (_) => de_Key(_, context),\n        ScannedCount: __expectInt32,\n    });\n};\nconst de_SecondaryIndexesCapacityMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_Capacity(value, context);\n        return acc;\n    }, {});\n};\nconst de_SourceTableDetails = (output, context) => {\n    return take(output, {\n        BillingMode: __expectString,\n        ItemCount: __expectLong,\n        KeySchema: _json,\n        ProvisionedThroughput: _json,\n        TableArn: __expectString,\n        TableCreationDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableId: __expectString,\n        TableName: __expectString,\n        TableSizeBytes: __expectLong,\n    });\n};\nconst de_SourceTableFeatureDetails = (output, context) => {\n    return take(output, {\n        GlobalSecondaryIndexes: _json,\n        LocalSecondaryIndexes: _json,\n        SSEDescription: (_) => de_SSEDescription(_, context),\n        StreamDescription: _json,\n        TimeToLiveDescription: _json,\n    });\n};\nconst de_SSEDescription = (output, context) => {\n    return take(output, {\n        InaccessibleEncryptionDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        KMSMasterKeyArn: __expectString,\n        SSEType: __expectString,\n        Status: __expectString,\n    });\n};\nconst de_TableAutoScalingDescription = (output, context) => {\n    return take(output, {\n        Replicas: (_) => de_ReplicaAutoScalingDescriptionList(_, context),\n        TableName: __expectString,\n        TableStatus: __expectString,\n    });\n};\nconst de_TableClassSummary = (output, context) => {\n    return take(output, {\n        LastUpdateDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableClass: __expectString,\n    });\n};\nconst de_TableDescription = (output, context) => {\n    return take(output, {\n        ArchivalSummary: (_) => de_ArchivalSummary(_, context),\n        AttributeDefinitions: _json,\n        BillingModeSummary: (_) => de_BillingModeSummary(_, context),\n        CreationDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DeletionProtectionEnabled: __expectBoolean,\n        GlobalSecondaryIndexes: (_) => de_GlobalSecondaryIndexDescriptionList(_, context),\n        GlobalTableVersion: __expectString,\n        ItemCount: __expectLong,\n        KeySchema: _json,\n        LatestStreamArn: __expectString,\n        LatestStreamLabel: __expectString,\n        LocalSecondaryIndexes: _json,\n        ProvisionedThroughput: (_) => de_ProvisionedThroughputDescription(_, context),\n        Replicas: (_) => de_ReplicaDescriptionList(_, context),\n        RestoreSummary: (_) => de_RestoreSummary(_, context),\n        SSEDescription: (_) => de_SSEDescription(_, context),\n        StreamSpecification: _json,\n        TableArn: __expectString,\n        TableClassSummary: (_) => de_TableClassSummary(_, context),\n        TableId: __expectString,\n        TableName: __expectString,\n        TableSizeBytes: __expectLong,\n        TableStatus: __expectString,\n    });\n};\nconst de_TransactGetItemsOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        Responses: (_) => de_ItemResponseList(_, context),\n    });\n};\nconst de_TransactionCanceledException = (output, context) => {\n    return take(output, {\n        CancellationReasons: (_) => de_CancellationReasonList(_, context),\n        Message: __expectString,\n    });\n};\nconst de_TransactWriteItemsOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        ItemCollectionMetrics: (_) => de_ItemCollectionMetricsPerTable(_, context),\n    });\n};\nconst de_UpdateContinuousBackupsOutput = (output, context) => {\n    return take(output, {\n        ContinuousBackupsDescription: (_) => de_ContinuousBackupsDescription(_, context),\n    });\n};\nconst de_UpdateGlobalTableOutput = (output, context) => {\n    return take(output, {\n        GlobalTableDescription: (_) => de_GlobalTableDescription(_, context),\n    });\n};\nconst de_UpdateGlobalTableSettingsOutput = (output, context) => {\n    return take(output, {\n        GlobalTableName: __expectString,\n        ReplicaSettings: (_) => de_ReplicaSettingsDescriptionList(_, context),\n    });\n};\nconst de_UpdateItemOutput = (output, context) => {\n    return take(output, {\n        Attributes: (_) => de_AttributeMap(_, context),\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        ItemCollectionMetrics: (_) => de_ItemCollectionMetrics(_, context),\n    });\n};\nconst de_UpdateTableOutput = (output, context) => {\n    return take(output, {\n        TableDescription: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_UpdateTableReplicaAutoScalingOutput = (output, context) => {\n    return take(output, {\n        TableAutoScalingDescription: (_) => de_TableAutoScalingDescription(_, context),\n    });\n};\nconst de_WriteRequest = (output, context) => {\n    return take(output, {\n        DeleteRequest: (_) => de_DeleteRequest(_, context),\n        PutRequest: (_) => de_PutRequest(_, context),\n    });\n};\nconst de_WriteRequests = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_WriteRequest(entry, context);\n    });\n    return retVal;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": `DynamoDB_20120810.${operation}`,\n    };\n}\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n", "import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_DescribeEndpointsCommand, se_DescribeEndpointsCommand } from \"../protocols/Aws_json1_0\";\nexport class DescribeEndpointsCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeEndpointsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"DynamoDBClient\";\n        const commandName = \"DescribeEndpointsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_DescribeEndpointsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_DescribeEndpointsCommand(output, context);\n    }\n}\n", "import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_PutItemCommand, se_PutItemCommand } from \"../protocols/Aws_json1_0\";\nexport class PutItemCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, PutItemCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"DynamoDBClient\";\n        const commandName = \"PutItemCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_PutItemCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_PutItemCommand(output, context);\n    }\n}\n", "const ENV_ENDPOINT_DISCOVERY = [\"AWS_ENABLE_ENDPOINT_DISCOVERY\", \"AWS_ENDPOINT_DISCOVERY_ENABLED\"];\nconst CONFIG_ENDPOINT_DISCOVERY = \"endpoint_discovery_enabled\";\nconst isFalsy = (value) => [\"false\", \"0\"].indexOf(value) >= 0;\nexport const NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        for (let i = 0; i < ENV_ENDPOINT_DISCOVERY.length; i++) {\n            const envKey = ENV_ENDPOINT_DISCOVERY[i];\n            if (envKey in env) {\n                const value = env[envKey];\n                if (value === \"\") {\n                    throw Error(`Environment variable ${envKey} can't be empty of undefined, got \"${value}\"`);\n                }\n                return !isFalsy(value);\n            }\n        }\n    },\n    configFileSelector: (profile) => {\n        if (CONFIG_ENDPOINT_DISCOVERY in profile) {\n            const value = profile[CONFIG_ENDPOINT_DISCOVERY];\n            if (value === undefined) {\n                throw Error(`Shared config entry ${CONFIG_ENDPOINT_DISCOVERY} can't be undefined, got \"${value}\"`);\n            }\n            return !isFalsy(value);\n        }\n    },\n    default: undefined,\n};\n", "import LRUCache from \"mnemonist/lru-cache\";\nexport class EndpointCache {\n    constructor(capacity) {\n        this.cache = new LRUCache(capacity);\n    }\n    getEndpoint(key) {\n        const endpointsWithExpiry = this.get(key);\n        if (!endpointsWithExpiry || endpointsWithExpiry.length === 0) {\n            return undefined;\n        }\n        const endpoints = endpointsWithExpiry.map((endpoint) => endpoint.Address);\n        return endpoints[Math.floor(Math.random() * endpoints.length)];\n    }\n    get(key) {\n        if (!this.has(key)) {\n            return;\n        }\n        const value = this.cache.get(key);\n        if (!value) {\n            return;\n        }\n        const now = Date.now();\n        const endpointsWithExpiry = value.filter((endpoint) => now < endpoint.Expires);\n        if (endpointsWithExpiry.length === 0) {\n            this.delete(key);\n            return undefined;\n        }\n        return endpointsWithExpiry;\n    }\n    set(key, endpoints) {\n        const now = Date.now();\n        this.cache.set(key, endpoints.map(({ Address, CachePeriodInMinutes }) => ({\n            Address,\n            Expires: now + CachePeriodInMinutes * 60 * 1000,\n        })));\n    }\n    delete(key) {\n        this.cache.set(key, []);\n    }\n    has(key) {\n        if (!this.cache.has(key)) {\n            return false;\n        }\n        const endpoints = this.cache.peek(key);\n        if (!endpoints) {\n            return false;\n        }\n        return endpoints.length > 0;\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n", "import { EndpointCache } from \"@aws-sdk/endpoint-cache\";\nexport const resolveEndpointDiscoveryConfig = (input, { endpointDiscoveryCommandCtor }) => ({\n    ...input,\n    endpointDiscoveryCommandCtor,\n    endpointCache: new EndpointCache(input.endpointCacheSize ?? 1000),\n    endpointDiscoveryEnabled: input.endpointDiscoveryEnabled !== undefined\n        ? () => Promise.resolve(input.endpointDiscoveryEnabled)\n        : input.endpointDiscoveryEnabledProvider,\n    isClientEndpointDiscoveryEnabled: input.endpointDiscoveryEnabled !== undefined,\n});\n", "export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"dynamodb\",\n    };\n};\n", "{\n  \"name\": \"@aws-sdk/client-dynamodb\",\n  \"description\": \"AWS SDK for JavaScript Dynamodb Client for Node.js, Browser and React Native\",\n  \"version\": \"3.329.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"tsc -p tsconfig.cjs.json\",\n    \"build:docs\": \"typedoc\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo dynamodb\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"3.0.0\",\n    \"@aws-crypto/sha256-js\": \"3.0.0\",\n    \"@aws-sdk/client-sts\": \"3.329.0\",\n    \"@aws-sdk/config-resolver\": \"3.329.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.329.0\",\n    \"@aws-sdk/fetch-http-handler\": \"3.329.0\",\n    \"@aws-sdk/hash-node\": \"3.329.0\",\n    \"@aws-sdk/invalid-dependency\": \"3.329.0\",\n    \"@aws-sdk/middleware-content-length\": \"3.329.0\",\n    \"@aws-sdk/middleware-endpoint\": \"3.329.0\",\n    \"@aws-sdk/middleware-endpoint-discovery\": \"3.329.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.329.0\",\n    \"@aws-sdk/middleware-logger\": \"3.329.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.329.0\",\n    \"@aws-sdk/middleware-retry\": \"3.329.0\",\n    \"@aws-sdk/middleware-serde\": \"3.329.0\",\n    \"@aws-sdk/middleware-signing\": \"3.329.0\",\n    \"@aws-sdk/middleware-stack\": \"3.329.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.329.0\",\n    \"@aws-sdk/node-config-provider\": \"3.329.0\",\n    \"@aws-sdk/node-http-handler\": \"3.329.0\",\n    \"@aws-sdk/protocol-http\": \"3.329.0\",\n    \"@aws-sdk/smithy-client\": \"3.329.0\",\n    \"@aws-sdk/types\": \"3.329.0\",\n    \"@aws-sdk/url-parser\": \"3.329.0\",\n    \"@aws-sdk/util-base64\": \"3.310.0\",\n    \"@aws-sdk/util-body-length-browser\": \"3.310.0\",\n    \"@aws-sdk/util-body-length-node\": \"3.310.0\",\n    \"@aws-sdk/util-defaults-mode-browser\": \"3.329.0\",\n    \"@aws-sdk/util-defaults-mode-node\": \"3.329.0\",\n    \"@aws-sdk/util-endpoints\": \"3.329.0\",\n    \"@aws-sdk/util-retry\": \"3.329.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.329.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.329.0\",\n    \"@aws-sdk/util-utf8\": \"3.310.0\",\n    \"@aws-sdk/util-waiter\": \"3.329.0\",\n    \"tslib\": \"^2.5.0\",\n    \"uuid\": \"^8.3.2\"\n  },\n  \"devDependencies\": {\n    \"@aws-sdk/service-client-documentation-generator\": \"3.310.0\",\n    \"@tsconfig/node14\": \"1.0.3\",\n    \"@types/node\": \"^14.14.31\",\n    \"@types/uuid\": \"^8.3.0\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typedoc\": \"0.23.23\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-dynamodb\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-dynamodb\"\n  }\n}\n", "const u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = \"isSet\", b = \"tree\", c = \"error\", d = \"endpoint\", e = \"PartitionResult\", f = \"getAttr\", g = \"stringEquals\", h = { [u]: false, \"type\": \"String\" }, i = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, j = { [x]: \"Endpoint\" }, k = { [v]: \"booleanEquals\", [w]: [{ [x]: \"UseFIPS\" }, true] }, l = { [v]: \"booleanEquals\", [w]: [{ [x]: \"UseDualStack\" }, true] }, m = {}, n = { [x]: \"Region\" }, o = { [v]: \"booleanEquals\", [w]: [true, { [v]: f, [w]: [{ [x]: e }, \"supportsFIPS\"] }] }, p = { [x]: e }, q = { [v]: \"booleanEquals\", [w]: [true, { [v]: f, [w]: [p, \"supportsDualStack\"] }] }, r = [k], s = [l], t = [n];\nconst _data = { version: \"1.0\", parameters: { Region: h, UseDualStack: i, UseFIPS: i, Endpoint: h }, rules: [{ conditions: [{ [v]: a, [w]: [j] }], type: b, rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: j, properties: m, headers: m }, type: d }] }] }, { type: b, rules: [{ conditions: [{ [v]: a, [w]: t }], type: b, rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: e }], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ conditions: [o, q], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://dynamodb-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: d }] }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: r, type: b, rules: [{ conditions: [o], type: b, rules: [{ type: b, rules: [{ conditions: [{ [v]: g, [w]: [\"aws-us-gov\", { [v]: f, [w]: [p, \"name\"] }] }], endpoint: { url: \"https://dynamodb.{Region}.amazonaws.com\", properties: m, headers: m }, type: d }, { endpoint: { url: \"https://dynamodb-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: s, type: b, rules: [{ conditions: [q], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://dynamodb.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: d }] }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { type: b, rules: [{ conditions: [{ [v]: g, [w]: [n, \"local\"] }], endpoint: { url: \"http://localhost:8000\", properties: { authSchemes: [{ name: \"sigv4\", signingName: \"dynamodb\", signingRegion: \"us-east-1\" }] }, headers: m }, type: d }, { endpoint: { url: \"https://dynamodb.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: d }] }] }] }, { error: \"Invalid Configuration: Missing Region\", type: c }] }] };\nexport const ruleSet = _data;\n", "import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n", "import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2012-08-10\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"DynamoDB\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n", "import packageInfo from \"../package.json\";\nimport { decorateDefaultCredentialProvider } from \"@aws-sdk/client-sts\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { defaultProvider as credentialDefaultProvider } from \"@aws-sdk/credential-provider-node\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS } from \"@aws-sdk/middleware-endpoint-discovery\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? decorateDefaultCredentialProvider(credentialDefaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        endpointDiscoveryEnabledProvider: config?.endpointDiscoveryEnabledProvider ?? loadNodeConfig(NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n", "import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { resolveEndpointDiscoveryConfig, } from \"@aws-sdk/middleware-endpoint-discovery\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig, } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { DescribeEndpointsCommand, } from \"./commands/DescribeEndpointsCommand\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class DynamoDBClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveAwsAuthConfig(_config_5);\n        const _config_7 = resolveUserAgentConfig(_config_6);\n        const _config_8 = resolveEndpointDiscoveryConfig(_config_7, {\n            endpointDiscoveryCommandCtor: DescribeEndpointsCommand,\n        });\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getAwsAuthPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n", "export const convertToAttr = (data, options) => {\n    if (data === undefined) {\n        throw new Error(`Pass options.removeUndefinedValues=true to remove undefined values from map/array/set.`);\n    }\n    else if (data === null && typeof data === \"object\") {\n        return convertToNullAttr();\n    }\n    else if (Array.isArray(data)) {\n        return convertToListAttr(data, options);\n    }\n    else if (data?.constructor?.name === \"Set\") {\n        return convertToSetAttr(data, options);\n    }\n    else if (data?.constructor?.name === \"Map\") {\n        return convertToMapAttrFromIterable(data, options);\n    }\n    else if (data?.constructor?.name === \"Object\" ||\n        (!data.constructor && typeof data === \"object\")) {\n        return convertToMapAttrFromEnumerableProps(data, options);\n    }\n    else if (isBinary(data)) {\n        if (data.length === 0 && options?.convertEmptyValues) {\n            return convertToNullAttr();\n        }\n        return convertToBinaryAttr(data);\n    }\n    else if (typeof data === \"boolean\" || data?.constructor?.name === \"Boolean\") {\n        return { BOOL: data.valueOf() };\n    }\n    else if (typeof data === \"number\" || data?.constructor?.name === \"Number\") {\n        return convertToNumberAttr(data);\n    }\n    else if (typeof data === \"bigint\") {\n        return convertToBigIntAttr(data);\n    }\n    else if (typeof data === \"string\" || data?.constructor?.name === \"String\") {\n        if (data.length === 0 && options?.convertEmptyValues) {\n            return convertToNullAttr();\n        }\n        return convertToStringAttr(data);\n    }\n    else if (options?.convertClassInstanceToMap && typeof data === \"object\") {\n        return convertToMapAttrFromEnumerableProps(data, options);\n    }\n    throw new Error(`Unsupported type passed: ${data}. Pass options.convertClassInstanceToMap=true to marshall typeof object as map attribute.`);\n};\nconst convertToListAttr = (data, options) => ({\n    L: data\n        .filter((item) => !options?.removeUndefinedValues || (options?.removeUndefinedValues && item !== undefined))\n        .map((item) => convertToAttr(item, options)),\n});\nconst convertToSetAttr = (set, options) => {\n    const setToOperate = options?.removeUndefinedValues ? new Set([...set].filter((value) => value !== undefined)) : set;\n    if (!options?.removeUndefinedValues && setToOperate.has(undefined)) {\n        throw new Error(`Pass options.removeUndefinedValues=true to remove undefined values from map/array/set.`);\n    }\n    if (setToOperate.size === 0) {\n        if (options?.convertEmptyValues) {\n            return convertToNullAttr();\n        }\n        throw new Error(`Pass a non-empty set, or options.convertEmptyValues=true.`);\n    }\n    const item = setToOperate.values().next().value;\n    if (typeof item === \"number\") {\n        return {\n            NS: Array.from(setToOperate)\n                .map(convertToNumberAttr)\n                .map((item) => item.N),\n        };\n    }\n    else if (typeof item === \"bigint\") {\n        return {\n            NS: Array.from(setToOperate)\n                .map(convertToBigIntAttr)\n                .map((item) => item.N),\n        };\n    }\n    else if (typeof item === \"string\") {\n        return {\n            SS: Array.from(setToOperate)\n                .map(convertToStringAttr)\n                .map((item) => item.S),\n        };\n    }\n    else if (isBinary(item)) {\n        return {\n            BS: Array.from(setToOperate)\n                .map(convertToBinaryAttr)\n                .map((item) => item.B),\n        };\n    }\n    else {\n        throw new Error(`Only Number Set (NS), Binary Set (BS) or String Set (SS) are allowed.`);\n    }\n};\nconst convertToMapAttrFromIterable = (data, options) => ({\n    M: ((data) => {\n        const map = {};\n        for (const [key, value] of data) {\n            if (typeof value !== \"function\" && (value !== undefined || !options?.removeUndefinedValues)) {\n                map[key] = convertToAttr(value, options);\n            }\n        }\n        return map;\n    })(data),\n});\nconst convertToMapAttrFromEnumerableProps = (data, options) => ({\n    M: ((data) => {\n        const map = {};\n        for (const key in data) {\n            const value = data[key];\n            if (typeof value !== \"function\" && (value !== undefined || !options?.removeUndefinedValues)) {\n                map[key] = convertToAttr(value, options);\n            }\n        }\n        return map;\n    })(data),\n});\nconst convertToNullAttr = () => ({ NULL: true });\nconst convertToBinaryAttr = (data) => ({ B: data });\nconst convertToStringAttr = (data) => ({ S: data.toString() });\nconst convertToBigIntAttr = (data) => ({ N: data.toString() });\nconst validateBigIntAndThrow = (errorPrefix) => {\n    throw new Error(`${errorPrefix} ${typeof BigInt === \"function\" ? \"Use BigInt.\" : \"Pass string value instead.\"} `);\n};\nconst convertToNumberAttr = (num) => {\n    if ([Number.NaN, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY]\n        .map((val) => val.toString())\n        .includes(num.toString())) {\n        throw new Error(`Special numeric value ${num.toString()} is not allowed`);\n    }\n    else if (num > Number.MAX_SAFE_INTEGER) {\n        validateBigIntAndThrow(`Number ${num.toString()} is greater than Number.MAX_SAFE_INTEGER.`);\n    }\n    else if (num < Number.MIN_SAFE_INTEGER) {\n        validateBigIntAndThrow(`Number ${num.toString()} is lesser than Number.MIN_SAFE_INTEGER.`);\n    }\n    return { N: num.toString() };\n};\nconst isBinary = (data) => {\n    const binaryTypes = [\n        \"ArrayBuffer\",\n        \"Blob\",\n        \"Buffer\",\n        \"DataView\",\n        \"File\",\n        \"Int8Array\",\n        \"Uint8Array\",\n        \"Uint8ClampedArray\",\n        \"Int16Array\",\n        \"Uint16Array\",\n        \"Int32Array\",\n        \"Uint32Array\",\n        \"Float32Array\",\n        \"Float64Array\",\n        \"BigInt64Array\",\n        \"BigUint64Array\",\n    ];\n    if (data?.constructor) {\n        return binaryTypes.includes(data.constructor.name);\n    }\n    return false;\n};\n", "import { convertToAttr } from \"./convertToAttr\";\nexport function marshall(data, options) {\n    const attributeValue = convertToAttr(data, options);\n    const [key, value] = Object.entries(attributeValue)[0];\n    switch (key) {\n        case \"M\":\n        case \"L\":\n            return value;\n        case \"SS\":\n        case \"NS\":\n        case \"BS\":\n        case \"S\":\n        case \"N\":\n        case \"B\":\n        case \"NULL\":\n        case \"BOOL\":\n        case \"$unknown\":\n        default:\n            return attributeValue;\n    }\n}\n", "import { Session, AuthHandler, GoogleAdapter } from \"sst/node/auth\";\r\nimport { Table } from \"sst/node/table\";\r\nimport { DynamoDBClient, PutItemCommand } from \"@aws-sdk/client-dynamodb\";\r\nimport { marshall } from \"@aws-sdk/util-dynamodb\";\r\n\r\ndeclare module \"sst/node/auth\" {\r\n  export interface SessionTypes {\r\n    user: {\r\n      userID: string;\r\n    };\r\n  }\r\n}\r\n\r\nexport const handler = AuthHandler({\r\n  providers: {\r\n    google: GoogleAdapter({\r\n      mode: \"oidc\",\r\n      clientID: \"85203977808-e3k1hb0dv8pf2e7pighn59li87atqus1.apps.googleusercontent.com\",\r\n      onSuccess: async (tokenset) => {\r\n        const claims = tokenset.claims();\r\n\r\n        const ddb = new DynamoDBClient({});\r\n        await ddb.send(\r\n          new PutItemCommand({\r\n            //@ts-ignore\r\n            TableName: Table.users.tableName,\r\n            Item: marshall({\r\n              userId: claims.sub,\r\n              email: claims.email,\r\n              picture: claims.picture,\r\n              name: claims.given_name,\r\n            }),\r\n          })\r\n        );\r\n\r\n        return Session.parameter({\r\n          //@ts-ignore\r\n          redirect: \"http://localhost:3000\",\r\n          type: \"user\",\r\n          properties: {\r\n            userID: claims.sub,\r\n          },\r\n        });\r\n      },\r\n    }),\r\n  },\r\n});"],
  "mappings": "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",
  "names": ["v", "a", "i", "i", "t", "module", "module", "i", "module", "module", "i", "prefix", "result", "i", "module", "XMLParser", "module", "i", "attStr", "module", "a", "j", "i", "module", "XMLParser", "module", "path", "TlsVersion", "SocketType", "SocketDomain", "LogLevel", "Pkcs11Lib", "InitializeFinalizeBehavior", "AwsSigningAlgorithm", "AwsSignatureType", "AwsSignedBodyValue", "AwsSignedBodyHeaderType", "request", "Hash", "i", "HeaderType", "MessageFlags", "MessageType", "ClientConnectionState", "e", "ClientStreamState", "HttpVersion", "HttpProxyAuthenticationType", "HttpRequest", "HttpProxyConnectionType", "handle", "request", "QoS", "platform", "platform", "request", "ClientSessionBehavior", "RetryJitterType", "ConnectReasonCode", "DisconnectReasonCode", "SubackReasonCode", "UnsubackReasonCode", "PubackReasonCode", "PayloadFormatIndicator", "QoS", "RetainHandlingType", "PacketType", "ClientOperationQueueBehavior", "ClientExtendedValidationAndFlowControl", "e", "privateKey", "request", "e", "platform", "crypto", "require_error", "module", "k", "module", "e", "module", "l", "i", "module", "k", "i", "l", "s", "p", "t", "v", "i", "l", "o", "l", "i", "module", "LRUCache", "i", "l", "module", "exports", "Buffer", "e", "i", "j", "w", "c", "r", "mod", "b", "q", "t", "a", "k", "comb10MulTo", "o", "a2", "a3", "a4", "a5", "a6", "b2", "b3", "b4", "b5", "b6", "w2", "x", "y", "l", "s", "p", "n", "m", "h", "r2", "A", "B", "C", "D", "g", "x2", "prime", "z", "u", "module", "module", "e", "module", "Buffer", "e", "state", "e", "Buffer", "join", "module", "l", "r", "module", "state", "e", "map", "require_der", "module", "Buffer", "header", "i", "j", "size", "out", "state", "module", "p", "i", "require_der", "module", "state", "i", "j", "require_pem", "module", "Buffer", "i", "name", "map", "module", "Buffer", "module", "module", "Buffer", "o", "require_crypto", "module", "createHmac", "c", "e", "module", "createHash", "handler", "module", "r", "v", "t", "a", "e", "createVerifier", "module", "e", "createSigner", "key", "module", "createVerifier", "createSigner", "module", "state", "i", "require_errors", "hmac", "crypto", "parameter", "i", "publicKey", "privateKey", "i", "j", "require_asn1", "i", "parse", "enc$1", "f2", "f", "f3", "der", "keyObject", "parameter", "s", "require_decrypt", "protectedHeader", "require_decrypt", "require_decrypt", "i", "n", "e", "der", "x", "y", "require_encrypt", "require_encrypt", "jwe", "i", "crypto", "hmac", "crypto", "require_verify", "require_verify", "require_verify", "issuer", "require_verify", "require_decrypt", "require_encrypt", "require_sign", "require_sign", "require_sign", "i", "issuer", "require_sign", "require_encrypt", "jwk", "require_base64url", "module", "crypto", "x", "module", "createHash", "fromBase64", "validate", "require_is_key_object", "module", "crypto", "require_base64url", "module", "fromBase64", "require_decode_jwt", "module", "module", "a", "module", "module", "module", "issuer", "module", "module", "module", "module", "TokenSet", "module", "createHash", "require_iterator", "module", "module", "i", "l", "n", "p", "require_lru_cache", "module", "LRUCache", "k", "h", "l", "require_package", "module", "module", "module", "URL", "request", "module", "module", "module", "i", "d", "p", "q", "k", "module", "module", "request", "module", "crypto", "i", "f", "map", "b", "module", "request", "module", "require_client", "module", "crypto", "TokenSet", "request", "k", "issuer", "state", "retry", "privateKey", "i", "module", "module", "require_issuer", "module", "request", "Issuer", "Client", "issuer", "response", "body", "module", "parameter", "state", "require_lib", "module", "Issuer", "Strategy", "TokenSet", "generators", "require_iterator", "module", "l", "i", "require_foreach", "module", "k", "i", "l", "s", "require_typed_arrays", "p", "t", "v", "i", "l", "o", "require_iterables", "l", "i", "require_lru_cache", "module", "LRUCache", "i", "l", "a", "b", "entry", "handler", "handler", "v", "k", "s", "v", "k", "c", "filter", "partition", "request", "FieldPosition", "request", "i", "i", "deserializeMetadata", "throwDefaultError", "deserializeMetadata", "deserializeMetadata", "e", "deserializeMetadata", "throwDefaultError", "k", "logger", "request", "SelectorType", "env", "env", "env", "request", "request", "logger", "request", "RETRY_MODES", "t", "env", "request", "e", "i", "i", "Buffer", "Buffer", "c", "value", "serialized", "cloneQuery", "request", "request", "request", "credentials", "partition", "partition", "HttpAuthLocation", "HostAddressType", "EndpointURLScheme", "RequestHandlerProtocol", "hostname", "protocol", "k", "v", "c", "logger", "v", "k", "e", "request", "defaultUserAgent", "prefix", "buildHttpRpcRequest", "buildHttpRpcRequest", "parseBody", "deserializeMetadata", "parseErrorBody", "throwDefaultError", "parseBody", "deserializeMetadata", "parseErrorBody", "throwDefaultError", "deserializeMetadata", "deserializeMetadata", "deserializeMetadata", "collectBody", "collectBodyString", "throwDefaultError", "buildHttpRpcRequest", "parseBody", "parseErrorBody", "logger", "request", "logger", "request", "resolveClientEndpointParameters", "package_default", "e", "logger", "join", "join", "join", "join", "map", "fsPromises", "readFile", "fsPromises", "swallowError", "Buffer", "Buffer", "i", "fromEnv", "e", "e", "fromStatic", "fromEnv", "fromStatic", "Endpoint", "env", "EndpointMode", "env", "logger", "logger", "e", "maxRetries", "profile", "resolveProcessCredentials", "deserializeMetadata", "parseBody", "parseErrorBody", "loadRestJsonErrorCode", "throwDefaultError", "throwDefaultError", "deserializeMetadata", "collectBody", "collectBodyString", "parseBody", "parseErrorBody", "loadRestJsonErrorCode", "k", "logger", "request", "resolveClientEndpointParameters", "package_default", "Buffer", "createHash", "createHash", "Buffer", "i", "NODEJS_TIMEOUT_ERROR_CODES", "request", "request", "httpRequest", "request", "request", "request", "NODEJS_TIMEOUT_ERROR_CODES", "s", "e", "env", "env", "e", "getRuntimeConfig", "package_default", "getRuntimeConfig", "resolveClientEndpointParameters", "ExpiredTokenException", "InvalidRequestException", "deserializeMetadata", "parseBody", "parseErrorBody", "loadRestJsonErrorCode", "de_ExpiredTokenExceptionRes", "de_InvalidRequestExceptionRes", "throwDefaultError", "throwDefaultError", "deserializeMetadata", "de_ExpiredTokenExceptionRes", "ExpiredTokenException", "deserializeMetadata", "de_InvalidRequestExceptionRes", "InvalidRequestException", "collectBody", "collectBodyString", "parseBody", "collectBodyString", "parseErrorBody", "loadRestJsonErrorCode", "k", "logger", "request", "resolveClientEndpointParameters", "package_default", "p", "q", "r", "s", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "_data", "ruleSet", "defaultEndpointResolver", "ruleSet", "getRuntimeConfig", "defaultEndpointResolver", "getRuntimeConfig", "package_default", "getRuntimeConfig", "resolveClientEndpointParameters", "fsPromises", "fsPromises", "e", "EXPIRE_WINDOW_MS", "e", "resolveProcessCredentials", "ENV_IMDS_DISABLED", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "_data", "ruleSet", "defaultEndpointResolver", "ruleSet", "getRuntimeConfig", "defaultEndpointResolver", "getRuntimeConfig", "package_default", "getRuntimeConfig", "resolveClientEndpointParameters", "getDefaultRoleAssumer", "getDefaultRoleAssumerWithWebIdentity", "decorateDefaultCredentialProvider", "s", "t", "u", "v", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "_data", "ruleSet", "defaultEndpointResolver", "ruleSet", "getRuntimeConfig", "defaultEndpointResolver", "getRuntimeConfig", "decorateDefaultCredentialProvider", "getRuntimeConfig", "i", "env", "prefix", "c", "handler", "c", "k", "v", "prefix", "x", "create", "mod", "state", "state", "InternalServerError", "ResourceNotFoundException", "AttributeValue", "sharedHeaders", "buildHttpRpcRequest", "sharedHeaders", "buildHttpRpcRequest", "parseBody", "deserializeMetadata", "parseErrorBody", "loadRestJsonErrorCode", "throwDefaultError", "parseBody", "deserializeMetadata", "parseErrorBody", "loadRestJsonErrorCode", "de_InternalServerErrorRes", "de_ResourceNotFoundExceptionRes", "throwDefaultError", "deserializeMetadata", "de_InternalServerErrorRes", "InternalServerError", "deserializeMetadata", "deserializeMetadata", "deserializeMetadata", "deserializeMetadata", "de_ResourceNotFoundExceptionRes", "ResourceNotFoundException", "deserializeMetadata", "deserializeMetadata", "e", "e", "e", "e", "e", "e", "deserializeMetadata", "collectBody", "collectBodyString", "throwDefaultError", "buildHttpRpcRequest", "sharedHeaders", "parseBody", "parseErrorBody", "loadRestJsonErrorCode", "k", "logger", "request", "logger", "request", "env", "i", "LRUCache", "resolveClientEndpointParameters", "package_default", "u", "v", "w", "x", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "_data", "ruleSet", "defaultEndpointResolver", "ruleSet", "getRuntimeConfig", "defaultEndpointResolver", "getRuntimeConfig", "decorateDefaultCredentialProvider", "package_default", "getRuntimeConfig", "resolveClientEndpointParameters", "item", "data", "map"]
}
